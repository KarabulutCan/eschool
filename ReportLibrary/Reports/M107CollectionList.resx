<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="sqlDataSource4.SelectCommand" xml:space="preserve">
    <value>
IF (@language = 'tr-TR')
BEGIN
	SELECT CategoryID, CategoryName, CategorySubID
	FROM Parameter
	WHERE CategorySubID = @registrationTypeSubID
END

ELSE
BEGIN
	SELECT CategoryID, Language1 as CategoryName, CategorySubID
	FROM Parameter
	WHERE CategorySubID = @registrationTypeSubID
END
</value>
  </data>
  <data name="textBox27.Value" xml:space="preserve">
    <value>= Fields.CompanyName</value>
  </data>
  <data name="reportParameter11.Text" xml:space="preserve">
    <value>Muh.Fiş. No Sıralı</value>
  </data>
  <data name="textBox28.Value" xml:space="preserve">
    <value>Sınıfı</value>
  </data>
  <data name="textBox26.Value" xml:space="preserve">
    <value>= Fields.ReceiptNo</value>
  </data>
  <data name="reportParameter5.Text" xml:space="preserve">
    <value>Öğrenci Adı Sıralı</value>
  </data>
  <data name="textBox23.Value" xml:space="preserve">
    <value>Dönemi.:</value>
  </data>
  <data name="textBox9.Value" xml:space="preserve">
    <value>= Fields.ParentName</value>
  </data>
  <data name="reportParameter10.Text" xml:space="preserve">
    <value>Tahsil Makbuzu Sıralı</value>
  </data>
  <data name="textBox47.Value" xml:space="preserve">
    <value>TOPLAM</value>
  </data>
  <data name="textBox38.Value" xml:space="preserve">
    <value>= Fields.Fee01</value>
  </data>
  <data name="textBox36.Value" xml:space="preserve">
    <value>Tutar</value>
  </data>
  <data name="textBox5.Value" xml:space="preserve">
    <value>= Fields.DateOfRegistration</value>
  </data>
  <data name="textBox6.Value" xml:space="preserve">
    <value>= Fields.DateTo</value>
  </data>
  <data name="sqlDataSource111.SelectCommand" xml:space="preserve">
    <value>SELECT TempM101.TypeCategoryName, TempM101.Fee01, TempM101.Fee02, TempM101.Fee03, TempM101.Fee04, TempM101.Fee05, TempM101.Fee06, TempM101.Fee07, TempM101.Fee08
FROM TempM101 
	INNER JOIN Users AS U ON U.UserID = @userID
Where   TempM101.SchoolID = U.SchoolID  and TempM101.UserID = @userID and TempM101.Status IS NOT NULL;</value>
  </data>
  <data name="textBox14.Value" xml:space="preserve">
    <value>= Fields.TypeAndNo</value>
  </data>
  <data name="sqlDataSource1.SelectCommand" xml:space="preserve">
    <value>SELECT        Student.StudentID, Student.StudentSerialNumber, Student.StudentNumber, Student.FirstName, Student.LastName, Student.StudentClassroomID, Student.IsPension, Classroom.ClassroomName, Classroom.ClassroomID, 
                         Classroom.ClassroomTeacher, Student.GenderTypeCategoryID, Parameter.CategoryName, Parameter.CategoryID
FROM            Student INNER JOIN
                         Classroom ON Student.StudentClassroomID = Classroom.ClassroomID AND Student.StudentClassroomID = Classroom.ClassroomID 
                        INNER JOIN
                         Parameter ON Student.GenderTypeCategoryID = Parameter.CategoryID
WHERE        (Student.StudentClassroomID = @Classroom)</value>
  </data>
  <data name="reportParameter6.Text" xml:space="preserve">
    <value>Veli Adı Sıralı</value>
  </data>
  <data name="textBox34.Value" xml:space="preserve">
    <value>= Fields.ClassroomName</value>
  </data>
  <data name="textBox1.Value" xml:space="preserve">
    <value>Bitiş Tarihi.:</value>
  </data>
  <data name="textBox2.Value" xml:space="preserve">
    <value>Öğrenci Adı Soyadı</value>
  </data>
  <data name="textBox10.Value" xml:space="preserve">
    <value>Çek/Senet Türü ve Nosu</value>
  </data>
  <data name="reportParameter8.Text" xml:space="preserve">
    <value>Tahsil Tarihi Sıralı</value>
  </data>
  <data name="textBox48.Value" xml:space="preserve">
    <value>= Sum(Fields.Fee01)</value>
  </data>
  <data name="textBox30.Value" xml:space="preserve">
    <value>= Fields.AccountReceipt</value>
  </data>
  <data name="textBox15.Value" xml:space="preserve">
    <value>= Fields.DateFrom</value>
  </data>
  <data name="textBox4.Value" xml:space="preserve">
    <value>Veli Adı Soyadı</value>
  </data>
  <data name="textBox37.Value" xml:space="preserve">
    <value>Muh.Fiş Nosu</value>
  </data>
  <data name="textBox35.Value" xml:space="preserve">
    <value>Tahsil Makbuzu</value>
  </data>
  <data name="reportParameter9.Text" xml:space="preserve">
    <value>Borç Türü Sıralı</value>
  </data>
  <data name="textBox8.Value" xml:space="preserve">
    <value>Tahsil Tarihi</value>
  </data>
  <data name="textBox3.Value" xml:space="preserve">
    <value>= Fields.StudentName</value>
  </data>
  <data name="textBox13.Value" xml:space="preserve">
    <value>= Fields.CompanyAddress</value>
  </data>
  <data name="textBox11.Value" xml:space="preserve">
    <value>Tahsilat Listesi</value>
  </data>
  <data name="sqlDataSource3.SelectCommand" xml:space="preserve">
    <value>SELECT        ClassroomName, ClassroomID
FROM            Classroom
              INNER JOIN Users AS U ON U.UserID = @userID
WHERE Classroom.SchoolID = U.SchoolID
ORDER BY Classroom.SortOrder, Classroom.ClassroomName ASC</value>
  </data>
  <data name="textBox29.Value" xml:space="preserve">
    <value>= Fields.UserPeriod</value>
  </data>
  <data name="textBox12.Value" xml:space="preserve">
    <value>Başlangıç Tarih.:</value>
  </data>
  <data name="textBox33.Value" xml:space="preserve">
    <value>#</value>
  </data>
  <data name="reportParameter12.Text" xml:space="preserve">
    <value>Tutar</value>
  </data>
  <data name="textBox32.Value" xml:space="preserve">
    <value>= RowNumber()</value>
  </data>
  <data name="sqlDataSource2.SelectCommand" xml:space="preserve">
    <value>SELECT        S.CompanyName, S.CompanyAddress, S.Phone1, S.Phone2, S.MobilePhone, S.Fax, S.TaxOffice, S.TaxNo, S.CompanyEmail, S.WebSite, U.UserPeriod
FROM            SchoolInfo AS S CROSS JOIN
                         Users AS U
WHERE        (S.SchoolID = @schoolCode) AND (U.UserID = @userID)</value>
  </data>
  <data name="reportParameter4.Text" xml:space="preserve">
    <value>Sınıf Sıralı</value>
  </data>
  <data name="sqlDataSource5.SelectCommand" xml:space="preserve">
    <value>
IF (@language = 'tr-TR')
BEGIN
	SELECT CategoryID, CategoryName, CategorySubID
	FROM Parameter
	WHERE CategorySubID = @statuCategorySubID
END

ELSE
BEGIN
	SELECT CategoryID, Language1 as CategoryName, CategorySubID
	FROM Parameter
	WHERE CategorySubID = @statuCategorySubID
END
</value>
  </data>
  <metadata name="$this.Language" type="System.Globalization.CultureInfo, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>tr-TR</value>
  </metadata>
  <metadata name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting, Version=15.2.21.1125, Culture=neutral, PublicKeyToken=a9d7983dfcc261be">
    <value>0.1cm</value>
  </metadata>
  <metadata name="$this.ShowWatermarks" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="$this.ShowDimensions" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="sqlDataSource111.ParameterValues" xml:space="preserve">
    <value>{"@userID":"2"}</value>
  </metadata>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="sqlDataSource5.ParameterValues" xml:space="preserve">
    <value>{"@statuCategorySubID":"4"}</value>
  </metadata>
  <metadata name="sqlDataSource3.ParameterValues" xml:space="preserve">
    <value>{"@userID":"2"}</value>
  </metadata>
  <metadata name="sqlDataSource2.ParameterValues" xml:space="preserve">
    <value>{"@userID":"2"}</value>
  </metadata>
  <metadata name="$this.SnapToSnapLines" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="sqlDataSource4.ParameterValues" xml:space="preserve">
    <value>{"@registrationTypeSubID":"3"}</value>
  </metadata>
</root>