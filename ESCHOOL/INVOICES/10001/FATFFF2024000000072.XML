<?xml version="1.0" encoding="utf-8"?>
<Invoice xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" xmlns:ubltr="urn:oasis:names:specification:ubl:schema:xsd:TurkishCustomizationExtensionComponents" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:ccts="urn:un:unece:uncefact:documentation:2" xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2 UBL-Invoice-2.1.xsd" xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2">
  <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
  <cbc:CustomizationID>TR1.2</cbc:CustomizationID>
  <cbc:ProfileID>ISTISNAFATURASI</cbc:ProfileID>
  <cbc:ID>FFF2024000000072</cbc:ID>
  <cbc:CopyIndicator>false</cbc:CopyIndicator>
  <cbc:UUID>66583332-66af-46c1-9f99-5c56620fabac</cbc:UUID>
  <cbc:IssueDate>2024-04-05</cbc:IssueDate>
  <cbc:IssueTime>12:26:01</cbc:IssueTime>
  <cbc:InvoiceTypeCode>SATIS</cbc:InvoiceTypeCode>
  <cbc:Note>(İstisna Faturası Kodu 1122)</cbc:Note>
  <cbc:Note>YALNIZ:ONBİN TL</cbc:Note>
  <cbc:DocumentCurrencyCode listVersionID="2001" listName="Currency" listID="ISO 4217 Alpha" listAgencyName="United Nations Economic Commission for Europe">TRY</cbc:DocumentCurrencyCode>
  <cbc:LineCountNumeric>1</cbc:LineCountNumeric>
  <cac:AdditionalDocumentReference>
    <cbc:ID>invoiceSchmetronControl</cbc:ID>
    <cbc:IssueDate>2024-04-05</cbc:IssueDate>
    <cac:Attachment>
      <cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" mimeCode="application/xml" filename="efatura.xslt">77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjx4c2w6c3R5bGVzaGVldCB2ZXJzaW9uPSIyLjAiIHhtbG5zOnhzbD0iaHR0cDovL3d3dy53My5vcmcvMTk5OS9YU0wvVHJhbnNmb3JtIiB4bWxuczpjYWM9InVybjpvYXNpczpuYW1lczpzcGVjaWZpY2F0aW9uOnVibDpzY2hlbWE6eHNkOkNvbW1vbkFnZ3JlZ2F0ZUNvbXBvbmVudHMtMiIgeG1sbnM6Y2JjPSJ1cm46b2FzaXM6bmFtZXM6c3BlY2lmaWNhdGlvbjp1Ymw6c2NoZW1hOnhzZDpDb21tb25CYXNpY0NvbXBvbmVudHMtMiIgeG1sbnM6Y2N0cz0idXJuOnVuOnVuZWNlOnVuY2VmYWN0OmRvY3VtZW50YXRpb246MiIgeG1sbnM6Y2xtNTQyMTc9InVybjp1bjp1bmVjZTp1bmNlZmFjdDpjb2RlbGlzdDpzcGVjaWZpY2F0aW9uOjU0MjE3OjIwMDEiCXhtbG5zOmNsbTU2Mzk9InVybjp1bjp1bmVjZTp1bmNlZmFjdDpjb2RlbGlzdDpzcGVjaWZpY2F0aW9uOjU2Mzk6MTk4OCIJeG1sbnM6Y2xtNjY0MTE9InVybjp1bjp1bmVjZTp1bmNlZmFjdDpjb2RlbGlzdDpzcGVjaWZpY2F0aW9uOjY2NDExOjIwMDEiCXhtbG5zOmNsbUlBTkFNSU1FTWVkaWFUeXBlPSJ1cm46dW46dW5lY2U6dW5jZWZhY3Q6Y29kZWxpc3Q6c3BlY2lmaWNhdGlvbjpJQU5BTUlNRU1lZGlhVHlwZToyMDAzIiB4bWxuczpmbj0iaHR0cDovL3d3dy53My5vcmcvMjAwNS94cGF0aC1mdW5jdGlvbnMiIHhtbG5zOmxpbms9Imh0dHA6Ly93d3cueGJybC5vcmcvMjAwMy9saW5rYmFzZSIJeG1sbnM6bjE9InVybjpvYXNpczpuYW1lczpzcGVjaWZpY2F0aW9uOnVibDpzY2hlbWE6eHNkOkludm9pY2UtMiIJeG1sbnM6cWR0PSJ1cm46b2FzaXM6bmFtZXM6c3BlY2lmaWNhdGlvbjp1Ymw6c2NoZW1hOnhzZDpRdWFsaWZpZWREYXRhdHlwZXMtMiIJeG1sbnM6dWR0PSJ1cm46dW46dW5lY2U6dW5jZWZhY3Q6ZGF0YTpzcGVjaWZpY2F0aW9uOlVucXVhbGlmaWVkRGF0YVR5cGVzU2NoZW1hTW9kdWxlOjIiIHhtbG5zOnhicmxkaT0iaHR0cDovL3hicmwub3JnLzIwMDYveGJybGRpIiB4bWxuczp4YnJsaT0iaHR0cDovL3d3dy54YnJsLm9yZy8yMDAzL2luc3RhbmNlIgl4bWxuczp4ZHQ9Imh0dHA6Ly93d3cudzMub3JnLzIwMDUveHBhdGgtZGF0YXR5cGVzIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIJeG1sbnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2Q9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIglleGNsdWRlLXJlc3VsdC1wcmVmaXhlcz0iY2FjIGNiYyBjY3RzIGNsbTU0MjE3IGNsbTU2MzkgY2xtNjY0MTEgY2xtSUFOQU1JTUVNZWRpYVR5cGUgZm4gbGluayBuMSBxZHQgdWR0IHhicmxkaSB4YnJsaSB4ZHQgeGxpbmsgeHMgeHNkIHhzaSI+DQoNCiAgPHhzbDpkZWNpbWFsLWZvcm1hdCBuYW1lPSJldXJvcGVhbiIgZGVjaW1hbC1zZXBhcmF0b3I9IiwiIGdyb3VwaW5nLXNlcGFyYXRvcj0iLiIgTmFOPSIiLz4NCiAgPHhzbDpvdXRwdXQgdmVyc2lvbj0iNC4wIiBtZXRob2Q9Imh0bWwiIGluZGVudD0ibm8iIGVuY29kaW5nPSJVVEYtOCIgZG9jdHlwZS1wdWJsaWM9Ii0vL1czQy8vRFREIEhUTUwgNC4wMSBUcmFuc2l0aW9uYWwvL0VOIiBkb2N0eXBlLXN5c3RlbT0iaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvbG9vc2UuZHRkIiB1c2UtY2hhcmFjdGVyLW1hcHM9ImEiLz4NCiAgPHhzbDpwYXJhbSBuYW1lPSJTVl9PdXRwdXRGb3JtYXQiIHNlbGVjdD0iJ0hUTUwnIi8+DQogIDx4c2w6dmFyaWFibGUgbmFtZT0iWE1MIiBzZWxlY3Q9Ii8iLz4NCiAgPHhzbDp2YXJpYWJsZSBuYW1lPSJEb2N1bWVudEN1cnJlbmN5Ij4NCiAgICA8eHNsOmlmIHRlc3Q9Im4xOkludm9pY2UvY2JjOkRvY3VtZW50Q3VycmVuY3lDb2RlID0gJ1RSTCcgb3IgbjE6SW52b2ljZS9jYmM6RG9jdW1lbnRDdXJyZW5jeUNvZGUgPSAnVFJZJyI+DQogICAgICA8eHNsOnRleHQ+VEw8L3hzbDp0ZXh0Pg0KICAgIDwveHNsOmlmPg0KICAgIDx4c2w6aWYgdGVzdD0ibjE6SW52b2ljZS9jYmM6RG9jdW1lbnRDdXJyZW5jeUNvZGUgIT0gJ1RSTCcgYW5kIG4xOkludm9pY2UvY2JjOkRvY3VtZW50Q3VycmVuY3lDb2RlICE9ICdUUlknIj4NCiAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJuMTpJbnZvaWNlL2NiYzpEb2N1bWVudEN1cnJlbmN5Q29kZSIvPg0KICAgIDwveHNsOmlmPg0KICA8L3hzbDp2YXJpYWJsZT4NCiAgPHhzbDp0ZW1wbGF0ZSBtYXRjaD0iLyI+DQogICAgPGh0bWw+DQogICAgICA8aGVhZD4NCiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4NCiAgICAgICAgICBib2R5IHtiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO2ZvbnQtZmFtaWx5OiAnVGFob21hJywgIlRpbWVzIE5ldyBSb21hbiIsIFRpbWVzLCBzZXJpZjtmb250LXNpemU6IDExcHg7fQ0KICAgICAgICAgIGgxe3BhZGRpbmctYm90dG9tOiAzcHg7cGFkZGluZy10b3A6IDNweDttYXJnaW4tYm90dG9tOiA1cHg7dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtmb250LXNpemU6IDEuNGVtO3RleHQtdHJhbnNmb3JtOm5vbmU7fQ0KICAgICAgICAgICNsaW5lVGFibGUge2JvcmRlci13aWR0aDoxcHg7Ym9yZGVyLXNwYWNpbmc6O2JvcmRlci1zdHlsZTogc29saWQ7Ym9yZGVyLWNvbG9yOiBibGFjaztib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO2JhY2tncm91bmQtY29sb3I6O30NCiAgICAgICAgICAjbGluZVRhYmxlIHRyIHtib3JkZXItd2lkdGg6IDFweDtwYWRkaW5nOiAwcHg7Ym9yZGVyLXN0eWxlOiBzb2xpZDt9DQogICAgICAgICAgI2xpbmVUYWJsZSB0ciB0ZCB7Ym9yZGVyLXdpZHRoOiAxcHg7cGFkZGluZzogMHB4O2JvcmRlci1zdHlsZTogc29saWQ7fQ0KICAgICAgICAgICNib2xkVGQge2ZvbnQtd2VpZ2h0OmJvbGQ7IH0NCiAgICAgICAgPC9zdHlsZT4NCiAgICAgICAgPHRpdGxlPmUtQXLFn2l2IEZhdHVyYTwvdGl0bGU+DQogICAgICA8L2hlYWQ+DQogICAgICA8Ym9keSBzdHlsZT0ibWFyZ2luLWxlZnQ9MC42aW47IG1hcmdpbi1yaWdodD0wLjZpbjsgbWFyZ2luLXRvcD0wLjc5aW47IG1hcmdpbi1ib3R0b209MC43OWluO3dpZHRoOjgwMHB4OyI+DQogICAgICAgIDx0cj4NCiAgICAgICAgICA8dGQ+DQogICAgICAgICAgICA8dGFibGUgaWQgPSJJbnZvaWNlQm9keSI+DQogICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICA8IS0tZmF0dXJhIGthbGVtbGVyaW5pbiDDvHN0IGvEsXNtxLEtLT4NCiAgICAgICAgICAgICAgICAgIDx0YWJsZSBzdHlsZT0iYm9yZGVyLWNvbG9yOmJsdWU7ICIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMHB4IiB3aWR0aD0iODAwIiBjZWxscGFkZGluZz0iMHB4Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS1mYXR1cmEga2VzZW4gYmlsZ2lsZXJpLCBlZmF0dXJhIGxvZ29zdSwgZmF0dXJhIGtlc2VuIGxvZ29zdS0tPg0KICAgICAgICAgICAgICAgICAgICAgIDx0ciB2YWxpZ249InRvcCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tZmF0dXJhecSxIGtlc2VuIGJpbGdpbGVyaS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHdpZHRoPSI0MCUiIHN0eWxlID0iZm9udC1mYW1pbHk6IFRhaG9tYTsgZm9udC1zaXplOiA5cHQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Im4xOkludm9pY2UvY2FjOkFjY291bnRpbmdTdXBwbGllclBhcnR5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0iRmlybWFCaWxnaXNpIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1lZmF0dXJhIGxvZ29zdS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHdpZHRoPSIyMCUiIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0ibWlkZGxlIiBpZD0iYm9sZFRkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT0id2lkdGg6OTFweDsiIGFsaWduPSJtaWRkbGUiIGFsdD0iRS1GYXR1cmEgTG9nbyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBR2tBQUFCbUNBWUFBQURJMUwvdkFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBRk9WU1VSQlZIaGU1YjBGbkYzVnVUYitISjh6cnNsTVJ1THU3a0tRb01XaHBhVkFld3VGRnVpSFU0UGFiVzl2VzNvcnQwSnBLYVZJc0JBQ0FTSkVpTHU3VFRMdWR2eWMvWCtldGM4SkFRSUpiYm4zKzMzL2QyYlBPZHVXdlBxOGE2Mjl4MkdSOENtU1hib0ZoOE5oOWo5SUZtTDg2emJmSFVqd2VzY3AxeVo0Z2RQKzVyRGc1TG1ZT1JYbGZieUgrM2J4L092a2ZmeUk4WThyNFVEY0dZZExQMWF5RFAzeXZLN25wU1FlMTBHU3hlOE9YbVB4aDZYWXgvaWg4blM5T2VKNDcvcEVJc0V5K04wVVpnNTlxdlNwQzhsMFJNUk9ma2dBSWlNRVcxQUpYcXUraXlRd25ST3pFbGFNbjI3RFpGMnBFaUs4T05RUlFtY29qSmJXTG9RQ1FjUVNVU01CWjhJSm44L0h6WSs4L0V5a3AzdVI2V054TGlkcmtVajRLZUU1WEtZdVZXekU0MVFicFZBdTg4a3ZPbWxmWTlxdXpxaUJ5YjZvY2Y5UENDblpJWkVFWk5mMmZzdXlyTGhoU0p6SG5meXhhQWtTUmxzNGpuRFFoVkJuQWxVMW5hZytVWWZEUi9laHZxRUc3VzFOQ0VkRHZKY01qY2NRaVlYSmVCL2xHcWMrc0o0RWo3a1M4Q1o0bmtibjkyZWdyRWRmbEpXV29LSlBmNVFWZDBkT25ndFptVUI2VmdJZUNwWXlOSW9nKzB5MVQ4MDEzMDUrc2R0cm41Y0FiUy93YWRLbjcrN01YN3FUa3lwM3FrVWx0WlRFby94eElSeUo0OFR4T3V3L1hJVzlCNC9pd0lFcUhEL1J5Q3ZjS01yUFEzNUJObkt5TTVESkxTOHZCL2xaZWVqZW93VFZWUTBJQk1Qb1ZwU1ByTncwUktOUlZCNnJReUlTZ01mdFFGVkRQZXByV3REUTFJVGFtbnAwdExlZ3ZMd2MvZnVXb0ZmL2NnenFWNGIrZmZxeWZEZHJFdU50RjJnRW8wNklUWklnRmNCOG5xUlAzNVQrWjl5ZE5ya1Myb3FEZ3BDOXFGYjFOMEZYRTRnNjBOQU1yRnUvRTVXSFQ2QytyZ2FkN1ZYb1VWS0U0VU42MHdKS1VOZzlIMmxaZm1TbFp5SE41NFRYNlFLVlh5VVp0L1BzSzZ2dzJIKy9pM3R1bTRuUFhqc0p6ODVkaFovOTRWM2NkOGNNWEgvMVJGYmtSRGdjUTZDekMwMGRyV2h1QzJQbjlsM1l0bXNIOXV5dFpFSGRVRlNZajVFamgyUHkxRWtZTmlpYkxwS3FSV3QwSmx1ZGNubVdLdWJucWQ3ZzA2VC9BWGRueHh0VjQzRElvYW1UWkRDMXRMR2hIYnNPSE1LU0ZSdXhlMjhWaGc3dWg1bFR4bURJd0Y3SXBUVjRhUUd5QXZIQ05EUEpsSGhjTm1jelNaNVVuOS81MFZ5MHRVVm9aZW40L3JldndCZHYreVAyN0cvQjl4ODZIeGVlTjg3Y3V1ZGdGYm9WWktHUTFoZ3hKUUcvZjNJUmhnem94L0NVaTlWcjEySFh6cTJvT2xhRDNqMXpNV1A2YUV5YlBBYTlLa3JoODFKVXB2NmsrK1ozdXpXZlBya2VKU1cvZnlva1lhZzNDWFlxUnAyTWtMMk5IUTRzWExvWFQ4MTlHNi9PZnhORnVUbTQvb3BaK095Vk16RmtVREd5czl5TUQ3UTN4blVuNzFNTTJMVGxDRzY3Kys5NGZkRTJ0TGEyWU14b01sYmFMRnRpK2UrczJJZisvWXJ3N1B5dHVQcWkwWGptcFUyWVBxVWZpa3N5TVdCQUtSNzcxUUxNZlcwcjNscXlHNDNOclJnOXRJTHNkdUpIUDM0RDU1L1RGNk9HRjJEYnBnUDQ4czNuWWRyRWZtaHVDV0hCZ3BWWXVuWVhqbGNGa1pQYkMxbjVkSU1TRkg5bFhYYmsvSC9BM1FsTHFTUGhXQlFOalcxWXZuSTdGaS9aalBaZ0FLTkdqOFlOVjErS0hzVU8rTndVSVJHYzBVNjZ3RGg5NGZKM2QxRllEc3lZTVFSM1AvQTBycnFNV3QybkNGZC80UW04L0xkYlVGSFdYUmV6RTA1OCs5OWZ4dVF4RmZqMVg5YmczQmw5Q01PZGFPN293c1JSdlhEeFJlTlF4VGhYMzlTT212b09mT2MvMzhMV0pROWozY1lEdVAzQmw3RjV5ZjFzV3dkV3JUMkl5eTRkQ3hvODBTTlEzeEhEYTIrc3c1SzMzMEZqM1FsTUhqOEdsMXcyR1dOR0RhSExwWWJ6eDdUM1U2WlBiRW0yMjNwLzA5Z251V2lqWkdLYWZ1UGMwVzZJVzJPckEyKzlmUXhQUFAwMnRtMWNpL0hqQnVEMkwxK0dLeStjZ0x4Y3dPT2lQZkJpeFpZRmIyOUJUVjB6M1UwM1BQSE1DaFFXWlRHb2wrRHBGOVpqNjQ3amlCQVFYREZuRU04WEk4UHZNL29zRjdwODVUNlVGdWN5cGtmeHdsdDc4YVhySitKSVpSMUtldVNqcXlPTWV4OTVFVVA2bDJEZHBxTVkzRHNYczJZTXhidXI5Nk5YV1E0bVRPeUxuejcyT2twTDhqR29iM2RDZFdaaGJGQ0czNGt4SThzd2RjSkFkTzlXaUkyYmR1Q1ZCUnRRMyt4QVVVRlBaT2RRU0VTVE1pMjF3dmE5Tmc5azQrYnJ4OURwZUhrNitzUzIrdUZDNlRRTWhMYjNWTEhGbk1qSnp4RFIxcmF0aC9GZmovMEJmMy91V1NLcEN2enM1ei9GYmJkZGozNTllc0twd00rT0tTZFNWNVZMZGUrV2lXODg4Z1lSWFpNcHIwZTNMRG9WQytkTTdvUDhiRDltVEJ4QWtMQWQyM2RYR2VIWTRVRi9Fb1RUZm93ZDIxY1loWW93aUhmTEtRRmRYVUhrNTZjVGVuZEhXMGM3Qmcwc004Y1hMTjZHVVNNcjBON1VSZmQ3RUVOSGxCTlIxdUQ3UDN5WkhXRWZZakY0YWFXbHBkMXh6VlhuNG1jLyt6NitmdnV0V0wxNk5lNS82R0c4OE5KYnpORUNScm5ranRRZVVZeWxHM1lvL3pxTm96SThPa3NCaWY0Rk1Za05ZZ1pxOGp4U25OOGpyUHdJVWZQTEM5Ymp5YWRlWmpEUHhMZnV1UktYWERnR2VabGl1UXNyVnU3QTR1VzdUUFplV2xKZ3VxWE9saFlYMFAzNThLcy9MS2QxSlRCbElyVzRnSEZsY0NucUdscXdhdjFCWFBtWk1aZzlmU0RyWmUxaUVLK2JQVzBvZXZVcVFtRnVGaTZZUFpCbDVxQmZyMjRZTWFRVS9mcjJJQkR4bzdtK0UybE1iSXZ5TXVGTmQrTTNUNnpCL1Y4N0Y2dlhIeUgwRCtQelYwOGl5cVRiVzNNUUYxOHdFaWVxNjJtOXh5aWtidkN3ZlprWkZvWU5LTVQ1MDRlak14ckRNeThzeHVZOTljZ3RHb1NTRWg4OGh1bFJ3d3VIVVZ4YTJta0VrVHAydGtLU1JEOFJrYW5KYnpacC8rU1JSTXdLeHkxcis1NUQxa00vbkd0ZGVNMDNyY2RmWEcvVk5sbFd6SnpYOVpZMTcvVU4xdDMzUDJ1OXMyS1hkY0YxLzJXdDMzVFEzRTZBd1BNeFhoYTMvdk9YYjFoanovbUp0WFB2Q1IwMXgreUs3TStUZFJyaXNiaU9wSzZKNm84aCs3bzRqNmdFbHNNRHVyU2hzZFZhd3ZyVjVzL2Y5Z2ZyOVRmV20zTUxGcTYzdnZ1REY2d2p4NXV0T1d6YjhoVzdUZHRUL2RaZnRiRXJiRmx2cnpwdVhmNkZSNnc1Vno5c3pWdXd6QXFHNHFZTzB3NVRZMFMzbkx6M2cvUlJ4ejlJbjlpU1RwVSs3NWZLVU1jczZRK2FXcDE0YTlrSi9PTFhmMGVhdXhrLytkNTltRFd1Ti96cENUbzA1UnEyVzN4Njdob002TmNkemMzdHlQWjdUTnpvVlpIUG9nUno3UnhrOUtoeWpCdlQwNkF3UlhKanFXYk1pRjlVcldvMVRhRnpzUXdNNUdGZFJOSndqNjdoZVRPOFJMZm5ORG1hL2FQZmpQUTB4clVDQkVNeHBMTU5FOGYzUjBhR2w4bHpQWTdXdGVDSnY2N0NnM2VlaDVuVEIrSDVGMWJoaTNjOWpYZlg3TWZZa1QyUWw1ME5ONnZvWFo2TmM4NmRnT2E2YXZ6cDd5dHhvTElkZlFjTWdqOURrRUo5c1lHRnpUTzFRNS92a1QzTTlQNWpweVZiVnY4WUdTdWlNdWl6c1RsaS9lcjM4Nnc1VjN6TCt0VmZObGgxcmJTZWhEVEtzamFzMzJ0ZGRPMS9XVis0OVhHcnF6Tm16WDl6c3pYaTNIKzNObTA4YkN4bHpuV1BzUkR6Kzk2bm9aU0ZrTjcvUWJMTGZ1K0FyY09HVHQ1ajdQZmtjZHRLUmJJNCs1ejBYY2ZpdHExYlR6Ky8yaHB6N244WUt4Y3RXNzZMK3oreE5yQ3RTNWZ2dEg3Mnk5ZDRQZXVLMlZZam0rME1XdGFUTCsyenBsLzhvUFdsdTM1b3JkOSt5QXJGZENiWlJrUDZmdXErNklQN3A2ZFBCTUYxNlFmOWFCZU40L2lKQlA3K3Qzbll2WHMzN3JqdFFreWJQZzQrUlc5cTB6TXZ2b3ZxdW5aY2ZPNUkvUEV2UzVHVjdjUEQ5MTZHaHg5NUdVMHRBYlMwQkhIL1hiTXhhL293WXdleUJqdmNpNFNTYUQxeDJpRlJockdjbEs5UEtpRTdtbXdUcitNeE02ckI4eFFJZ1ltU2FKVkNFS0M0bVNydmZmMWdqS1FsdnNIOGErMkdnMWl3ZEI5KzhjZ1ZCdjNwaW0vL2FCN0t5ck53NG5nTENuTXlpRlRiOGYxdlhxK3FRRkI2c2cwZGdUaGFtNXR4Ly9mK2hOcmFCdHovZis3R3JHbTlrZUhWUmFwUGQraGF1MTdWYjdjOU9jajdjU1FoL2FNa0M5cDN0TjE2K05FbnJNL2U4aE5yNVpZdWExOWxuWFhYZlU5YmdVRElYUE96WHkyd1B2K1ZQeG85Yldqb3NDNjQ5aGZXL0lVYmpIcnYzSHZNNnBSelQ1THRvMU5hbnZMdS9NNHZjYU4wcDJxZS9kMVlzdmttU2gxTGxXTjI3ZnYxUi92bVdNcnFlRTJ5eUs1Z2dGYXp3OXExNXpoclRCN2s1M1BQcjdKKyt1djUxZ2JHemZsdmJER2Z5Vk9tTE5WMTVFaU44UktIanpaYSs2c1QxcDNmZXRJNjcvSTdyWVdMOWxxUkNLMDMxWjZUNVlvK3VQL1JkQmFXSk8yVHdtaVVqQnB0QmhnZHhvSnFxNEEvL2VVNW5EaHhEUGZlZFRtR0Roc0FOelYyK2NyZENCRDJ6cG81ekpSd3pVMi93OWR1bVlhTDU0emp1UjA0d1ZqMGhTc25VME9vMWJaaUdWSlRQbWlwWmxqSmNoTTFLbm5VTGpVL0dJU2pqaENkZFdnK3lpZ3BVYUlodHN0WWxSSXYwMVpaSGk5SUtFN3hVeGJPWHpQSXF5a1FKK3MwSEhEeE80K3BlZzJIRitUQ3lpdGk4RXJEc3krdXhkNERWUmcvdGd5WHpwbG9ONW4zeUNncWo5UXpJWDRPRTBhV1lzUFdLdkxoUEl3YzNoUGYvK25mc0d2SFFYempudHR4em95K1NHZjFxZnRTSDZyclZQWi91TzgyblZsSVBHc2NseW1RWHh3eEU0SVBIZTNDazAvUFIxTjlDL09lMnpCcXNOZVlmMWRRQXo5eDNQZTlsekI4Y0FsdXZmbGNiTmgwR0xjOU9CZXYvUGxXQWdSMm5rd1VZK1RhUHFwaEtaSmkyQzVRbGJ1QmNBRE5odzVqOTB1dm9mSGdZYVl6RVNRaVVWaXh1SUh6cWR6RW9yTEl3UW1lMjBURzgxd2lUb2hqdU9Qa2JnelJlTVJNZGNTcEJTd0pqRkZ3cHFXajMrd1pHRFQ3WEJRUEhRUnZXb2JwdS9wbjJtektCWTRkcjhVZDk4NUZibUVHbnZyTnpWais3bDc4NTIrWDRBOC8veHc4R1FWNDdKZFBZOFBHVmZqbUEvZmhITG8rajl5djZhN1JFcFlrWUtGK2ZiU0FSR2NVa3JFZWRraHpaRkxsS0QvYTJrRUU5d0txYVVIMzMzczFCdmZyelZNSlZGWTI0cXYzUG8vL2Z1d0dYcC9BMSs1OURsKzRkaHh1dUc0eUZyeXhCYlBQR1liME5JOXA2TW40a0tTUGFxSmFwM09KT0ZXRHNRbjc5Z09MbDZCKzFVbzRtdHRnTVYrSmg4bDRub3Z6R3BEaHArdHc2cGlFNUdUYjR0RTRqVEpxV2hHS1JoQmdiR2oydXRIV3ZSRGVvVVBSLzdKTFVEUmtKSEo2TUVmeWtKa3VYOUlxK1ozQ3JtU3kvZFg3bmtIZnZubnNxeE1qcVpCZnVuRTY3djNtWEp3M2N4QXV1WGdzODdwMlBQTHZmeU5manVHQisrL0dsQW1sak5XbUdUWWw0K3ZIa1lSekZrS3ltU1MzazZBbzZocTY4T3dMYjJIM2dXcmNjY2NkR05GZllOTWllR2pHd3o5NFJYTEVROStZZzRHRHkzRzhzZzYzMy84ODd2M2FiSncvd3g0QjBJQ3JyREpWOEh2bG41N00ySitrR2d1amk5QzQvclVGYUYyN0h0MGI2dUNQaXRsMFdlR3dFWktZSjhCZ2lrOTJTOEl4MytuNkdOL3NMUkpCUEJSQmxQZEdFaFFXNzR0NmZVanJYWUd5YzJjZ2Q4UW9PQVlQUUxTZ0FJbk1MTGc4YnJoY1ZDNldKMDhvK3ZZUFg4Q1dIYldZKzlSdGxKMEQvL2FOdjJMZndTWVVGV1hnNmQvZFpHYUVaY25WTFFrODh0MWZZLytCbmZqVkwzNklJWU83MHlMbFl0a3Z0dTI5ZWJiVGs2bnpqSGtTcFoyZzY0aVR1VjFoQitZdjJvZjFhN2ZqM3RzdnhJZ0JSVVpBNFZBSTMvaldYSHpsQzVQUTF0S0o5TXcwK0h3ZUxGNjZFemRjUFpHNVJTKzRQVjQyU0QrcTJIWVpvbyt5Y2pGV3NuR1N1WTRZTzNTd0VyNjNsaUQ4emp2SWIyMkJpNjMza1RsT014Rm54eFd6OFI0VktlRVk2ekh6V01SM0ZGNlV3b3lHSXdpSFF3Z3h0cld6N0FhM2hST01QeDFqUjhCOXpqbUlqUitEY0VVNTRvVzBFQ1pEVG9mWDluUGtwUVo3YlpSbVlkSzRQdGk0b3hKMU5VMzgzZzhSbGpsa2FCRWUrOEcxU0djT3Bubm1PQy9WK04rZ2dZeFhHNnF3ZnROZURCcytHRG01YVl6ZGF1ZkhDMGhrK25LcUpaMnFmYWVTdXNtK1llMmFQWGo1OVRXNDZxb0xNWDFTcVdFVW9ZY1pmd3VFb3ZEN1hmanVqMTRtekU3RHNwV0g4UUNUd1ZuVGg1aHk1ZDVpTkczTmVacDZOTlRNKzg0RVFUWERHbTFyUmVPQ3Q5QzBaajN5YTA4Z1d6TUVqQ0Nlc0JOUnhpUXgza0gzcGJpa0g4bE5VeHh4dWpYRnFSakxrTFdGdGRFZHh1anlvcncyN1BRaGx1OUgvdWd4eUI0MUdvN2VmUkhyWGdCSFRqWXlDNHJnenZUQjY2SEMrZFBJVHJiZFRaVlUyMWxCZ3UyT0JNTjQ2TkVYemJGM04xWGgrdzljUUdBeDJyUmJ4R29NTnRJWTVlNzlGcjV4MzRQbzF6c2JqMzczWGhRWCtuZ2ZiZTM5ckQ0dG5kYVNUaFdTQkJSbHUzYnRUMkRoMjh0d3lRWDlNWFB5RUNvWDNRdXZlLzJ0elhodDRUWm0zMFhJeVVuRDVxM0g4Tno4bmZqMyt5L0I5Qm1EazVyQXYyb3M5MnlCNlVlQ3NqTnlrVGwrYW90NVduSElYZDBBOTRwVmlDNVlpT3pHUmxDdmFVRThLV2FIaU80Q0ljU0o4cHkwWmlzU1JvSUNTZENkV1dTZ1BxT0JMZ1FpUVhSRlF3anluazY2eFdZSzhyamZqY1plUFJDWk1nbU9hVk1RNjlNYjRmeDh1REl5NGFFbjhLUlJRSXhSTHEvSHpNN0szUm1FcTVsYTl0MUp0T2ptK1ZuVEJwcUJrTTljTUJBWG5EUEtXUDlqdjFxSU54WnZ4b1NKQStBaEIxMjB5TUpDb0tRNEN5Kzh0cGx4UFEvamgxZnd1TjNWTTlFWkxVbUg2aHBiQ1VNM29FZVBMRnp6bVFrVWtKd2M4TWJDalhoNzJUNWtNMEhkdEsyYWxqT2JSeGwzMkoxenB2Zm5YMEpuN2psUDBSaGJHTlRFVkd3NkhiRndBUSs1cDhEcU5Uank5bExrN3oySURCTnY0bkNGR1IvRitFNGltQ0RqU2lnTWw2QTU0MHZDdUNSdUFoSXNJMExCaE9uL0l6RUtqTWRDOUp4Ump4T3hraUlVVDVxTTlCRWo0T3paRTRtTURMaXlNcEdabVFsdlpqcTlRaWJjRkpURDV5TXppY05vZGFaY2VZQUV1WnRNMXJsblFGTm5NSUhmUC82bVVjUTVjNFpqKzQ0YVZOYzA0cDQ3TCtFVjRnaUJhUWg0OHFWTm1QdlNmRHp5alNzeGRlcG9DditqbVBBZTJVNVJUT0dIRVU2U203YkFvbWluVzFqQlREek4wNG56Nkxva0lJRUl1ZWExbTA3Z3h1dW1JRGZianp1K1BCMTNmKzlWZEFiQ21EMU5GbVFYYlk5aG1hK0diQVU0VlVEcXJGMi9Ock12UVhaMHdMMStNNnlYWDBIcHpyMTBjU0g0eVhRUGc3MGpFRUdzSXdCWEIvMUpxQXRldWpzRHYrVStGWjhvakNqTENGRTRBUXEyS3hIbEZtUDhjZUZvWGdacVJ3NUQ1T0tMMERsN0Zqb0g5MGUwV3hHODNRcmdLU2lFTDc4YjBqSno0UlJnU1BQQ1IzVjMwWDdOdUtMeUxyWmRMdDc0TVg3WXp0cUpZNVhWV1BydVljeVlQQWcvZnV4dHM5N3Y2VmQzR2o2bDJPeHdSL0c1SzhkaGFMOXMvT3JKaGRoZkpaVWo4UnEybUo5YVhwQ2trMTk0dC9tZXpDVlN5RWdYMk9zUlBEaFJHVVFsODVGenBvM0hvY3A2M1BDVng3Rng2MUZ6L1dldkhZUEM0blMwdG9WTklIMzRxN014ZXdaakVBdVJ2elhJN0F6MFBoaXV4cEFSQ1dwOXVLVUpSelp2UVgxVFBROVJFd21ySklnSTNWYUlWaFNobGNYcDJnUzcxVkxkYTF3b2haTlFiRXJHSG9zQ2k5SEtsUDlJUVFvSUNFYU1Hb1doZ3djekxzaEY1eUE3Snd2WldWa281SmFSbllHMGRCK0ZRMFZ5YWJFTE81TUNEQ25GWWpucTQ4bDlVcSt5SWpQUnFlUjQydVErK1BFZmx1UG5qMXhtWDhNMkxWdXhEd2NQTnNQdmRlQXJYLzRpR3VycjhNcjh0OGdodFZsaXRNVnRGMG0rbmN6dlRQVWthWWwyTkQ2bURKL2RaalNBa3ZxVjcyNGtFQ2hBMy83RkdENmdKMlpON1k5YjczMEozL24zdWNoT3p6Qk1YYkJzUHk2NDd2Y1lPcUtVZVJEZEFyVlpCWjRkZXBFRkpCdW5obEZSbkZXMThMeTZDRmxyVnFHd0k0UXNjVVN3T2NnWTFONEpaMmNuM1Z5UVFxSUZ4WGd6NzliOWNkYkxhSVFBeXd4U0s0TVVUaHQ3MHVwMm96bzdDODBqaHNKejFSVUl6cGlHVUorK2NCVVZJWjNCSXBkUXV6dXRKNGZKcGk4WWdKZndYRjdJVFF0eU91a0x6T3lrQkNCK3N5NjFWOVdlcEFReTB2MTQrUzlmd2J5M3QrRzFCVHN4NzhsYk1KdWVaOWUrRStUVlMvanBieGFodnFHSkNTM1FyMmNCYnJ6MmMxZzRmd0UyYkswMzFtU0V4VUxsd09URmpQSW02eUEvR1lWVnNiUkExNGxSL0l4d1orV2FYVmk2WkJPKytNVnJNTEJYRmcvYnZ2WHhKNWZocFlVN1VkOFl4TzAzVHNRRjV3MUhKcFBVZ3NKTXV4TzZTaGVlRmFrK05valhHLy9lM281YVdsRFRDeThqOTNnMU1tZ1JUZ29pUk90eUJFTUlkN1FTRkZBNGRIc1NrQnlHMm01UUhHT1NHVFhnWnpnU05mc0J0anBJK08vcVZZNXVGRTdHdUpHTTRHWHc1dVlnSXkrUEVEbWR5U3BCQWNzT05MWWcyTlVKTHhVdHU2SUNucXc4T0FrT1RGKzRHWjZSTDZuK2FWK25ST1k3LzJ6WXZCOTlldmFBSjhPTForYXV4Wi8rdWdhM2ZYRWNQbmY5VEFQSFpUTzY1MFNqaGJ2dStqNTY5aTdDZCs2N0EzbTU3SWZoZzhwV1BMVVhhNHBjajM3M2U0ODZaRStzUU9kdEk5TWlEaWRlZlcwWlJnd3R4L0FoRlhqcW1lWG9VMUdNTHFLbXU3NDdENjlTYXk2WTNSOVB6MTJOaWVONm9hS2ltMm44K3dSMGFpOCtncVF6SXEyOGNVUm94YnYzSS96SzYwZy91QS9waWk5eWRScjJvWWJITzduUmdpUWdBUXZUWmQ2dU5xc1VnbSs2dGJoeGJVR1cyTTc0V1pmcFFXdS92dkNlTnh2ZWNlUGhLTzRPUDRXVG5wVk53Rk9BTEpidDJyc1BybmRXSURwdkhvTGNvb3ZlUVdack96eWFOQ29zb0VsUkNjZ2pzVmMvcHMyVWlFR3RvbFNYMmRZZVBRcHh0TElCWDczcldlemRkeHdkb1JoUm9ndjF0WTBZT3FTVVpkcVFMdFB2WUpKczRmbDVLOUc3OTFqMDd1dW45YkkrR1Fsck12S3hyWWIxa0dScXRuelZZU0trdUF2dnJEcUN0V3ZYNE9ZYkx5UGE3Y0pEUDNvTkhVMGg1Qlg0Y2QwVjQvQ1pDMGZabkJHWlcxTVdZVmVpYytxTURSVE9ndWlhT2dteFcxOTlBODNMbHFHa294MXVqYTJxZFFRam9jNE94QU1CQ296UW1zbXRoSlF3VnN1SXhNN0VlVjJFeDBJRUNTRzZ6RWhNUW5JVHVSV2hhTXBVNUhHTGxIU0RMeThidWJrRnlNek9ObFlmTzNvRXg5OVpodWpPWGZCVVZ5UEVXQkZrenRWWVZJalNjODlIMzV1dVJWNlBuaUNuVFY5c2o2TitxWU5KVlQvWlJUWFlGc0t5ZDNkaXdyait1T3JtMytHQnIxK0FMdlloMisvRHpPa0RUZXdTNG0xdGllSExkLzRFYVJucCtQUHY3a0hhcVNtamVKdmtwZXZSUng1OVZJT1F4dFRVV1dwZlRVMEVpMWFzUS85KzVaZzR1Zy95Y2pKeHpXVmpVVWFjdjVqeDUzQmxIZkp6Zk9oVlFmQXZQOHBXNnNkdXJQNFlEM3VXQWxMQ3lhdURIZkN0Mm9MWW9pVkliMndtWkNGZjJHY0g0ME9Dd29rSE81bVE4cnVHZFNnTWxXeG4vOVJ5dGp2Q3J5RzVPMjV0VmhSTjFOam00Z0s0enowWC9zbmpnZUp1eHNYNUMzTGhKMERJWW5lOWh5cmhXcndVYVJ1M0dzdko2Z3pCMmRFSlZ5Y1JZM3NiM0hVTnlPdFdqb3ppWWtRem1OQ3lEdE5UeFNkOXNoRXlKdkhTbnNjU0R4VzdFdWpWc3p0ZW5MZUpqSGZpcGh0bllKQ1dNL2NxWW51RmJIVXZrU290TElSTXpIOTlQc2FOR285dXhkazhaM1BUVm5CZXp1L0NsZHlWbVpsZTA0OG5zSDNYVGxSVkg4V3NXUlBzR1dzMWhvelErcmNYbjdvVjExMCtGdmM4K2pyKy90SjZVNmtwUy93eXdrbFpsQ282R3hLazVaMk43ZGkyYlF0YVdodE1obTZzZy9Fb1FNc0pFeUJFdVdsZmFFMXVSdUJFOXdrT0t4NXAwemhlSW1iSG92VDBkQXdZTWh6RFI0eENQbDFXSm5PZkRPWkFHY3lIdEhnL0VZN2kySzdkUkZ6N2FYVlJ1SW5rdEFrSVNmWnlxZlcxZGRpNWF4TmFtaHROTG1hZTdtQzdUTC80YVJQN2F4akFmdWlZdW02Z09yQnYzekY4NWVZWi9EeEtuQlBGMXg5OEdxKzl0ZEdjazVxcG56T25qY0hRUVlQd3pMTi9aU2lSdzVhbE1qb2JCUlR6emQray95TkpHMXFEd1BvdHV6RjZRQVVLQ043TVNDMUowdFY5UHByc1p5NGFiWkRNbFplOE53U1NhcWhCZFB5dVhYT0k5Nmc2dXhSUlVwQWlsVTI0N0tRV3V6WnNSdjZXSGNqdmpDQ0RGdVFXNHhrdkVDYVNDelBDMEFVWnhvZ0JkRzBKd2k4SlJvbHFtQ29lWnA3UjZZeWptV2lzZ2JHbWVmUklCQ2FPUlZkcElXS1plWEJuNWNPblpOWG5oNS9GdUdoRldMMGVoUTBkeUlnbVdKK0V6WXE1cVlWYXp1VmpES1Myd25IaW1NbkhMQUtWdUdHZXpRLzdVMy9zL3B3YzRrckcrSWZ2dXdJTEYyL0hQZDk1RFE4KytqeStlc3QwekgxbE01cW9rQnBLRTBNcmFGeXpwZzdBdG4ydDJMcWIyUzd2MDJvUTAxZTdLbHMrcGlJeVRENzY4TUVXb3JZR2pCcy9NZ1c2YkVwcWpybUIzM3VWNXh1NGZVYXkyNUxNQWtocUJPOVhhUVpteGlOb3JhbkgvdTE3RUNVb2lUSklhd0pCMmgySmhMakppbmlFQXJGakFkbGord0ZER3RIUU5URXlsU2JFMkdTaGlOQjYyS2dSNkZGQlYrWHpJcE41VHpvRmxPSFBKSkx6SWhBS29mbm9NYlF3RnpONUZ2c3U2d3VwVHBZamExVmRNUjV2YXV0QVExTWJ1bmlQNnJDb0xLa1V3MVkyY1lUS2VVcWJSTnJWSUhOclp4QS9mR2dPTHI5ME5OYXNQY1F5Z1IyN3E4dzFTbmljTGd0WFhINHBMYTBMSzFldVFwaEp1OGdJUEZra2EwaHFOUTlHQ2Z0MmJEdUkzS3dlS0M3S01kVnJCTnd3MVBoaE1razdTZmNZZjMrN1BwSVU4NHdyTU4vNVI0eldycXlpcFF2cGF6YWpjT2NPWkNTQ1JxTWRHaEFsSk5aWW5PS1FRL05FT3M1N1ZJNDBYWEVweHVOUjlqck1ZNTA4MlV3Zlg5MnpGTmEweVlpUEdJSUVjeUNMK1k4dk01dVFPQXZPdERTRG9OSnFHdUdqdDhocGE0T1R5YkdYZGJrMDFoY2d4R2NDYktZdW1KbUVXViswczgwazFnN0dLWXNXN2FRd1RUL1VEYkU1MmEvVGtRUjM3V2NtWXg3VEZTV3p2Ly9yUnVaSStaZ3d2by9ocFJFdWZ3cHp2Wmc2Y1RyV3JGcE5wZEN3V3BLU1Jkc2pEaVFwUjNWTk0vWWZPb2p5UGhYSXo4c2hVNWlqcUJpZXMzbkxuQ05NYmJJajVWbVJMclB2VGNVb05jTFdRWlViWnNhOFo5OGVoQ2dRclFUWDJSZ3RJc3lZb0RoZ05GMVd4RUpTbThnSWk0MldpekxsTVdZcDMrbmJwejhHRGh3SVAyTlNlbG82c29pY1BGbWFPdEVvdHBDWGhkYU9GalExMUpnWUkrc0lzNHdnTFNYRXpWZ3NFYUtsMFFxZWR5U292RklHV2xEVVdLck5RalhEOU8wREZ2UkI2bG1lWjRhSXlrcnp6UHIxSDN6ckdyT0V6RWFIS2tmUnljSTU1OHhHTFpIbHpqMTdlYzYrTjlWWHA0WnZkSEdJQi9ZZXJFVk41VzdNbURRTVRqZVpSUWhyTklWQ2tSREYyb2NlZVJHdnZiblYzS3lCeFRPUjJzSkNrZzJ5OTgwUWlLeURzTnEzYlIxeTJUQVhtZUxWL0JBMU5SYnBoSU94U0hEYlJZMldlM0dwS242cU9GbXdubzJsN2hzM0pTdHE5Zm5RMGJjY3NVa2owVlZlQWlJSHVCZy8wekpvU2Q0TWJreG9QZXdQcjNkcVBxcTVCWDdHSEEvZGpCVUtJa2IwbUdCOUFpZTBYNFRvT1VMTWs2SlpQaVFJT293THBEQTFCSFhTZWo3R2lsSWtJVDU4ejJXNDlaWnowTE1zRDQxTjdjYXExbTA1WXBSZExsOXpaa01HRkdJZ3Q0V0wxNkJMekJZbDhZRFR4RGh1YkNlT0hUb0dOMzE0UlhrbWpoNXR4Qzkrc3hCN0R0UVl0eFFLUmVrM0xYem5nWXN3YlZ4Zm0rT3M0RXhrMkpvTXFHcVMyZWV2a3psRlYyczlqaDQ1VHFiYmMwRFM0b2h5b0FpVmdzSGNvalJrS1dxZkhwMFIyUlpFamRZZ0toa3FTeE1TODN0OUtDdnZTVGRkRExjM0RWbStEQU1TM0JLVUo0MGFKWUJFcjhCK2g5alpMc0w2QUdOZWlPQWtFQTdUYXVubWFGVXFPMEZCS2crVGk4K2hxeFFpTkFLaVJSZ3ZvazBmS1ZYL0dCSzcwOUk5ZVBiRmQzSG5RM054d1hYL2pmL3o2RHdjT2xUSE0ycVJmVlYra1JQOWV2ZkQvajM3ME41aURwM2tHeTNKWGp2UTBoSEhwbDFITVg3NFlHUjZIUGpXajE4eFpscVV6dzZ5c2N1V2I4ZURqenhqWmgzekN6Sk5HYWFsWjZDVDdvQWZ0Z2Ntek9kM3E2MFQ3clhiNGRtMUE5bUJJRHpHVWhKd2tuRmlPb0lSNDNaa2VjYjY5TW15cE1sMjRobzNzYWlEeDFvenM5QXdiQkNpRTVVUFVVamNSM1ltM05sWmNLZDc0Zlc1emVpOVlZbkdXb2g5RTh5L3JQWXcwTnlHV0dzYklvRXVBeHlDTExlRGRYVFFOUWE3RjhMUnZ5L0NlWG1JT2Izc0xkMGxQWS9wdS9UenpEcHFFOXNaNkF6amdsa0RNTzh2WDhLYUJmZGc5WWJEYUdsb3Q4K3pEeGwrWVBTb1FZaUVIZGkyczlyd1M2NVF4THhLUzVtY3ZNSEMwY3BqR0Roa0tJNmRhTUFlb3J4N3ZuNnhlVTVWMWpkcjVnZ3oydjNPc2gzVS9PVGl4TE51SlluWHkxMnFjbnBTTWltRTZycEtoTHZJS0NxQlhKaGlqSkJjWE1OQXNoaTU0aVJKcTgxbjBwSnNhNklWOFhBV2U5aXp0Qnc5aWt2cDNqTE5rK2NaeklYOGZsb1N3WVNCbG9UbVJ2RmRicVQ3c2d6eTB0UHFFY1ViV1M5VEFibE91MTQ5WWVoSFlWRUp1cGVVbUZpbkhNcmtiN1FvRldPNmIvNThtRTY2UTVJVzdpdVgrOUxOczNIWm5ISDBVdDF3NkhnZDg4RWdEbGJXUzM2R0oycmlvQUVEa1NEYTNjZmN6YmpYSkgvNVZ5WnNZZGYrby9BNE01Z1Y1OUs4ZmJ6QWhSYjZUekZITTVGK0JqdXQxNVowakJISzVNL0NrazQybUExSmRVNUxxRng3anNDOWN3OHlpTjRVZDdTQ3g4eW9Nc21NeDJSRjVrSzJqZnJQN3pFQ2M1V2xlU0lOb3VvVkFSR25HNDJFMWNGQi9lQWNQUmJSL0dLNGFPbmVuRnhhVWdZOCt1N3ltaWtIZXg2TUJkRkxXT1VWQ0E0YmdpNC9ZMDFTK0JGMktzS0tBb3pEVFhSdjljUDZJREpwTEZCV0JxZEcrMzNzdHdUbFpqbFNVdDFrMy9vaGVqK1lFTGZjYUc3cXdCK2ZmQWNYZmZZM3VQR09aOUNuSWdmRGh2UTBUWkkzMCtPbGZYb3hkbVpRaUljYjBLSVZVSFlCNUUxU1d5dVBIek9adVRMMWJnWForTUlWUS9DNTIvK0taMTlhZzQyYkQyTEJtNXV4Y1hzdEpvMGJZSmlsM1Boc0xFbnVUWm1zTFN4ZVR3M1J5RUJIYlJXYUdidzFwS056aWoyeURMUE1pZ0k3bGRScGdRMmpXd0lQMGpKMmpEQUEva3pHMElxZUtDb3BKS0lUVUtBbHBmdHBMWFRURkloY2lWMjNQWlJrNGt5M0Fnd2VQaFRwZEljdXA4ZkVPMW1QS0kzbVVsaVVqMkhEaG1GQVJXLzRLVEJacHNmdE0wSXlRejhmSlozVGtJclYxUVhrcVpUOS9qdG5ZZVdDdS9DOWIxM04vS3NWRzdmdXgvNjl0ZXdmclpjV08zam9FS0xzWStobzE4SlBtdzlhamNSZ0RadzRmQkFGK1ZsMDVScG1TT0JyWDU3TmJScmVXTFFEdDk3L0NsNTRaU3NlZWZBQ1ZrWm96azVwRWNwWmtWb29aWkovNUsvTTM2MUh6ZmZ1UTI0SDh3NmVOM2tBM1kxRkdLMTFkTXFMaE1JMHVDcGZxNFRWak0veFU0a25yMElYa1ZkN21oZkJ2djJRR0RrYTBjSnVjREFPZVpXMHB2bmhJWGh3YVlDVjFxYk5LSWdzd01IWWtsZUk4T3daYVAzTUhGUU42bzI5cFVYWTM2TUF4MHRMY1dUS1dIUmNlQzdpRThZajNMTUhYSVR3RG44YUFRZzNnaE1KNmhPVDRnVjlRWEZ4SVE0ZXFNVVBmL0U2eHAvM2MxeDUwNS94blorK2lhcm1kcU9rSGdxeFg2OCtxS211TncrK2tRSG1kZ2NEc05YVTNJR3ZmK08zR0ROK0FoNjQvVHk0UFlhZjVLOXNVWmN4V0pLWlpKdlJYdU9HSlBzayt2aFlzZ3RpU2VZT1Fxc3dXbmZ2UnROdi9oc3V4ajUvSWtMb3pTNkVBNGgyZENIYTFXa0VKV3VTTXBqMWFieFRFM29oU3pFa2hnQzNLSVVlek1tQmIvWk05TDMwU3NSS3V5T2JNY1NYNWFWRlpjTHBaU1FtdWFoTlptNUdiV0JicEJRSmx1bnNZdERldFFkWXR4VTFCL2FpcmJPZExqMGRnVjRWaUpjVXcxRkUwRUNyektTMXBXWG53NS9EVDdvOXA0Y0FoQzZVVFV0MTdRd2tIa3BCRW5oKzdscTBNWEV1MFFOdWpFMDlleFlaSUdZc1hVck1heGV2aXVEZSsrL0RiMzV4aDBtRlJNYmROVFozMHNlSGFPYUVtbFM2UjM3NHNuMlB0TThJU0JWSlFPb2hHV1kwOHV3MHluZ1Jjc2NJaU1KRk5JeDBRbjEvYlIxOGthQ3BSekZKZ3JGazBuUmxncmE2WG5pTTJOTUlXSG1SUUlJc0trNEw2ZkQ0RWV6WkMrM0RSc0NSbjRNU2FuaGhWd2V5RzFyZ3FhcUhzL0k0WE1jcllSMC93VStpcGNwS09FNmNRS0s2bHArMVFCTTFOYThBMXFReEtHWWkyWC9HK1NnYU5RRTlTaXFReDNpbWlUOHZVYUk3TTVQV2xHWVdwRmdFSFE1YXBRUmtLS25wSDBmcXVYeUJodHl1dTI0S3ZuTFRiRng2L2xnTUhsUk9BWGtOVDFJeGpCa2h1aFdtMFJOWXFEcmVLbFlZY2dRb3hyV3JkK094WHo2TEc3LzBSVXdmWDR5THIvODFOaTUrbUxja1c4UEdtSUtNS3NwVHF1cGtqRWhkOHhHa2J0Z1d5Y3lJU1lxcnBoNVZyN3lDMENzTHpNQ20zdFhnRE1hWnA3VVpTOUxLVWxPUHBNZU9tZmY5S0xlaCs5TmNVVmhvaktjNkdUc0xwazhGcnJ3Q2ZmcjBRckN0QlllMjdZQzdyY080SkFONEtIeGViWlRLVFhTblpWa0pNbHBUQkNyVHEva2ZKclRCeG1hMHRyVFF4WFNoblNleUIvVENxTXN1UjJaeENkS3pNdWpxTXVCaWpMT0JneFQwNC92OEliS1pRTlRjaEczYnFTeUV0K3ZYSHpNSy9MbHJKakNSTFdPWjltVTdLeTA4Y1A4am1EMWxPTDV4MTdWMldPMnlFdGJpdHpmalQzOTRHWGZmZHpkNkZJUnh3MWVmeGFYbjltSzVIcFNYWnFOSDl4elQ2Y2xqKzZPZ01KdEZKVTFZZEtiMkpodG9pRzRLTzNmajJMTno0Vm0zQVI0Sm4wSjNCR0xNVTlvUmJROFlVR0VyaGRTSVdzaDZsYmlHQ0UzRFpLQldBSFZSbTV2S1MxRis2Y1hJbXpxVnZyNGJNbGFzUmYyaTVVQ2d4YXdlQ211eHBLeVRjVTdhTDlJYU9zdmpobHN2OFBBUURGQkpFblMvYmMxTjZBalJtekNoclU1ekkyUEdWSXk0OHk3NENEQjhGSktMYnM3TjY3WFdRYzlKbWU2YzJxK1BKU3FabEkwMzdObFRqV2ZtclRNS01tbENMM29HSjBZTktpWHdLV1I1YksvRGc0TTFGcjczZzUrZ09Ec2RQL3J4WFdhZG9RWmhFV1QySGFNYnk2SHZGY29aMmk4SGs4YjB3NkNCM1hHc3FnM3JOeDNHdWczSFVkUFNac3RIekZNRHo2YVJodGtrTWxmM1JacWEwVUt0bGFjd1NFMHRwdkJNM3FQQ0tYdjFYMWZiOTJtVTJrNWk1ZTdrQTdUa0xUZS9BT1ZGeFdhZG5OUHlvS0doZ1gxZzhDVUs4L2o4ZEZlRTMxNG1zbWtlWXprT3JXT2d1cXBVTTNKQWlCc201Ty9xYWtPQVFvMkdOV1pJU0VLbHljek1KbXJNTW1qTEk4dExMa2I1eEJaa3lMN3Z5SWxtaGhJTFg3NXhLbnFXNTJMZnZnYmsrRjBvbDREVWIxNGo1K0h4V21iZXE0MEthNGJDZUp6b3pvSDJkZ1pSUnhoRmhVNTBCTVBvVzFHQVN5NGFRMU9jZ2g5KzZ5cDg3OXZYNFFmZnZnTEQrcGNiSnA2dGZFUkpWcFBZV0kzVFYxY2huWEVoaldoT2JzMFpwUnNVT0lnUTFITmY0M1FLN2xwWWFXcWg4a2pRR21RVmVBanpaSWlvcnJGbkdSSTl1cUdBVmhGdnJFTldWUTM4RFA0WkJCNCtXazhXeS9UemZzMGQrVm04TUt1UDkyZkVHQk5EZExPUkFMeDBiODVBa05lSDRPVnhCZkJZQnFFeXRWaHhXTHlScTVSeTJERCtsSDZmTFFORXZQWDIrNTVCZlUyN2VWU21zcXFGc1M4YlAvNzFjcXhZZmdETFZ1NW15R3cxWldySlZ4RmpiRzFydGFsZjFaaHg4U0FiYS9HQTFqcjNMaS9BTFRlZll3citKTzM0S0RMVDhpUXBoVWFUVzJpTm1tbE5UWjdKa3N6SXdRZHpJM09iWWdxMVB4WXoxcU4zQ2ttalBZd1BCUVZGVEJleTRIZjdVVnRmdzQ0ZlJWdFRFMXJhMnREZTJvSE9sZzZFdTBLSVV2aTZUN1VaSWJBY3hiUTRYWjFHM3NOUmU4ek9XQmN0MXU5TGg0Y29UMjl3MGRpZzdqa3BJUExva3hQTHBjRDc5Y3BIbjk1RjZOKzdBTi8vNXRYNDNMVlQ4TFV2VFdaSTdNTG16WlhHNVpsYXFJUWFhNHhvdG9GNmJBN0pyWmloZURXY2pPbGVrR3ZlRW1JMzYvMk0reVIwc25PbVgwSnNFWGc2aWI2cW02bnRBUjZ5QjFVcEhXNDJxa3RSNmw2Yk9RbEVHRDNaWkY3alFvRFNDNVFVd05XakdKWkd1dW15M0RzT0lseFpoYzdXRnJRM05LRzVvUjUxemJWb2FLNUJjMHNqdzFRVFltMnRTQkQ5MGJmREl2eE8wT3JDb1E3bWlMYVNtSEZBQXRZUWtWMDhLNHZDSldmSUZQRkg5SThKaUdTVTFJblZHNnRRMTlobFVPcnJ4QUNiTngweVM3UXIrblpELzRFOWNQUzRYaGVYWUtvZ25uR2prbmlTQU5yb3E4c3RXSGxxSTJ5WXFSanlqNUxLTzFrbUc2cDVmejF5MGhIU1NqaTc0YklUdVR4N0JJRmJVbEM2THlVZ0E3MlY2RXBvdkY2djdreEw5OE9YNmFjbnRORGExb3lxMmtvRXhYek4rZkNlT0MxRDFxRjVLUWtnUUZjVzBBQnFWNWdva3JHSThTaEVGQmtoNU5lYUNFMVBtTHlNZGJnSkx2UVVCUS9TMnUxNi95a2lDOFNGbno5eU1mN3JqMHNZMnl2eDNaOHV4amQvK2hweXN2eG9ybTNGSlJlT1pKeGlYaWErMEpwbGVScWRNR0dBNUhUem9GYXZDSzZhR1ZDUnNUTjdHT1Vmb1pRVjJJdzFCL2lIRlFaYjRXeGhmbVRpa2NPZUsySmRFazZxcmhSVFVnSjIwc3JNdEFHUEI0bHltdEo5aUJjVUlqMDdsNGJsUjZ2UGc4aWdnV2k4WkE2cUw3OEVoeTY1RUhzdU9oOEh6enNQaHk4NEh5MWp4NktGQU1NTWY2bnpGS1BLMU1pL2xveXA1aEJQUlZsZmpDZ3dtcG1HdUJuMVp2MEdxYkJOM042dnhKK0UyRzhXTUd2R2NEejl1My9EK2lVUFlqTzNONSs5R3o5Z3ZKODVmUmc5Q29HTmNiZFNERjdNL1lTRGNURzVPbExMdjR3bGFhSkYrTUhNUEo3VTVIK01VbFprTmpaU3ZsNHBTWVJhM0VGWEkwdVNVcGpFTkRtNmtJcEpwekpEOTVsMjhKT2xHR0RoWWJhZm5aVnAzaU9rUjFMeUMvTXhjL1pNWEhYbHRianNzc3R3d1VVWFlnNkZjdzZGZEI2MzBXUEhNR2ZOSmVwakxDTktjN3U5ekhmY3RFSjIzRml4NmxkTXRPTlBodC9Qalc2VVFuSVNsR2hxNHg4WGtFaU1WbVFsOGMvZS9kWG0zWDdIcStUZXBBZnNuMDRxQ0F1a1NIL0pDODJQcFVSZ1JKV2JtMnVnWjBPenh0S0lKU2c1TStnb2QvU3ZJRk1MYzZIMlRyT2V6YU54T1dxMU5GVU1PUFhwRDVzaDNDUllrdUMzQkNRUmFxdzRrcHVKUkg0ZTRzeGRnbWsraExLeWtTaXZRTnVnL3FnZjBnK3RRd2FnZWNRZ3RJOGFnczZ4UXhESXkwU1g2dkF4NDZEVk9TZ2dGVzJXaEpFTEdqblJvS2ttSUVMcFhpUnljeEFqZExlWXVOcGpmeDhXMGlkUlg5TnkxcUc2R2hvNjhQbXZQbzB2Zk8xdnVPS1d2MkRNN0ovZ3pUYzNHMkhZWlpMallRZWFHNE5taXNqTzdzUStTaklyVTA5WE85SGNWcytteWlYWXAyU0cveXFTNTlEc3JwNjIwd0lTZ1JRMVhGdU04U05GeHBKUGt2d3pOWnFNa3FHSldWNi94eWlWMStrMTJiamJMY1k3a1ViTjgvcDl5TWhJUjJaNkpwRmZObkl6Yyt5MUNVd3JORnJnNGFaMURuSXA4dmNzM1dpdGFRY3R4MGZCNTFIb2JxY0hMa1p0TThJZ2kvc255RWEzN0I4OVZXRmhPcllzcGJ0Yi9CQld6cjhMZi8vOTV6RnV2SjdqMG5YcUxmUElzSVYyeHRsY3duRHFrU0dUbGVZVDBjajlkSFYwR1NzeWdVdmlUZEVwWHcwbDk5VzVVejlQU3l4UGlxZ240eXpsSkNITHpQZ2FkNWRra3NicWJJRVoxVEMzcWVGeWgycXBCS2VWdFNGbmxJbEVOdU5HcG1HZ1JkZWxOZG91TGFwUGM1SEpPWEJsNWNDVGs0dU03QndqRUM4VklJZUNpbm5vNHlsUTZaM2JvalhSbFNudUtBNUlnV0t5cHN4MFdsSXV3UEtNWWlndXNmMnlxRk90NmIxdlp5WURqc3lvcDIzQnh2WHoxNStlaGlFRHlsRlVrRzMyTFlmOWZGS1E1eHZidTlDOWU5RjdsaVJieWFmUDFoUkFYVjJkWWFpUkhmZFRyVEYrOHhRaU93MVRreGUvcndNZm90UXBYbTltWFdsRnRrRGthazY1ajQyemQ5OWZseU9wNldhdG14aW1XVkxtU1NaZllud3lnbkJwWk1BTHY4ZUxOQ2E2ZXJsVFdob1JtdHRsckZTV0ppdlNZbm5kWjlxZVFwU3NVL3RTRnEvUGgvU2NMT1poaWx1MEpNOEhVZTgvUXJiU2laOVVWNWFuL3NtSzVUSDBxVmlvbU9VeC9PenNpcUt4U1c5YTdtbVVSK1RVMnVQdXhkUkFSeFlhNnpzUlpQTEh1M2lDa2xkbitLdndiMGk3WWhnTE8xUGpkZDE3bXkyWUZEamdqbzNZaE9xU1piNmZlTjdZUHdWTExaSkd4OTEwVWZ4TStNZzRDaURPUU9hZ0VLVGxjVEkvU29aYWRGRmV4aHlUVXZDY2g4bHNUbDBML0hLaEJBNmFvVlZ2NUdyTmlpUHVtVThLTGtqcnNXaUZ6Z3k2R2ZXZGxtWFBSUmxuOHc5VGluZjJySUhHRHJndkY1aXdZNyt4c21UTWtwWFYxd1lSalhuUm83eWJaR2JJcWVXdW1SbCtGSGJ2aHFxYUdqTkVaQXVBeFNXdk1zSS9sWkxPOGtQSFQ2R1VJRTl1aWdIOGZFOVlTWUVsTmUxVU9wVXBlZzJPM3FlcW9RTDVkN2NFNGRXYmpzbEFsbWRpUnZKVDJxOEJVQk5MNUI0Wi8xcGFtMDI5TGg2MzZ4ZVNwSGlvT0FsSE1qOWkyYm8vemU5bGp1UTFVK1N5VUZNMkZVUDMvY04wNnEza2w3MjgyTjR4eWJ5K0dVdWk4cEFsaHc1V212SEkvTnc4TTFjcU1zQkJVTFp2bjhHb3FhNURWMWVLZVVsaWdYSjN5dmcvNlBhVWQ1eEtIN1lJa2UydTFGa044K3VCQU8wYmRFVi9iV3VRdloyT3hFU1QxUEYrU3dPZHNnWXlVSUJDd3RIOGx4YTJLT2VTOGtodzZoYnZNazhGeHVYQ1dZK2VSUlpwU1pjczJFbHpjc1ZrSlJiQ1BCY2s2SWd4OTBxa3BkTTkybTVVTWpJSzlnRWhmVng3UDQ3TUhTcEtTcTYySi9WVFZxdmpESjA0Y0hBN3VuWFBCME1xRDluOGxYNVJZaTRNR05pTEVMRUpkWTMxSmxDenUrWUNrYTRoVzJ5dFUwMWttTWkrNWoxQmZWampKQkRiZWdSRHpWUkI4aEpqVFNtTFpQMGZwNjMyL2J5ZW00bEJRblM4M2xnT1ArWDY1TTZFMEN4QmF2NFlJTVNjVEt0ZzNjbHA5Q2g3cTU0bFpFVk1BK0pVWlQzb0tPZnZKdXpXa3hkNkxZQ0VZNVRLZlBrblNWMjB1Nm1Pc2w1K3l2M3J5VVhET3ZKVWJlSVdZRnNiNnV0UlZ0d05PUmthRXJiN2Jsb2hJZlFmV0FxZkw0N3QyNDd3RER1c2txMEljWFBBdkV3b1Vkc0VkMXZuU1NhZnJKaGtRTWFIeUJhZW1KanFyQUt6RVJRclZqRmk1OW1RdWQwSVVVTG5QcmYzeW1YczBIZVdwU3ZzcTBpQkVESXE2MmhoTWFOZ0VvOFpaYWNWU1RjMHVxMTNBa21MWTR4akdxOXo1eFRBNFNYU2Rma00ySkRRVDZjOE9uYTY0eDlGaW51bXo2cTRxdzBkcTlZRGF6WUJ4dytET1FtdjBFdERISFIxYlFnRUd0R3ZWemt5OURBRTVXRDZxVUxFNVB6Y05QVHFYWVpObXpiWktXelNBcXl1THF4NGFSNWUrZjJmMExobEQ5RlN4TGdMY1NQVnpETTNPQ2trWnZJU2xQSWtXWktRbnNoTS9KMVN4cWxlMWFBaCszWkRhcFA1TnoxMGZVSS81cjdrdlRvbjBwNWV4TkhTMm1nZkkzUDBxVUZrMVp0SWp0VVpxMHJxbDQ5dVRpdWxaSjFtbElHdVdlVitFbUdjanFUVXFkaGlMS2dyZ09mblBvTS9QZkY3elAvMUgxQjc3S2dCVVdyR2thT1Z6T21pR05pM0R4V1BiVTVXemU3YkdsK2NuOENZNGIyeGE4OEpIRDV1cjBIVGdDT1dyTUR4VjE5R2NPZG12UFNIWHlLMFpSYzVJRXd2cHFob2F0eEo4enFWYkMwWEdhOUdRYmlZS0ZvNWVVaTRaTjY4MXhLK1lqMWlDZ3MwU3BGa3RFaEh6Um1OdFhIZm8xdklWVWVDcm9MTVUvWmhqQ21KVlcyR2t2VjBZZTc2QmxqVnRmQ3diY2FoODFQcnpEV1lhc1lweFRDV25wQ3daVEZTbnJ4TWZwS3BSTU5lQmp0R3JROElTYnl5K1hWbWV1OWF1MDlzbDRwaVBjT21USVhMbDA0K1Y1dmtXWUNvc2NYQ3JyMUg2SEtkR0QxR3lNN3VpNGhkNUM4UGVMMU9ET2pYMzB3VGIxeS95eFlRZzI5cll4UEt5M3JqQy9kOUUxZGVlaVZXcm43SExLUTNRZjg5SGZsWU1xTGlINjJGOC9nSm53VUVqT1RlWTRBYTljRk5UbEVkTks2SDEwanp0ZEkwZGIxSTUyMDl0RWtoUm9MVk1tVWhWVmxNU3ZqR2VwTDdlbzVKZ0NSQmw2NWptc1hWaks2VEVuS3hQc1drbElXbjZySjdZbnB6MXFROFNDMlBSY042VlNDY1JLWVRMN29FWDNyNG03anJHM2ZDeDd3c1RxVnRiSWhSU0RzeGF0UW8rRFBaQ2Y0bUhaMytVa3NwU2IySGJjeW8zc2d1S01lcURidlEwVVVCU0p2S2V5Q3Rad25hS28rZ1d3a0RHdnhvUFhhTTJzemtMTm4yOXpwaFU0b3AyazVxa1BLWnJBd0VDNG1nNHRUUWlBMDVXVG10Z1Jla0NpUHB0Z1M1YmU3bmNZM1V1K2pZUFd5dTRvcW1sYzA5UnBCMlRKS29WSmRMOWNiRGlEYzNJTE81eFVCMVBaTms0Z0VyMUhvSjg0eHVrZ2p3RVBPeHI3a0ZjQkw2eXRVUlJSakc2ZDh5bkMzWmZUMlZiQTlqeFdudkFRcmdMOC9CV3JJVSt4NTVGTmE4VnhtYk9vSGhneFdvSlFIczJGZVB3MVZCWERwbkF2Um9IbnZCdjBsTDBrSXRLWjYwdTZRa0Q0T0dEc0srUGZ0dzdHZzFUenVRTTJnQVdsdmJjT2pvSVd6WnlHQkhES3NuNU14OVNjRHd3UWFtdEUrYkdpb29LWStrOWRlNW1WbUkwWlVxVjFFUWx3VE55OTk1clFSaUJIb0syYTZVakV1Q0R6MURwTVgxeHFwWXI3VDlKQW53VUNDYWlRMDN0Nk9kOGRTUS9MdUVwM2FlSWlBejdFVHllWVRzc3MweUxsVkRvRWlMb21Lb1RSOUJKOHM3RTlGOFF1RU9oT05kMkw5akY3WnQzWTQvLytGM2VPTFh2MFNBN2xocjAvWFUvS3AzMTZDMFJ4a3F5c3J0MjA1cHM5MXpNdHRsck1uQ25ITW5vcUZsUDladjNvdVFISFJaZitTTUdvNTNsNjNBaHJXclVERnBJZ3I2RGlBL2FMdGtpT2gwbHBRaWV4aUUyazQ3U0tSbElGSmNqUGIwTkRKSXovcllTNHROWTZRcEp5VWs1dk5ld3pCYUFZc1F3L1IyTGpkekgwZURudEJqWEdSOE1RT1lFbzd1RjdIRHJtQVhYQTBOeUNKNFVCTHRsSHRWRERLV3BHRVlXYmNjZHR6TUkwWFRjNUFveWdJeU1pa2tLaDhGWkRsOVZJU2s4cHlHVWtxWW9vKzZUZzlRYjFxK0N1VUpEenFPbjhEMU45K0VnUXdyblZ0MndubmtPRUlKRi9idDdzTEIvVnR4enRSeHlNa3l0Um9sMU92YVZHN1N5WkRaN0N1N2gwR0R1bUh3b0NHWSs5d0xpT3J4VGJaNTR1VEp1UEdHeitQVzczOFBQUVlQUTJhQi9uR0g3clQ5ZTJwTDBha05saDdJRlZuVUtDY0RjbUZSZDJRemFkUVpnKzdJMUZTSFA5aFI3WnRSY0cwU0E1V29xMHZQc05ZakVOYkxhVlFHaFVVeWNZZ2tvZW1aMkpiMk5xTEk5NWNueFZEODRWV212ZlozZWh6R28vUTBQK014bFNtWmUzbW9JV1lxKzU4a0YyUDhsUFBub0xpMEhNZFBIRUg5a1NQSVlSeWFPbldxZVdXT1JyMVhyRmdHTDJIL3RHa0VGRUl0aHRpV0pFOXRTeko5b1FUcGhycFRvUzZjUFFaTmJRbTh2dnc0SXByNEtpdEQ5aldYZ1JFTmpZLy9FY0VubndZNmc0d2JSRnJzMEFjWi9ENkIwYjJJY1didG04T0RjSThTUkV1TFdSc053YTdkM0d2SEpYcy9SV0s4TmpQVXcydmNkSkhwSFVGNEdsdmhEWVROZW5SdEo1VkVUU0R5ODNTMHc5dlV3bGltZHdUeGZoWEdlNlVVS2ZDZ3VLUjdGQTlpR1Y0a3NyTVJZL3h5TUZGMnVtanBWQWd6cW5GR1VrOXNZWXRPN2J0cEY0dFEveEpEKzJFMzQvaC92N1VRbFV4VVd3YjFRYUwzQU93L0FXelpVWTlSUTdNd3NyL0FHQldJOXhxbFN5cEpraTJxUkxycWhKdTluamx6SmdZUHBqVTkvenlxRzFzSWU4VkVKN1p2V0lPRkMxL0hnb1Z2WXNPaUpYQ0doRncrbWt3VkpzRGIzeldFazVhZmo2S0NicVlSOFppWXBiajJYc2RFNyt0b3NwUFNLaVdYZW1TeWxRbGhNQmcwQzJoWXd2c1VSREduazBKcWJtMnhYU0ZKNWFtYWxCWHBlaDNUd0thSmxVU2NlcFpKV3V5aWtQUU9PbE9pNE5nWjZOUzJwdWpVWTZGQU80N3YzUTAzRmZTYi8vRXpQUHFiWDJQbXRKbVlPZnNjTXlDOGF0VTI3TjIzRTlkY2R5MzBRdDVUaDk1U3ZUSzkwR0Y3a0k4bjJPcUtIbW00OE56cFRLNzJZdG5LZzJZNHhVRkVwam4zd3U1bG1IYitiTVEyYndYMkh6YjNTY2Fwb3UzT2M4OHUxRDRtUnZMVEhDN3Bqa2pmVXJRSWlpdGYwVXVjdEJuM2tseUVxTHpKRkVHM3cvYkk5YmdaMDl4a2JubzBBUG83SkpxYTRDWWMxM1VxaHdYWWJZbEc0Sy9pdWNaNnhqQUpVZVV3SDVKYlpINm5CWlJtMklzM1JweHhCSmg2SkxKejRORFRFeDc3aVVDRElvWHNwRlZuSUZzZ1pLTStTQVp5VTdnbTRZOHdCcTdiZ3RmKzQ4ZDQ3VGUvZ3VQNGNWajkreUw5c2d2aDZqTUFld2k3bHk1OW03QjdCTVlPS1dHZFNtclk2MlJaY3VlaXBKQ2tYVWtRd0NONjE5MkZGNDFHdC93OHZQVEtpNmh2WUhBaUU0WU9INFlpRGFFVFB1L2Jmd0FoNWlFR2ZaRTNDc01Lem9hNVBHWkNWa3JEVThMaXZwTklxclNrek15Z2lzeEtuV1R1WXcrTzZuTDdldTJKbVdad1Y5cXRHVHRhU250SEN5MUY3MkFnRTdqUEtFSWg2QjROOVdpdFJydDVMK3Q3SWNsMmNYSjNVZ0lqdUNSek5jK1VvOGRsNklKTURCSy9rNUg2ZlJiNkVXU21kUFRGL05IcUpnbzJGa003Z1FzNjJwQlowWXVwelJnYzNyTWZieTk5eS9CSHIwWU5SeDFZdEdReGtYZ0hyci9tbXFUSGtQTTFJakdrWk5yK1pNRnlQYXJESGtIUXZoTUZ1UTdjZk9PbE9IRTRpT2RlM0lhUUp0dDY5a1BhaEtuWWsrbkRrT3V2Z0c5QUx6aTNiRUxIL0pmZ2JPNHdMa1VrWjJIQmZ0NVZCWnY1RWgxblE2d01EeUw5ZWlNMHVCK0NkQzBTb0N4TmJrZWJhU1F2TkVMbUdVMHgrTWx0cllrVzA3VElQNmVxSGc2bUNJbUE2cVNRaVRUdDFUYTBXTUp1UjFNejBsbXVsNEl4WFpaQUtFeHQ4dnJTVURreW5lM0t5RUk4bHh0ek9JdEIzdUZsWENJc1Bsc3lub05GSnowcjlNQlh2REdDSGQvN0ViYlJ2Vm5OalpoRVJIZnh0eDdDa0p0dlJjTHZSWlFXdW1VZnpNczNKbzd1aVFsanNnelBRUnMyTXFDdzFFYTExSlNwcG1wVDh6VjhraUk5YUR4cjZreU1IamNDYjd5OUFMdjNIaUtFZG1Qa2xNbVlOR2s4SnN3NkJ3MkVsSXVmZndGLy9kdFRPRjVUWlUrUml5RmtzTkVDdytqM1NIeVNXOHZPNzRiUzBsTFRNYmtGYlpxQmxSQnM3WlhyNHNVa1RiV2JZN3pXdUVLV3E5V2RUWFIzWFIyZDBHdHJsS1RLb1JxckRvWVlrOXBvT1hScjNKWDFHaXRLdXJrVTVEY0tSUEpSVWN5VGZGclR3QVJKUTFiRzRsblhtY2x1VzhMTWYraFg3VXVZT2E5eWdxMTE2OWJoejQvL0RuVUhEcUQvNkZFbzYxTm0zR2libmoxZThnNXFhbXB3emRWWEkxM1pLNnRUKyt6K2EwaEtiYlRib0s2YkR5TWdkY3BvbjIwTDNidkhjZk5ORjVNcHpmampFMi9oZUt1VGVVNEJNZ2IyUnUxTEMvRFdZNDloYjJNRHJyN2pMcFFYRmlGY2N3U1dYcnRDTlRWYXdJWXJFSW9mR3M2UkYxR3dUQlRrd1VXWTMxcFdpaTRQOHhUV21ZamFLMXJWUkpHWXFIMnRQZENEMTNKQmNoTnlMaG1NTzg2ang1QjIrQWhjQVR2V1NQZWRXa05jM1FDcnR0N00wSnB4TytaVERscWJQYndoUmJIZHA1NjVsZUZIbWNSYTJmbU10M3BYdDR2eHozNWxtckZrMWltQnBoVG10TVJ5REwvWU51UHU2VTRzcjRXS3I5K0tHUTgveUhRZ2d0V3Z2bzZ3SHBLanBiYnk2a1VyOW1IeE82L2k4MWRlaGhHRDg5aE91eWpOdUVnVzJqV0hrc3hJQ3NrbW8yR0N5a25TMjBCR2pTekJoZWVkUTYxWWkwV0x0dkVpRnNLYk8wTUJGT1RsNDQ1YmIwUEowQ0dvUDNRWXExYStpOE1IRHJJMnhTYTdIQW5iTUp5K1h4V2I3NHhMT2N3YmlwbllPbm1kaWZmMDQrRVk0NGgycUZHeTdZanBORy9ncHJoakhrNG00K1M1T3hvYlVWOWJ6ZGhEcGFDZnROZHRNejFtZnRUUjFtcXZYcFZtOHJqZVBhUzEzZmFFSTR0SWFxaUU0ZmQ2NEdkOGRGTmttcXZTU2lFQkZ6RStkWTJ0M2U4blczanNuZEU4bG1mS2RLS2wramkydnJNU2dZWVdESms4Q1hmZThUVmNlZjIxOE9ib2thRTR3VmdBYjcrMUJHV2xGYmprb21tMFdCNDJ4VXVKeUZ2SmdHMjBZNU90V0thMXhnL3FwTTZLelBVU1dBTFpGTy9ObjUrSmtTT240ODkvK1J2V2JxbEZ4SldOSHJmZWlqay9laFRJeWNYQk4rYmpsZC85RnYyODZlaGRXa2FleWlwWkNEZVpyTzEycEdtcTNZTTRRMUZpWUYvRXhvOUNjMjRhMm5oT2orZUxrVUdpTUwxOVdNL0g2cEhMTHJZdHpNN3BxWE14bllXWUp5Q3lHb253OWh4R3VMYUdLQzlLOTh4a1dXODJxYW1HdDc0QjNyWVFITTB0Q0xhMEl0ald4c1E4YkJhbG1IcDRyYnkrbGpDSGNqSVFwYklsZk15VmFIMWl2TEdNcEx2N0tFdEtDYzlFT2FFNXBnWTRWbzJHeC8rRVE0OC9qdGUvKzIwRWQrOENKZzVEZE1JNFJOMCtuS2gyNGVVWFZ2TXpnRHUrZEQ3S2l5V01GTmtDWXFIcUluOFZOZTAyMkg5cDVqWnNUa3FQMThuSDIvc3d5NHR1K3RLTlptM0I0MnhBOVlrMnBGRURYY3d0RGl4YmhqZm1MMFFmSm1ZVlkwWWJPVGpwOTdYUVFvNUF4V2hBMUhROXFaSEdyUkZSOWVuVkI5MllNNGt4ZXVHU0dHaGlCbDJqR0NxaDZkMnJFUXBPK3haQmd5cUlPS0tJUmtPb3JxcEJRM1V0NG5vQ2dWYWlwelU2T3pzUnBHc0pkb1hRRVFnZzNFazNRd0VaYStMNUZNb3o5ZEFLc3JJemtaNlphYS9obzBLYWw3U3JnZndWZmJ3bHNZZnFDejFPT3kxN0hmUEg1dVkyekdhSzB0SFJnUVA2NXlka2hTSzludHQ5N1kyRldMSjhHYTY3N2lxTUh6K2NDRi8rZ21TS1Z6eEtWa3I2a0NVbFdaZjhZbjhhYytldkdxS0Jpa2tqZlBpM0c2WmorNDRtL1BTM3I2TlpjY2REMkRwK1BJWmZjelhPcFJDdDFnNXMrZG12a0hqclRlaGY2Tmdhb1NKWm1lRXZXNnlJUU9ZNDByMklqUmlPRU9GcFBUUCtzRU52d0tjbGtaRjZvcStMTVVSdkk1Wnc5S2xqQVFaby9mc0NSOEpEYTdJWWs4aUVyVnZoYW1tQUl4Q0dnMG1zLzJnbDB1dWJFQXEzMjBLalVGb1RJWllYUTRnVzI4SDZOZG9WMXNBbTg2S1lQNHM1VWhvNXFXVmlibHFURGRPcE4zYmp1YW5WZGtlazNUYXhCK3dURDJxandtUWtJcWc4ZWdUN0RsYlNuYWZoc2gvOUVIMnZJclQyWmtLdkwzOXplUXNXdkxrZU15ZVc0ck9YNnMzN0tpUGxWRVVTUlhMZlNNWGVGNTM1SDRvWUxhTFdNY1QwN2pzQUxSMGV2UDMyUXNUQ1hSZzVxQ2RLeWt2UnUxOGZST3Vic2ZEWkY1Z1BiRVZiRTkxTVNUZDBLKzdCenFvNzFEb0pSaUNBUWpmdnUyT3hhZFRhd3VZbXRPM2FEV2RybTNGQnNrQWxwM3FkbWE3VmsrS3lOT1ZERmpjZEZ4alJBMWFLTVZWTWlyc05HQUIvVVRmVUhxOUV3NXR2STFCVkJYZlFYaW1yTjA2bTNoVWtLNHFaMk1WeTFLNzBEUGhHREVYSnNLSG03ZnBhd2FwWEFSZ1VTWUVwQktxZG1oNVJMSlIzMFE5dGtYM2dwNlgzeGphZzV0aFI1T2NVWU9pZ0FhamV2TVhVMC9maTgrQmxrcXcyck4yOEIwODk4Nlo1OS9nOWQ5K01va0tCRTJtdHJNY1d4TWZSR1lVa0M1VEVsZWlsdVIzb055QVhWVlhIOGVhaTNiU2tjZ3dZVlF5L3k0L20vUWZ4NnVKRm1QclpxMUU4ZFJwY1hpOEtpa3JVUTlOUkpaNHU0NjdVVlc1TzVndlU1azRxOFRibUVnYzZXbEZMZDNvaU13TlYyWDVVTTVqWGtISFZXVDdVOHJNdUl4TzEzR295MDlGQTk5U2tMUzBOVFdSZVh2Y1NGUGNzeCtFalI3QnA5U3BVMFcxVlovaHhqQlp5UEN1ZFd3Wk9wTE1zSnF3cW8xN2ZXV1piU1Eva0RSdUl2TDc5NE1uSWhvK2IzcUtpVjlTNHpMSlJDa002eWsyS1lseWZzU2d5bHNKMzd0Mkh1c2Yvak1xWFhxZTdqaUoveEJpVXpKcUc5T2t6NE1zdk5FOGxidHp0d2hOL2VSVkhENjdGZjM3L2J2VHZsYzNpRlAvRjJ3K25LYWNqS2pYVjZtTklVTnIyajJhSEdnaTBkQUwzUHZBbmJOcXlHYmZmZGltK2ZNVnMrS210REFSSTVGQVROY1hoNVQwVWdpYlZUSUxYM29LbXVqcGFZaGNHREI4RXB5L0R1RUJIWXgzQ08zY2pzbjA3UXEzTmpDTVJNNHNwdEdZR1pza1ZyV1pTTGlWblkzdHhkcElJVEdOc3JUazU2REZrR1BLSERESnZtOHpZdkFPSjFsWkVBcDBJQllNSVJQUTJTRUlQdVdkWnNMRk11anNHRXg4QlE1d0FKbWRBUC9qemk1QlJrRy8rVDRYZ3UyWm81ZVpNejQyYmxpdEsxazd0N3p4eEFodWZldzZER3B0eDZOQVJyR051ZHNNRDk2Smswa3pBVDZ4SVJxM2VzZ2UvZi9KZGRCQzhQUHpBTFJnem9oQSs4eUNzWkNPRnBYdjZsd2lKRGJSUmpOMUlOVmIvS09yZzBSYjg3R2RQWXR1K2V0eDA0eGZ4dWV1R2d3YkE1RE4xdmVwbkYrVnE2SG9jOHhiZ3lJbWpDUFRwaTZFWFhnQXJNOHRtR0RWU3k2N0NETFJ0TGMzOHJqZnBoeGhQaU02b2FaWVN4UStRK3FVNnRGTFY2V044OHZtUlFXR2wwMEwwOExBVm9odWlrTUpVaUVpSVpZV0RiQWZibE95cXJFRjljREFWOEhwOThPbnR4dG01Wm9teGo5YW41Y2lwVkVSSnNhYk9RQkJpUmpTWWVnUWJXK0JuZnJWcjQzcTBMVjVLcFhRZ01tRU14bDErRmN2SVJTY05aTjBHQzM5OSttOEVObHZ4M1llL2hnbGpldHNwaEFUTmRxU0c0YzZHenV6dXlCSDVZRVBTYk80cGE4N096Y0RJVVZPd2JkZGhMRnkwRUlsSUswWU5HUXlmbDh3UVdxUjdJTHZJRFVKcE11dkE2MjlndzdyVlFIRUorb3dsQ2lTREpFTTl1V2ZlVU1sNk5EbW5LUUtuaDR6M09NMVRkM3ArVkd2aHRNcElUNE5yN2tjakJHWk5BamU5bjgvTFdPS2xaWnI3bE9Nd0pzakZLcmRTWUJIVFBXNlBLYytzZnVYOVB0Nm5aVlBwL2d5azBUWDZsQ3Vsc1I2ei9sc1d6TzRhTll1aHFiWVJiLy9sU2VUdytxVnZ2c204S2czNUZXV0l0UkhCTFZ1T21iTm1vYy9sbjRFck44ZThaMkxUNWlONDRzK3ZtdjlIOGZCRGQyTEN1SEtUV0V0RkZFczFKVVJKbVhyT2hzNW9TWWFTVjRqcHhrcE1CWElkRGh5dWJzUFBIM3NDYTlhZHdNV2Z1UVJmdWVVOGRDK01hY3dhVHVZT3p2MzdVYjF0UCthLytCem16TGtFdmErNGhMa1ZYWjBHVmNVSkVRTnppTUhhdkJpWFdxOVhxZWxGVUx6QWFMM3FFOU5UVFRWRFRzSytGSWdVSjQwQzEzOW8wZVA4bHVhK3FSaUM3MXFNSW91VUJXaitpTFpudDk4b25SNUlJNXBqL3FKcGZiMWQwdTFqTWt0QjZocU5TTXUvcXMvTkJ3OWg3NE1QbWxkVnQzVFJYWThZZ2NpMHllZzdhVElTR1M3bVFGUVN1VUJlUDI5UkZlYk5tNDk0b0JJUDNIVUx4ay9vWjVaS3F6aURQNFIwMVEvV0llZVpHa1Q5T0RvenVwT0xFelBGVDMwYUFmRlRoNm4rMmRscEdEWnNDbzdVdG1IeG9zVTRkbVE3Sm93ZGd3dy90VHdlUWQyR3pYanJ0VmRSbEorUFNWZGZZUVl6ait6WWllTzdEOUIxZTdCbXhUSmtVVU16Qzd1Uk1ZdytLUXZTbUJxUHB6YS9MdzFwUkY1cHZuVHp4RVFhTFVHYlIrN0tuMjVHTWZRSWpFWU5KRHdmM1pXc1IrOXdNSmJuMFJOOG1iUWtsczM3L09sK1kxRjZvczdIKzF3c1UwOVJHR1FuQnVybEh2UUFYVzNONXUxbFBXcHJzWGIxYXZpenNuSGc4R0YwRkJXZzM3aXhjUHA5eHJPMGRnVHcrdHViOE13enI1RlJUbno3L3E5ajFJaFNlTWdqZVFrTm1ocjJ5WDFJYUZJVWF0N1pXTlBaV2RMSGtMbVpjYWl6SzRiZi91bGx6SDF0UFQxYUNlNzR0eTlneHVRU1pNZERPTEI5QjNiczNva3JMcndRZ2RYcjhQTFRmMGVmaW5LallUdU9Ic1RsZDl5SmJ0TW5xMittNFZFeW1jWkFZbWNFbWQxeE1zMUJsMEd0TlRIS0hyWXhpRXNBaWIwM2lrTnVTR1AxM2VSa0dsYW42OVB5TFpFUXF0WTFhQkdOM3VtZ2R4U1ovelBMVFhOSUJpSnBBRTFWTEhnRHV6ZXRSZGp0eGVncnJnWXlzdkJmdjM2TWlwS0JXKy8vQmh4RWwwRXFqWjZNT0h3TWVPbVYxWGhueVJKTUhKK0xyLy9iOWFnbzdXYnFOTnA4a3M0c2tOUFJQeTBrc3BCZHRrMjNzZE9CaFV1UDR1ZS8rQVh5NkFhK2VQMGMzSHpsWktJd1B4SXhBZ0V5NzlEZi9vNDFpOTdCRjI3OU10YTg4UmFxaUlxdS9lRWo2SWhFRUtCa0NnbUxaUlV4d24wdGFEVERMc1k5a0kwRUlVbzI5WlNGSGlyVENIbUViZkFZU2JFRld0RFBjeWRqS0VrSVVmZnJ0Ym9xdzBFTGtldzhUSWpORW1NcWdBWkYzVEVYdWtKZHh1cGtUVy9mY2hNNk9vUElLQ2xGWVovZW1IRERqYlNxSnZZMUFWL3ZBVWo0SFV5OHZkaTQvU0JlV2JBV0sxYnR4WG16cHVPZXV5NUVkeTIyTjc3dFZOYitZd0lTL2ROQ3Nra0pvbnlybUFvMmZCOSsrOSt2WWRmZVl4ZzBkQWh1dXVrbVRCNlpMbVNLdHNaNnJIdmhlV1NkcU1lT0xWdHd3VU4zbS8rOGJ5MWFTczNkam5ZeVlkSmxGOE14ZlNxTmdBeWs0RFJqeWdUR2ROb0lnRUl4bHFRQXJGcHBJVXA2VGN6UlFLRzVocDhTRGwyZUJPME1VRWhNc2xGVFN6ZldqaTZDbGZ5eDR5aFlKNDV1MklMaXBVdXhhODl1TkJIS24zdkxMUWdkT0lJREIvZWhjc2R1bE5BelRManZic1NGSGxsNmlGSStYZ084dW1BTlZpeGZBamZiZWVjZGN6Qnp5Z1M2VTdrejB5emJ6YVMrL3hOMEZqSHBER1FhWXZ0eHd4ZnVGblVyeEppSmt4bThIWGozM1RWWXUyWU5JbDBCRkZQRmlrdUswSGZRUVBSa2t0bXJ1QnZLeGszQUFickN0VTg5anlGazBQN0tRNmh2YmtIRnRObll1M1VMdHE5NkYzRmFtejhuMzZ5dUZYUjJFblJvRGtmcndjVURLUzEzakxBMEwvWHVpcFU0Y2ZRNHludjJvdVVwTkpOeHJlMVkvdVpDN0ZyNUxsRlhBNTU1NlJYTU91Y2NPSWdRRCt6WWl0d1QxZEFNKzZycW81ZzRlQ2pTaW5KUXgyUHVhQlE5U25zZ1IrT1NSSStCcmlpV3JOaU01MTk2Rnl2ZmZRY2pSb3pFUFhkL0ZlUEhFc0daSElndFl0dUVDdzM5M3lBa29TNXBySHl2R2ZiaE56Y1JURjZHRTVORzk4U1E0VDJaYlIvQzRuZDM0YTFsdStCSUswTU9ZYmh2UUc5a2pSa0RaMVl1MmpxYXNJTWFHMkdlc3Zud0VVeWZjeDZ5QzdPdzQ0VjVPTEI1SS9JVEx2VHNYb1RRMGNNNDh2VHppTzdZZ1VnMGp2VE1QUHUvTmpPWmhONXhwMXhJN0dFK2xrMG9ySmNVT3RJb1NBMzJ0bmJnME5KbGlHM2RpcDZFME83NlJxUlJjZklHRE1hZXZYdXdlL2QyT0lxTFVNMXJ1MDJaaElKaFErRXRId0Qzb0NIb1B2RThOREs1M2JpeEUwL05YWXI1ODFlaXMvMGd2bnJMbGZqS2piTlJXa3hGTUxGUzhKM0tTZ0haK1NVUC9RdWs5RThMU1lGYURURUNvckRzZnkzREkyb3NOYjI4ckR1bXo1NkpyS3orcUs2cHhxdnpYc0VPQW9rWWs5aWNYRDh5czlKUVdFVExtekFGNVJTU3dzdndHZWZEMFZLUGQ5NWVoQWtqeDJETTU2ODMvNkpuN25QUEk2SzNjZkhuU2VaZDUwNlpncjByVnVEdlR6MkZJOGVQSXBlSUxhZTBGRXZudjRaREJ3NWd4Sml4QUMxVzB3NEpRdnYydlh2Ti93azg5ek5YbXVkdU4yM2Rqb29wWTVHWFg0UnNKcXRqcGt6RnBCdHZRQUZ6SUl1b0w0M0NGTFRleFZ6d2hkZFg0Wm5uWGtCOWJUTXV2UFJpM0gvM3pSZzF1Z3hwUW9icXEvSTlTU1VwRS9NL0VjOFN2WjJKL25sM3AzWXBhRk5ZcHBFOG9NYlpGRE1JTHQxclllVGdQRXdmMTVQdzJZTjE2emRoMmJwaldMditDUE1zQzNtbC9aRmV6R1MwVnkrVVRaNEdaMzQyUXN4ZndubTVLQ1lUYzhyTEVRZ0dzWFgxV3JoQ1lRd2RPeGFGL1FhZ29uY3ZaTkFWUm1vMGY5U0JmTmFkTjN3WTltN1lnR0JuQjBhTUh3OUhiamF0aTVyT25HaC9UUlhXMEFycjZSOWJHR2ZHZnY0NkZBNGFnSXpTWHNpWlBCVld6ejRBVVp2K0QzcGRxeFB2ckdyRTAvUFhFckd1eGE2ZHF6RnJ5akRjL3RXTGNka0Z3K2dwQ0pqa1lnVnNaTCtVaGZUVjVvRW1MWldUNmZ3L1QvOGk0SkFrMDhya1Z3VnRibXE4TVg5emtFR1hIL29IOTYrK3ZoL0xseTNGb2NQN0VBNjFZZHpJQWJoa3psVDA3VmVCL2ozcERqMjJWY2IxVGdVQkFTYW1xR3RBMWJJVnFHWE8wbEdRZzFtWFg0WEsxK2VodGFvSjlWVkhNWlhKcGUrS3k3SHFtWmZvanBwdzBRMDNrUEY2S3lNYlJmUm9OUkk0NkpuZ3pDeGpZVXl3b05jQmlNSVJvdE9tTmh5cWJzTHU3WWNaZDlhaHJpbUVuT3hDVEpvMENaKzlhaUxLNk5ZOGJvbmNGb1RKZWN5bmVtZ2ZNOURSV0pUaTB6OXZSYUovclpCT1EwWlFScnZlVHpyZTJOaUlMVHVPWU5FN2hMRHJkaUhVNlVBWnRYbEEvMEhvMDZjSHhnd2JnZ0dEbVlSNkNmSEp5eFNpMVNLWk9QZTk0Z09acjllektRbk95YzhocTF3VWtQM20rc3lNSEVROU5xdk1Dand5TUM0bWFwOEhOU2hSM1pEQS9qME41Z0d1STBlT1llZXVMZWhvYnNXb2tlV1lQbTBVRWRzSWxKWDFNSU1iLzF2MHZ5WWtrYzdwRmVVQkdrbFRCN0JpNlI0c1hia09KeW9QSXhycGdsN1BtWlh0dzhBK1pSZzhjaURLaVF4NzlNaEhGckc4L3RsV3BrWWQ2SEwwMWk0ejNhMnVzQzdOSFluQ29UZ0NSSU9oWU5pOE1pM1FGVUZqU3dDVngvUit2SG9jUEZDSityWk9oTU54eE1JSjh6Nkw2Vk9uWWViVWlham9aZEZOTzZDbllveGhtQkp0K3JnK2ZScjBxUXRKOVBHQ3NrZk5sZjlvN1dnZ0VrZlY4VWJzMm5lQVREeUdQWWRQNE5qUkUyaG9hcWZnTFBNL2I3dDNLeVhveURldnIvRXpoaFFXRnBvQlZ3VnZqU0JvMGszVVRnRm9PcjJybzhNOHJ0TlVYNDMyemlZNG8wRms1MlNnUjBraExiZUVsbHVCWVFQN21rKy8wQ0RiSXpqL1FYZjFQeTJjRlAyUENFbjAwUjIwR1NxU2o0OVJXSEpabWgzUS95cHZiWE15ak1UUTJoSkVUWFVEOXV3N2pFcG1rbktWamMxTkNFY3AzbmpNNUVMMlN5dm8ySmhjYWtSYzlXbndOU2M3aXdpeUNCV2x4ZWpidnd4OUtpVGtUT1JrT1pHVnc5RGtOUStQRU9TY2FqSHZ0VXVVbXZUNzN4RFUvd1ZDSWhGdENSQ2FmM1VqNVZXTERHSVVZOGgwU3dOUFBHaHlFUTM3Y09NdVpZR3VRQlJOamZYUUVpNEhBNDE1OHk4RGlDd3JLenNiMlg0UDgxeTdYSDFvMmJLQ3ZLbUNxcUNSRW1NMVZ0SmRtdEZRMGYvUGhQUnhIYk14a3M2UktRcnFRZ2ZtazV2aHBKaGxDMFZGR0xocnJyZS9KNlZyUHBtL0VtcWJVKytqVk5YNmtGczFLME41TUhtWWxCS0lOTVN1ejVDcDMvNHErdDhRRUFEOGYwcHJPNC9qaWZsTUFBQUFBRWxGVGtTdVFtQ0MiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIGFsaWduPSJjZW50ZXIiPmUtQXLFn2l2IEZhdHVyYTwvaDE+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLWZhdHVyYXnEsSBrZXNlbiBmaXJtYW7EsW4gbG9nb3N1LS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9IjQwJSIgIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT0id2lkdGg6MjAwcHg7IiBhbGlnbj0icmlnaHQiIGFsdD0iRmlybWEgTG9nbyIgc3JjPSJkYXRhOmltYWdlL2pwZztiYXNlNjQsLzlqLzRBQVFTa1pKUmdBQkFRRUFZQUJnQUFELzRRQ1NSWGhwWmdBQVRVMEFLZ0FBQUFnQUJRRStBQVVBQUFBQ0FBQUFTZ0UvQUFVQUFBQUdBQUFBV2xFUUFBRUFBQUFCQVFBQUFGRVJBQVFBQUFBQkFBQU94RkVTQUFRQUFBQUJBQUFPeEFBQUFBQUFBSG9sQUFHR29BQUFnSU1BQVlhZ0FBRDUvd0FCaHFBQUFJRHBBQUdHb0FBQWRUQUFBWWFnQUFEcVlBQUJocUFBQURxWUFBR0dvQUFBRjI4QUFZYWcvOXNBUXdBQ0FRRUNBUUVDQWdJQ0FnSUNBZ01GQXdNREF3TUdCQVFEQlFjR0J3Y0hCZ2NIQ0FrTENRZ0lDZ2dIQndvTkNnb0xEQXdNREFjSkRnOE5EQTRMREF3TS85c0FRd0VDQWdJREF3TUdBd01HREFnSENBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNLzhBQUVRZ0FYd0NJQXdFaUFBSVJBUU1SQWYvRUFCOEFBQUVGQVFFQkFRRUJBQUFBQUFBQUFBQUJBZ01FQlFZSENBa0tDLy9FQUxVUUFBSUJBd01DQkFNRkJRUUVBQUFCZlFFQ0F3QUVFUVVTSVRGQkJoTlJZUWNpY1JReWdaR2hDQ05Dc2NFVlV0SHdKRE5pY29JSkNoWVhHQmthSlNZbktDa3FORFUyTnpnNU9rTkVSVVpIU0VsS1UxUlZWbGRZV1ZwalpHVm1aMmhwYW5OMGRYWjNlSGw2ZzRTRmhvZUlpWXFTazVTVmxwZVltWnFpbzZTbHBxZW9xYXF5czdTMXRyZTR1YnJDdzhURnhzZkl5Y3JTMDlUVjF0ZlkyZHJoNHVQazVlYm42T25xOGZMejlQWDI5L2o1K3YvRUFCOEJBQU1CQVFFQkFRRUJBUUVBQUFBQUFBQUJBZ01FQlFZSENBa0tDLy9FQUxVUkFBSUJBZ1FFQXdRSEJRUUVBQUVDZHdBQkFnTVJCQVVoTVFZU1FWRUhZWEVUSWpLQkNCUkNrYUd4d1Frak0xTHdGV0p5MFFvV0pEVGhKZkVYR0JrYUppY29LU28xTmpjNE9UcERSRVZHUjBoSlNsTlVWVlpYV0ZsYVkyUmxabWRvYVdwemRIVjJkM2g1ZW9LRGhJV0doNGlKaXBLVGxKV1dsNWlabXFLanBLV21wNmlwcXJLenRMVzJ0N2k1dXNMRHhNWEd4OGpKeXRMVDFOWFcxOWpaMnVMajVPWG01K2pwNnZMejlQWDI5L2o1K3YvYUFBd0RBUUFDRVFNUkFEOEEvZnlpaWlnQW9vb29BS0tLS0FDaXNIWC9BSXFlRi9DbmluVDlEMVR4Sm9PbTYzcTJQc09uM1dvUlEzVjdsdG84cUptRFBsdUJ0QjU0cWw0dytPL2dmNGVhMy9admlEeGw0VTBQVXZLOC93Q3k2aHExdmF6K1hnbmZzZHcyM0FKempIQjlLbm1TM1p2SEMxcE5LTUc3cTYwZXE3cnlPcm9yejV2MnRQaFVzZTQvRXo0ZkJSSDVwSjhSV2VBbWNidjlaMHp4bnBYalg3Vm43Y0RhWGNMb1hnUFVJWG5qWlh1ZFdoMnl4am9Ra1JPVmJQR1c1R09CUjdTUFJsVHdkZUZ2YVFjYjkwMStaOVRVVjg3ZkIvOEE0S0FlR3RlMGVIL2hNdFQwWHdwZVJoWTVwNzY5anRMU1Z6d0NqeU1BTjM5MG5JOSt0ZWtRL3RhZkN1NFdOby9pWjhQM0VoS29WOFJXWjNFQUVnZnZPY0FnL2lLUGFSVzdDbmc4Uk5YaEJ2MFRaNkRSWE4rSHZqSjRROFhlRTc3WHRKOFZlRzlVMFBTMlpMelViVFU0WnJTMFpVVjJFa3FzVVFoV1ZpR0l3R0I2RVZvZUR2RytpL0VQUVl0VjhQNnZwZXVhWE96TEhlYWZkSmRXOGhWaXJBT2hLa2hnUWNIZ2dpam1UMkluaDZzRTNPTFZuWjNUMGZiMU5TaWlpcU1Rb29vb0FLS0tLQUNpcTJxYWovWnRuTk41YzAza3hOS1Voak1ramhSbkNxT1N4NkFEcWErZWZoaC93VlYrRGZ4ZCtDSGpUNGdhTnErdlRhRjhQYjFiSFg0am9WMjEvcDd0dDJzMXFpTktZemtqZUZJK1IvN3B4bktyQ0x0SjIvNEc1M1lYTE1YaVlPcGg2Y3BxTGltMG03T1R0Rk8zV1QwWGQ2SStqNks4ZjhYZnRYV3RoNDY4QTZCcE9sYWxjWHZqYUNYVUdpdnJlU3h1TlB0VTJnTkxES3F5SXpNeEFWZ0NQTGJQYW5mRjc5dGZ3VDhIZmlwb2ZnR2VUVnZFUHhDOFJRbTVzL0RXZzJUWDErSUI5NmVVRENRUkRuNTVYUlRnNHllS3FWU01WZVQwTThQZ2NSWHFPalJnNVNWMjBsc2x1MzJTNnQ2THFlSS90My9EdjltZUg5cy80WS9FYjR2ZkVUL2hFZmlENER0RTFMUUxLWFZJN2EzdVlMZWVTZnpKSTJqWm5VT0h5UXk4S1JYNWQvOEFCYmI5b2p3RiswSCszZmIrSnZCZDE0WDhiNkRKNE5tdDExUzN1TGlTTXlSMjEzdmp6SEtpL0xrWjR6ODNXdjFPK0pmaVQ5bTM5cjdSUGlONDgrSUh3N2ZVdFErQldsM2R0NGkvNFNiUTVMZTYwaUNPM2x1WllGTEhZNE1KWi9rWmxJa0J6elg1NC84QUJJcjlsUHdINCswL3hCKzBGOGF2REhoVHd2OEFEdndmWTMrcnhhUXhtbXM3UmJtUm1UY3BrWldWSWl5cEVxRmlTbUJrcXA4UEcwWjFYeXc1ZVdUdmYwNnZvZnQvQk9iNExLbDlheDhxenIwS2ZzNDAzeTJicVhrbzAwdmUxMGV1bnZYMTBQTWYyS3YyTHJIWHRKMFh4bDR1OE5hUmFXN2FhaVdHbUZiaG1mRTd5Q1NaWlpXRzNoR1ZTTW5xZU1DdnNJRGFNQVlBNkFkcStsL2h2OGEvZ2I4UmZFM3cvd0JQZjRSZUtOQnQvaXFqUytFZFExUFFGVzAxcUlRdFB2RFJ5dTBJTUsrWUJPc1pLa0VDdk12K0NpSGpUd2Y4S3ZqNzRWK0d2aFB3M3B0anFVMm52ckdxWE51dXd3eE14amhROWZ2RkpEMis2UFd1N0I0ZWxUcDJwYTl6NExqRFBNenpMSCszek5PTjc4c2IzVVkzYXN0ZWpUVW52ekpwN1dYai9qbndKby94TThLWDJoNjlwOXZxbWs2akdZcmkzbVhLdUQzSGNNT29ZWUlJQkZmbmYrMFQrelEzN0ozanZRN0dQdy9wdXFlRTd6VUx1WFROVGxhNkxvSGdoQWhuMnpCUktDakRPQUhDaGdBU1ZINlJmYUUvdlZtZU12Q21rZkVIdzNkYVByVm5EcUduWGlGSllaQjF5TVpCNnF3endSeURXZUx3Y2E4YlBmb3pwNE80d3hXUllybmczS2xMNG8zYXZwYTYvdkw4ZG41Y2gvd1JLL2FUK0E5aC93QUU0L2laOEtmaWo0MDhNK0FXOGMrSjcrSjlPVy9lQzVuczU5TTArRXpSbVV5RVpaSkZCNUdZengxeitsSC9BQVRWK0d2d3ArRWY3SW1nYUY4RmZFazNpejRlMnR6ZVBZYWxKZHJkTk5JOXpJMHc4eFVRSGJLWFg3b3hqdjFyK2ZqNDBmc29YbjdNdnhlMDBEU2RCdnZDZC9kRWFacWx4Znp3dDBKOG1VR2NBU0tPNEdISEk3Z2ZYZjhBd1E4L2JqK0puaG40OGZCbjRKMk9xZUU3VDRhNm9kVm51ZE50dkludUdjaSt1TXJLenZML0FLeEZKd1R4a2NDdk93V0tsUnF4bzFvNnJSTmI2dGZLeCttOFpjTDBjM3l6RVoxazJLbEtGU1h0cFFsSmN2dXduZXlTY3VkSldTZmRwbjdqVVVVVjlLZnphRkZGRkFCUlJTUG5hY1VBZVBmdHFmRUh4TjRPK0JHdFFlRGZEUGlqeEw0bTE2RjlNc1JvdHVzajZmNW55UGRPek1xcUkxWm5BeVdabFVBR3ZrSFVQK0NjdmlyNFhmOEFCU0x3KzNnSFNiaTErQ1B4VzhQNmEvamhHakt4V3QxbzhrY3FKSWd3STJ1QWtLYzVMR2E3NmNtdm9MNHIrSHYybGRROGRYMG5oVFgvQUEvcCtnNzhXc01sbkhJNnI3bGhuTmMxTDRML0FHdHA0bWpieGQ0ZFZYQlVsYkNJTUFlT0RqZys5YzFiQ3hxU3ZKN1cvd0NEOSt6UHBNcDRtcjVkUmxSdzhWN3lrcFh1NzN0eXUyMTZjb3FVT3p2ZTl6b2ZnRXNueDIvYk44ZWVPcFVhVFNkREsrSHRKYzhvWTRTZDdMN05JWGIvQUlGWHozK3l0cFBpWDlqMy9ncHorMGg0ditLdmdQNGphMWUvRUZyZHZCM2lEUVBEVjVydG5kMktQS3pXU3ZiSko5bmNqN054THNRZVI4eklBcGI2VjBmNEUvRWo0TmZzMzZYb1BnRyswMno4VCthMHQ5Y1hNYXpLNVlsbUkzY1pKcjRvL2JLL2JyL2FvL1o5OGV0NFJzL0VtalE2cGJ4cFBjM1UraXhDTWh1UXNXNWNPUFZ4a1o0SFFtbldvODdqSytzWGY4TEdPVFp3OEhTeEdHY09hTmVLakxXMGtsS01sWjYyMWlrMVpwclR6UFV2K0N2ZnhmdXRLL1ltaDhMM0hneUR3UDRxK1BXdnJCcUdtRzhpdUx0dFB0MlNTYVM1ZUVHTXl2SEhieFNScTBpQlptWHpIQTVhM3crSHd6L1kyK0gzdzE4UmZDdnhWNDYrSGZ4WVNlVHg3ZGFIcGQxZVhYaCt5TWFteW5qVzNCZG5XWVFQaEZkMVJIWUtTQUQ4S2VOUGpiOFdQMmx2aVhvL2liNHI2L3ArdFhYaHkwa3RkTlMydFV0bzRRN2JtWXFnQUxFNEdUemdBZHE3M1Z2K0NvSDdXVnZmUEhwUGpId3phNmJGaExhRWFKYjRqakhDanAyR0tKMCthUExmOHY2MTZrNFBIT2hpbzRsd3ZadHBLVWx5dTFvdU1ydHB4MGNYZDZ4VjdyUStxdjhBZ2x0K3l6OFFQZ1YrMTc0a3NkQjFqNGlhdCt6VG9HbGJmRDQ4ZTZhOW5kcnFNbTNJc1lwMGpuV0tOTjZtWHk0MWNOZ2JzYmo4bCtML0FOcHZTL2pSKzFIOFIvaXpxMnJhZnAraytJZFdheTBHUzd1a2hWOVB0OFFXeFhjUmpmSEdzaEEvaWtiazlUbitOZjhBZ3BmKzFyci9BSUsxcXgxUHh4b3JhYmU2ZmNRWGEyMmoyOGM1aGFKbGZ5MkF5cjdTZHJEa0hCcjhaN3NlSVBqaGYzMnBhak5OYytYSENZWTJHK0swamJCRWNZUENxT21CNmM4MXorNWhxVnI2ZjErQjlCTDY1eExtWHRPUmM5b3gwU3U3YWMwbWtrNU42eWRsZDlEOTNiWHh0RGYyeVRRelJ6UXlES1NSdUdWeDdFY0dwZjhBaEtsL3ZWK2MzL0JPelgvRTN3aCtLT3VlRDdxNnVianczY1R6ckRCSXg4dXhtajN0bU1md2hncEJBNDc5YSt6UCtFdS8yeFdsR3BHckhtanNlWG5PVVlqTE1UOVZ4U3RLeWZ5ZXgzUGpPMjB2NGcrR2JyU05XdDQ3eXd2RjJ2RzNVSHN5bitGaDFCSElOZVYvOEUwUDJjN245bm4vQUlLeC9CTld2NDdydy81dXFRYWZjdkhMNWtoYXp2bkVUbFVLTElxdVB2TU53Qkl6MHJjLzRTMy9BR3F1ZUhQaWRlZUV2RUZscW1uM0RXK29hZE1KN2VaZXNUam9SK0JJK2hOVFd3c2Frb3llOFduK056dXlUaWpHWmJRcjRXazcwNjBKUmxGN2U5RnhVbDJhdjgxcDJhL2RaVzNMa1VWODMvc0kvdHZXWDdTWGcvN1BmTDlqMTdUOFJYVVpCRWNweHc2SG9RZlRxUHlyNktzYjZMVXJaWm9XM3hzU0FjRWNna0hyN2cxM0h4VFRUc3lhaWlpZ1FVVVVVQUZGRkZBQlh3ei9BTUZpZmdYcUhqdndGQjRoc2JYN1ZkK0gxZVJHUmN5ZVhnbDB6NkhHY2V2NDUrNXE1NzRxZUhyYnhKOFBkYXRicUZabzVMR2NGVzZITWJVUFlxbmZtU1IvT3o0SitMbGw4UVBERnBxMm16TzFyZUp1Q3lLVWtpUGRIVThoZ2VDSzFmOEFoS20vdlY4YytFNDlZK0JyYVhxbWkyY0RhYnFGcFBOZjJZMWlDUloxajN0dlVCdUhBWGcrbkI0NmUxZUdmaWZZK0w5RWgxQ3d1Rm10NXh3UXdKUTkxYkdjTU9oRmNPRnhVYThPWmJuMnZGWEMrSnlYRnVqVlY0M2RuMzFmYSt1aDY4bmkxa2JPNGNjMTRML3d6Si93aDk5cmplSGRWMUtHeDFWbzJndFk3MHdmWWdEeWdPRGxRT25mSHJYV2Y4SlgvdGZyU2p4Vng5NnRLK0hoVmp5ek9ESTgreFdVNGxZckNOYzNtcnA5ZHY4QUk2bndacEI4SzYvck4vSnF1cGFnZFZ1bXVFanU1eklMVUZuT0Y3ZEc5SzZYL2hLZjlvZm5YbVAvQUFsWi92VXYvQ1dlL3dDdFZSb3hwUjVJYkhQbTJjWW5Nc1ZMRjR5WE5PVnVsbFpLeVNTMFNTLzRPcDBIeGsvYVUwWDRHK0dZOVMxaDdtUTNNdmtXdHRheCtaTmN2akpBSFlBY2xqd01qdVFENXY0ZC93Q0NpMmplTnROaGcwM1JkZXQ5ZXZaUEx0N1M2dC8zUUdISmtNZzQyalp5T0NTeWdjWkk4cC9iSjBxeitJSGpmd1BDOTNieVhjTHp4bXhhNFdOaEcrd2lYbm9NcHQ1NjhZNkd2Yi8rQ1RmN0dtZy9GUDhBYmMrRHVpMytsMnEyK3FwZnRLNDFTR1lqWkJlTVBrQnkzM0IwNlZ6MXNXb1ZWVGZWcjlENkxKK0U2bVB5eXRqNFArSEdVbnFsOEtrKy9rZlkvd0R3UnU4Sy9FZlgvaWhIcTBzdDRiT2VUZkt6QWhUbjA3WTlxL2J6U0ZrVFRMZFpPWkFnRGZXdlB2Z0YrelpvUHdIMENPeTB1MGloMkRHUXVEWHBJR0JYb0g1NkZGRkZBQlJSUlFBVVVVVUFGVjlVMCtQVjlNdUxTVXNzZDFFMExsVGhnR0JCeDc4MVlvb0dtMDdvL0RYOXYzL2dnL3F2d1crSlBoclJmZ240QitJUHhCOEwvd0RDTlgvMjIvdXRYdEMwRjNJbHdpdy82dVBxQ25iK0llbGZuajhZZjJiZmlIK3hINDd0TkwxN3dmcW5oZS91TFNhK3ZkSHZ0U2dkM2hBWmtrQVhqY1FqWVBzUWZiK2pmOXFTVDlwaGYyMi9oU3Z3eWJUbCtEQmFEL2hOaE5IWm1ZajdTM203REtETVAzTzMvVmtjKzlmSHYvQlpYL2dtQjhYdjJ1djIwbDhXZUMvQU9nK0kvRC8vQUFpeDAwM2wzcXh0cGZQOG00WFpzODlPTXlLTTdlL1d2bjZtRjlqSjFNT3BYVFN0YlMybTJsN0g3N2x2RXF6aWhTeTdpQ3JSY0owNVM1K2Q4NmttN0tmTkpSVW5lNlM2V2FQeU8wZjRoVyt1NmRIZFc4dTZLVVpIUEtudUQ3aXJYL0NXRCsrYTlTK0xYL0JFejlwVDRFd0pyQy9EblQ3V3hqc3didUMwMWRaZzdpUmp4dWxma0tjNS9ETmZPUGlhYlVQQnV0M0dtNnBieldOOWF0dGxoa0dHVS8xK3RleFFxT3BHN1ZuNW41SG5tVzA4RGluU28xWTFJZEhHU2Vublp2VTZUNGcvRjJQd0Q0VHV0VGtWcmd3NFdPSVB0OHh5Y0tNOXZyWGxmaC85cTd4bHFJOHlUUmRObWp1REtrUWpsMm1OZ3FsY2tzZDJOM0k0clM4VWFEZS9GUHcvSnBkalkvMmpQUElubG8wbmxxSEJ5Q1RrY0QwelgyRit5MS93UkMrTjN4RCtIbWc2bHAzd3Y4TVgxdDlwdUpaSlpOY0tNRWVLRUljZmFCMVpXN2RxNThWVnFVN2NpYjlEM09GTXB5N0hLU3h0YUZPMS9pa2wwNlhhNm55WCt4Lyt4RDhZdjJ5UEg3K0p2RHZnWHhKNDBXTy84bTl1N1M2aTJ4U2hGYlpsaUFNSTZZQTRBSXI5NFA4QWdqUC9BTUVaTkorREhoYjRiL0ZyeDNwUGpqd2o4V3ZDa21veGYyTGRhamJ5V2NjY2tsekVqT2l4Rmp1aG0zY1NEa2crMWJYL0FBU2gvWVUrTG43RVAvQk9mNHFhSC93aW1pK0Z2aTFmYXhxR28rR29ZTHVPOGhkbTA2emp0NUdhUjVFLzEwVWdLdWNmTG5IT1Q5Wi84RS9XK01UL0FMTHVpSDQ4dGF0OFRQdEYzL2FKdGx0MWo4djdSSjVHQmJnUi93Q3AyZEJuMTV6V05HakdkU05TcEYzdGZWYUxWZk81NitjWjNpTURnTVRnY3VyMC9aS2FnM0dUNTV4Y0pYc3J1THB0TnB0ZGJJOXBvb29yMWo4cUNpaWlnQW9vb29BS0tLS0FDaWlpZ0Fvb29vQXpmRkhoZTA4VjZWTGEzY0tTeHlxVklZWnpYNUUvOEZlLytDT050NDA4N3hKNGN0NUxlNmlZeWI3ZEJ1eG5KVStvUDZkYS9ZaXFPdmVIYlh4Sll0YjNVS1RSdU1FTU0wQWZ6eGZzRi84QUJMN3hCOFIvaU5ieFhsaE5hMlZuS0FkeUhzYS9lbjluTDRNVy93QUZQaDVZNlJiL0FIWUl3RFc1NFErRXVpZUNKbWswK3hnZ1p6a2xVQXJwZ01DZ0Fvb29vQUtLS0tBQ2lpaWdELy9aIi8+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgPCEtLWFsxLFjxLEgYmlsZ2lsZXJpLCB2YXJzYSBrYcWfZSBpbXphLCBmYXR1cmFudW1hcmFzxLEgb2xhbiB0YWJsby9kZXNwYXRjaCB0YWJsZS0tPg0KICAgICAgICAgICAgICAgICAgICAgIDx0ciB2YWxpZ249InRvcCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tYWzEsWPEsSBiaWxnaWxlcmktLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0ibGVmdCIgdmFsaWduPSJ0b3AiIHN0eWxlPSJmb250LWZhbWlseTogVGFob21hOyBmb250LXNpemU6IDlwdDsgIiA+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFyaWFibGUgbmFtZT0iUHJvZmlsIiBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYmM6UHJvZmlsZUlEIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD5TQVlJTjwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvYj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Im4xOkludm9pY2UvY2FjOkFjY291bnRpbmdDdXN0b21lclBhcnR5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0iRmlybWFCaWxnaXNpIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1naWIgbG9nb3N1IGFsdMSxbmRhIGxvZ28gaXN0ZW5pcnNlLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPSJ3aWR0aDoxNTBweDsiIGFsdD0iS2HFn2UiIHNyYz0iZGF0YTppbWFnZS9qcGc7YmFzZTY0LC85ai80QUFRU2taSlJnQUJBUUVBWUFCZ0FBRC80UUNTUlhocFpnQUFUVTBBS2dBQUFBZ0FCUUUrQUFVQUFBQUNBQUFBU2dFL0FBVUFBQUFHQUFBQVdsRVFBQUVBQUFBQkFRQUFBRkVSQUFRQUFBQUJBQUFld2xFU0FBUUFBQUFCQUFBZXdnQUFBQUFBQUhvbEFBR0dvQUFBZ0lNQUFZYWdBQUQ1L3dBQmhxQUFBSURwQUFHR29BQUFkVEFBQVlhZ0FBRHFZQUFCaHFBQUFEcVlBQUdHb0FBQUYyOEFBWWFnLzlzQVF3QUNBUUVDQVFFQ0FnSUNBZ0lDQWdNRkF3TURBd01HQkFRREJRY0dCd2NIQmdjSENBa0xDUWdJQ2dnSEJ3b05DZ29MREF3TURBY0pEZzhOREE0TERBd00vOXNBUXdFQ0FnSURBd01HQXdNR0RBZ0hDQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TS84QUFFUWdBWXdFb0F3RWlBQUlSQVFNUkFmL0VBQjhBQUFFRkFRRUJBUUVCQUFBQUFBQUFBQUFCQWdNRUJRWUhDQWtLQy8vRUFMVVFBQUlCQXdNQ0JBTUZCUVFFQUFBQmZRRUNBd0FFRVFVU0lURkJCaE5SWVFjaWNSUXlnWkdoQ0NOQ3NjRVZVdEh3SkROaWNvSUpDaFlYR0JrYUpTWW5LQ2txTkRVMk56ZzVPa05FUlVaSFNFbEtVMVJWVmxkWVdWcGpaR1ZtWjJocGFuTjBkWFozZUhsNmc0U0Zob2VJaVlxU2s1U1ZscGVZbVpxaW82U2xwcWVvcWFxeXM3UzF0cmU0dWJyQ3c4VEZ4c2ZJeWNyUzA5VFYxdGZZMmRyaDR1UGs1ZWJuNk9ucThmTHo5UFgyOS9qNSt2L0VBQjhCQUFNQkFRRUJBUUVCQVFFQUFBQUFBQUFCQWdNRUJRWUhDQWtLQy8vRUFMVVJBQUlCQWdRRUF3UUhCUVFFQUFFQ2R3QUJBZ01SQkFVaE1RWVNRVkVIWVhFVElqS0JDQlJDa2FHeHdRa2pNMUx3RldKeTBRb1dKRFRoSmZFWEdCa2FKaWNvS1NvMU5qYzRPVHBEUkVWR1IwaEpTbE5VVlZaWFdGbGFZMlJsWm1kb2FXcHpkSFYyZDNoNWVvS0RoSVdHaDRpSmlwS1RsSldXbDVpWm1xS2pwS1dtcDZpcHFyS3p0TFcydDdpNXVzTER4TVhHeDhqSnl0TFQxTlhXMTlqWjJ1TGo1T1htNStqcDZ2THo5UFgyOS9qNSt2L2FBQXdEQVFBQ0VRTVJBRDhBL2VZam4vR2hzYnY2NHBBdlhyblBlbGs1L2hxbHVjNGI5NDZlMmFaamt0OTdhTVpJNmZqUzdzL2h6WHlYKzNKOFJmSDNnUDhBYWwrSGQ5NE51cnlTMThOK0hOVjhSNnhvMGQyWTRkYXNZYnF6anVvdkt6dGVkWVpHZU5tR1ZLSGEyVHRidXdHQW5pNjNzYWJTZG03dlJhSysvUzlyZGpreG1NamhxZnRaSnRYUzAxZXJTMlBxNlh6SG5WUEx6RXlaWncrQ3A0d01kODg4KzN2VG41YmI5MXM5SytEL0FBRjhZTHY5b0c5OE82Ri93bFhpMjA4Q2ZFcjRrK0kzT3B4YTVjV3Q3TmF3eFJQWjJFY3d3MXZES3pqRUtFWkNiUmdraXZSUGlsNEVIZ2Y0RytOUENmZ3Y0MWF0Y2FnMnYyTnRCWjZyNHZIOW9hYXhLN3RJaTFCbmFlR1NkWTMyR1RMQWdnOGJpUFF4T1ExTVBWalFyelVaU3QwZHJjM0syOU5MTk82N2RqZ3cyY3dyMDNWb3hjb3BYNmZ5OHl0cnJkYld2cjVIMVhLTnArWUhucm1rNXlGK1ptUFRBNjE4Mi9zSzY4dWo2NzQyOEgzMWo4UjlDMTdRL3N0MWQ2TDRxMS8rM2swOVpmTUlhMnZTeGQxa3dHZFc0QkFLa2ptdm1yOXJ2OXN2V3YyYklQMmxkYzE2WFhOUytIdmlUVUw3d1JhQ3oxNTR0UTBEVmsweUw3UDlrUm1Jalc1ODZYSGtnRU5ibG14Z21pbmtOYVdJblE1NHJrU2QyMGswK1haM3M5SGRPOW1scGU2dlZUT0tVS1VLclRmTTJ0RmV6VittL1MzZE42MjFQMGRUWExOOWNiUzF1clE2bEhBTHByTHpWKzByQ1dLaVF4NTNCQ3dLN3NZeUNPb3EySTNZS3dTVGIwT0Z6L0t2eFYvNEp4K0R2SEh4Wi9hNjhmZVBQSEhnbnhSNDQrSlY1cGtPa0dEU2ZHazNoaTkwUzNqTVVja1JsU2FOMlJGanRvR2g4d2xIdDV6S29tOHpIM0grMm4rei9wZGhyM3dobWptOGVXZHpyWGlEU2ZEV3F0RjR6MVFGckZJOXZsTisvS21USVF0TUFKSFpOek1XWW1zYU9UeXFUcHdjcmMrejAxWFIydnpKTmFxNlh6TksrWktuQ1VyWDVVcitUZHJxOXJOcSt0bWZaQlZsYmJndEoweGpyU2JzYnR2YjhRSytmUDJ6ZkRaK0V2N0FuaW5RL0M0MXFPMzBmVGJheXNpbW8zRXQxYlFyY1Fya3pHVHptQ3JrSEVoY2pnWkdjZVYvRFg0NmVNcGRkK0szaXJ4NWE2emEvRkx3VjRZYSswTHdyRkxLdWoyRmc4SWZ6bzRsWmxubU1oUnBIbUR1b3dxbFJ2VmF3dVMxcStGZUtwTk9LYlZ0THUzSloyN2UrcnZhTnRYcWgxODBwMGE2b1ZFN3RKMzNYMnJxL2ZUUmJ2cDF0OXJnbFYzRUhEZENSd2FNbkgzVGh2UVYrZG5pN3hQcVB3Ty9aUDhBaFA4QUV2UmZISGpPZjRpK0xkUWdtMUlUK0xMdlZZZFppazg2U2FNMk1rclFiVllScGlORUtaMkE1SnpIci83UWZ4SDhLL0ZyNHRhRHA5MTRua2srSzNpV2Z3djRUYWUrbmFMUWJtSzVFY3pSZVl5K1FmSnVrWkJFVkdWVS93QUl6NlZMaERGMWIremt0SEphNmF3bEZTdDVKUzVyOWs3cFBRODZweE5oNmZMN1NMVjFGOTlKSnRYdHMyMWIxYTF0cWZvc1ZabTIrV3pNUFFkS052UEtzcFhya1YrY0hoSnZHUHhCMFA0QzZCcWkvRTN4QVc4TjZ0SmNhZnAzaW00MHpVSjJTNmtqaXZwSnhQSHVDanlzR1dVdGdGU2dMQVA2djhFckQ0aC9BLzRnZkFId3I0MThUYXRmNnJxaitJSkx5MnU5VWx2QXNEUXhmWjdhU1JTUk84ZUN3TGx3ak93VnNZem5pdUY2bEZOT3RGeTk3UmJ0UmMwMmx2YjkyOTE5cGE3bDRmaUNOVnI5M0pMM2RYMDV1U3lmVDdmZld6MFBzb0hhZm16bkZMdFpQbDJ0OUNPYStPN05ycjR6K0cvMmxUZmF4NDJobjhIK0o3KzcwWTZYNHExR3hXM01HbWlLS05HZ25RZVVHaWFRd2Y2dmM0WXFXTmM5NHo4R2EvNFUvWlUrQjl2cE91ZkVSOVE4WGExcG8xV0czOFdhakhkYWdIdFd6REhOSlBpM1JzQTdBVVRjMjdIeWl1V253L1VsSlUzTktWNHJYWmMwZVpPL1pMZno4dFRXZWR3akZ6VVcxYVQvQVBBWktML0Y2ZVYrcDl5aHNNZlgwSFdnTjJJMi9oMHI1Ry9hUDBqeEI0Qy9aaVNEUzlMK0xYaG5WTmE4V2FkYWl6dWZHOXpxT295eDV6c2h1a3Vabmlqa0kyYlZkU1Njc01jSFMvWVg4UStMUEV2eDIrSlRUM1BqZlQvQkdtZVZhV1dnK0xkWS90TFVyQzgrUnBEKzhaNW80OW4zZHpzaEVnd3pFSEVMSXB2Q1R4aW11V04xdXRiT0MwczNkdm4wdDJleHAvYkVGaVlZVnhmTkszVGEvTnZkTFQzWGZycXU1OVVLZGgveUt6N2J4VnBsOTRodk5KaDFDeG0xWFQ0b3A3cXlqdVVlNHRvNWQ0aWVTTUhjcXZzZmF4R0RzYkdjR3ZsSDlxYTU4YmZEdjR3ZUpmRk9zYTU4U29mQU95elRSdFI4RzZpSklmQzBpeEFUZmJkT0pBbTN1ZDI5eXlCSFhnTmdWSjR4OFEvRXY0aGVPL2pvdmdMWEoydnJheThOalJsaXVsaHpidkM4c290dk0vZFJYRW9ac0YxQkJZREk0SXFqa2M2dEpWbFVqeXRKMzZLOG9MVjIwYTUxZGJxM1pwdWF1Y3hoVTlueU85N1cwdTlKUFJYNjhyczluNU82WDF4djJvVHo2WW9KMnI5ZXZPYStRZjJTL0V0MThZTG54ejRIZjRnZkdEU2RadDdXM3VIczlldVlHMWZTTGlOMmpsZUM4VUVORVhFYXRHWVVBNEl6dlkxNXo0WjhWL0Vmd0Ivd1QxOFFmRUs4K0p2eEN1UEZXdWFsRnA4UDI2Nmh1WXJKRXZGalpyZFhCYU4zVlpGSnlQUUl2eXZXOGVHYS9PNlB0STh5bENLVFVsZDFQaHRwdG85ZFZwZE5wbVgrc0ZKUVZSd2ZMYVVycTJpaGE5OWQ5VnB2cTA3Tkg2RGx0M1hyMjk2UXRoaGo1dlhtdmtsZmk3NG84SS9zcCtOZkZFUGpmNHJYMnUyZWxXVWRxUEYvaGUxMGcyVnhMSXFlWmJoYlZWbEozZEMwMlBsRzRrZzF4UHd6L2IxK0lYajd4MThJL0N0dmN4LzJpdDVIcDNqeWE3MDJLUDhBZnRlTkVzT0FBWTVQTGlKSmpDcVdjWS8yYW9jSzQ2dkNkU2s0dU1HNHQ2cTFvOHplc1U3V1Z0VjhUaXVxSnJjVFlTaktFS3FrbkpKcGFOdThsRzJrbnIxZG44S2I2SDNZR3dGL2k3VTdKVWR0dnVhOFYvWWwrTFhpZjR5L0RmWHRZOFVYbW4zOGtmaWEvc3JDVzB0UmFKOWxpS0txN2M1R0czZ0ZpV3hqSkpHVDRmOEFzZC90dCtLdmp2NHVzYlhYdmlWNGIwdlVOVjFabzdidzFINEpudUozdDBiYzBTMzBjZ2hYNUNGM2tOdElCSk80QThMeUhGcDFsWmZ1YktWcnV6ZDdiSnZvNzZhZFdkbjlzWWUxSjMvaVg1ZHVsdlJkVmJ1ZmJHZHZmdDAvK3ZRbzJqbzJQWE5mbm40aC9iNytMbHY4ZWRRczlIOFVlR2RVOGp4WEpvZG40TkdqdkhjWEZ1a3JMNXBuRUxGVllqWnVFcGZJeUVQT2ZvLzltVHhWYytKZjJwL2o5RE5GWnd4MldxNlhDb2dWeUhLMmpJU3puNVMyRUFPQU9RUnlCWFZqT0Y4WGhhRHIxbXJjdk5wL2loRzJ0djUwN3E2ZlI2TzNOaGVJY05pS3lvMHIzNXVYWC9ES1hudnl0ZEg1SHZxdmtuT01lK0tHSG1kZHUybUE0KzczNEdlOUtkbzZiZlgvQUQrbGZQMlBlSE1mdzlLYVh3RG5iL2pUaGtqL0FEaWtNVzc4K0RRQUJsejgzcG42VW9MRHB4NmU5SXcybi9QV2xQSjc5ZnkvK3RVc0JTZng1d00wVWhPUDluSTRORk9Pd0QvTStiazVwQ3czZnlOQVlrZktQd3BPV1gycGJNQWY1VjlzNHJuN3o0WjZIZS9FeXc4WVRhZkczaWJTOVBtMG0wdnl6NzRMYWFTT1NXSUxuYVF6eElkeEc3akFJQklPK3E3VitWZTNUMEZISis3MjYxVVpOUDNYWW1VVkxjOHQxUDhBWTgrRytxL0NtWHdQUDRWczI4TVNYMG1xSlplZk5tMnVaR1pta2hmZHZoUHpzQUVZQUt4VURhU0REcDM3RjN3ejBYNFI2cDRIdGZDOXZENGMxaVJaN3lFenl5VFRUS1FVbE16czBubUtRTnAzY2RPaHhYcXpyZzlNL1huRlJ2OEF1MTU5RFhaL2FXTFcxV1cvTjhUM3VuZmZlNlR2dm9jdjluNGJyVGp0YlpiYlc5TlhwdHFjTDhNZmdoNEwvWnc4TzMzOWcyRnRvdHJJZ212N3k2dlpKcEpFalhBYVdlWjJiYXE1NmtLdkpBSE5mblgrMWY4QUNiUnYrQ2pIL0JVS3k4QStBZkVHa040YjhFMkZ2NHR2NXRKdUV1YmU0OFZYc1p0MjF1NTVlS2M2WHBkdmJtMlRuTjllMnFsR2crMXNuM04rM1g4VDlMOEgvcytlSVBEcldrbXZlS1BIMmw2aG8zaDN3L2JxcjNHcjNMV3psbUlMS0V0NFZJa21tZGxTTkJrdGxsVnZ6Ui80STc2VDRaOFIrUDhBd2o0dXQvRTJqK1BQRS94RThUK0l0VWl0TkcwazJ0eG9GdkhhdHBkcnFGekpHTnBnMldUK1ZBU3FxTG9NcExtVGQ2T0R3ZFRIS2RhVmFYT2xKdlJ5dW93YzFkMzAxaXJYMFZtNzNzamx4VmVHRTVZcUVlWFJMVkxXVWxIUlc3TjN0cjB0cTJ2dkg0Yi9BTEhQd2QrTGZ3MjhEMm10ZkRlejhEYXBwT2t2WTZab01IaWRwcnVPeHRabWpEdk5hejR1aVdmZTh6R1JpMDUzdVdKSjliK0pIaHY0YmVCL0QvaEc0OFdYV2o2THBmZzY1aWswR1RVOVVhM2p0cGtUeTQ5clBJRElRQ09ITGNnRTg4MThUL3N3ZkVlMy9aNzhSL0FMVmZHbW9SK0hkRmJ3dnJsakxQZnRNa2RybTluS3JobEFYSldKVlViaUFCa0RJSjlxK04zamJ3cEorMC80SCtJM2lpKzBlLzhBaFhlK0c3elR0STFhOXRXdXRMc05VRXpzenlxd0FYY3FZREVEZHN3Q051NGU3anNseE5MR1JvU3F6ZE5LYmphN1Y0dWE1WVhiVjJvOTI3TnV6UEp3dWFVYWxDVmRRaXB0eDVyMiswb3ZtazdMUmMydW5ROTA4WmVPUERYeEYrSDJrZlpZZEw4YWVHL0dHb3dhWVd0OVV0NDdka2RpVElDN3I1aGphUDhBMVVaTWh3Y0tjRVZZOFoybWl4ZkdMd2hQY2VHYlhVTlkxQ0s4c3JmVnhQQkZMWlJMRnZlTW96Q1NhTjhrRkVWd25VZ0Rtdmp2dzc4UWRTOGFmRDd3MitpNk40WnRyR3orTSttdzIxNzRRMCs1MDNUTmIvY0Y1SnpHN013R1J0TFkyZ0FjY2JqN3ArMHpwRjNxMzdYdndUOHRMNmF5a2kxMks1aXRsT1FodEZEbkl4dFloZ0Fjam5ISTRyelo1UEtoVVZQbnNtcXIzMXNvWDFzOUhKYWRPMGwwT3FHWUtwRnpjZGJ3WHpjK1hxdW5vKzZac2ZETDRRL3MreWZGeWVUd2ZwZnc3dVBHT2lzWldpMDJXT2FheVpXd1dXSldLb1ZZNEpWUVVKQTRyMEwvQUlRSHczcjluYmF0cGNPbHpTMjk5UHJOamZwTDUwVU4xTXBTYTRVZ2xXSlZuNDVYUGF2a0w5bDN4eFkrRi9pbDRQOEFCL2hIV3RKK0lGaDVXbzI5dGFYbmhnNmQ0aThFd3JCSmhacmhUdEs3aUkzRERKTERHTXFCMzM3Qlh4MThLM1g3TyttZkRYKzNMU3o4Zlc5cHFTUHBMUXlKZUl4a21rRGtPdXpkdGNOZ0VqSEhZaXVqTk1xeFZLTHJlMW5QbHR2elg1VzUzYlRzNHh2SHJkYTd0ZTgrZkw4Zmg2alZKMG94Y3J0cGN0dVpjclN1dEc3UGZ5MlQwWHVmZzd4bDhOZkUvaWJUbDhQNjM0SjFIV0xTM21nc1VzTlF0NXJxT0JpSGtTTlVZdHNKUlNRb3dObzlLVDRuZUF2QXZ4cThMd3orSUp0T3ZiRFJibHBiZlVvZFZOcyttejhLWFM1aWtVeHlkQjk0RVpIZXZuTC9BSUppZUl2TThFK0c3UzY4ZmVEYmk5V3lsZ2s4T3c2SWtPc1dUYnlRSHU5NGFUR0NjR0lqQjY5SzhaMFQ0TGZFYTErRStwZkRLNXRaNWRGOFNXZDE0MnVMbSszeEpadlptNGplMUJCS016dEhheW5HMERjTTV5Q2RLZVFwWXVwVFdKNUhTYVNlcWRtNWN6VjNIYUtjdEhhVjdKdHV3Vk00dmhxYzNSNWxVVjJ0SHJhUEttdFZxMmx0cG8zc2ZmdmczNFErRC9oWDhMWi9EdWsydHZwUGh1NmprRXptOWN0T1oxMnRJMXc3Rm1kd3dBY3RuN3VEd0tvZkZ2NE9lRWZFSHdjWFFkYTBtUyswZnczYkplMlZyRGZ0YTNNSnRZL2tNVTVrUW93WDVkN09vd3gzTmdrMTUzOFpkRjFiVWY4QWduSlo2ZXF4eGF6SjRmMGFIRWkrYnRsMzJnLzc2QjZIbm5vRHdLNXJ4THAveEc4Si9HZlVJZkZ2aTdSTmZ1ditGWmEzTEgvWnVsUHA4ZHN5UENDZVdrOHhpKzM1dHlIQ241Qm12Tm80R3JPcTUvV1BlVTU5WGR1Q1Q1azFmZTlydHEzUzUyMU1WQlFVUFk2T01laXN1WjdQMHQyMTZvOUorRzNoRDRYZkNidzVZYWVMcTI4UHo2czF0cjY2WjRnOFRHZStpbFVBeHRpYTRmbFNkdVVKVmlPckFBMTZicDJpYUwvd2xGMXE5bXRpZFkxTzFpanVKNFpBMGx6QWhKanlvUEtqZWNOam5jT2NZcjRxOFgrTy9EdmpXRDRaL0NueFZKNGU4STIybCtIOUx1ZkUydTZvMXZEY1hNUnQwWk5PdG5iTFpjc3U1dzJCempCQkJQMmpOVDhSZkQvNDJhaDQrK0c3eDNta2VGTkYwalN0T3RkT2tMVzAxdmZXODF2QTZsajViaU9YeVNQdktjcG5rSEhldUg2MWVyN0tWWnFjMUpxNjBmdktNRnpjMXZmZGtyN0pKdlN6T0dXY1U2VlAyaXBweGk0N2JwMmJsWldUOTFiMjN1MHZQNksrTHY3TEh3OStMR3ZYSGlUV05XMUt4dDc0eHJxa1Zscnh0ZE4xZ3hyc1FYU2JqRzdLb0M1RzFzREdlQmpZK0l2N09IZ0g0bWVGUEVsdnFWdkRiMnZpU08xKzNYZHRlK1dJamFML0FLUEpHU1RIRzBZNkVEQkErYk5mSVBqcjRYNng4S2YyZXZEL0FJUjFMVU5Ea210L2l2c041cnliZEtZaXlEczl3eDRlTHpESmtrNTRLWk9DQjlDTG9GaDR4L1kzOGJSNm12d24xcnk5TnZaNHo0TXRnTk1nZGJiY2pBN21QbWdqTzRZTzBLT090TEY0R3ZRcFVxa01VNVE1dVdObDBYTGFXNjdMUjdjcVhSRHcyTXBWNnM2Y3NQYVhMZDNmWDNycmJUZmRYM2ZWbmZmQWI0RitHL2hpMTlydWg2dHFuaWpVTmVTTmJqVzlUMVgrMHJpN2hqSjh0Qk11RjJMbkFDOFlBSE9CaXI0dy9aRDhLZU5mZ0d2dzVrL3RLMzBPT2NYVVUwTTZ2ZVF5aVl6ZVlIa1JnV0xNd081VGtNMmV0ZUlYc0duL0FBTS9aZytBOS9wZHRaNkhIcWZpTFI5UjFpUzA4cU1YeGVGNUhlV1ZpQWNnbmxqZ0FZeUFCWFkvdDUzVVhpNlg0WTZiYkR3N3JtbjZoNGduODZ6MURWaloyRjhFdEhJamttVGNBdVd5ZUMyUUFPQzFaVHdtTFdMaktGZHZtbEswbnByU1dqdGV5MHZiV3l2dlkxcDRqRC9WM3pVa3JSVjB0ZEtsbTFleWI4OUwvTTc3WGYyVkkvR3Z3NjFMd3A0azhaZU52RW1uNmtsdXVMMlMxVjdieVpVbFZrOHUzUVpMS0Fkd2JLOGNZelZIeEQ4Q3ZCUHdmdmRVOFhhbGNYOWl1b2VLYlB4QmRTdkExem01WGRCQkVxeG9XV1B6SmljZ1pCWTViYVRYalA3UWVpK0xQQlh3WitGbWwrR1BEdWdhYmNhbDR4aTh6Uk5IOFJYRjVhNm5INUxGVUYyL2xNc1RxcERBZkt2eThrQWc4ZkQ0aThhYUo4RHZqSjRpMjZuNFBrdGRlMHV4dGZEVGE3ZDNVbWgzS1hNWmtsOHlUbFZrVjB4c3dqZzV4aFZycHdlWFkyclJVNFZsR01wY3RrNDYzbkNPcWkzdTBuZEp4OTM0cm5KaXNaaEkxZVNkSG1sRk5wdm0wdEdVdE9aZE5WWnRTOTdTTmo2TStEUDdLR3NmQWpXNUlkSCtJV3FEd20xL1BxTGFBZEdzd2hlVnl6SjUrMHlCQXUwRGJnNVFISTZWUStDUDdKUGkzNEJOYjZUNGYrSzE4dmc2enVCY1JhUmNlSExPU2RzdUhsUnJucnRmR01xb0s1NDZDdmQ1eXR1a2t6N1lvWWxMeU94MnBHQnlTU2NBQWVwcngveFovd0FGQy9nTjRJMUVXZDk4WlBoeTE0dDZkT2UydE5jaHZiaUc1R013T2tMT3lTY2diV0FKUEhOZlBWTTR4VStmbmtuejI1cnhocmJaL0R1cnZYZmZYVTk2bmxlSFhLNEorN2UxcFMwdnVscnQ1YmVSa1hYN0Nla3A0RXVySFM5Y3Z0RzhTeCtJcnZ4SnBIaU8zZ1ZyelNKN2g4bU5RekhmRjVmeU1wSURuNXNCdWE3SDRPZnMrZjhBQ3BmaU40NjhTTnJsMXExejQ2dWJTNnVZcFlGaFMzZUNEeTJaU3A1M3NXYkhBVWJRQnhYbXV0ZjhGZGYyZWREMXR0UHV2SGVzUlNSeW1FM1MrRE5iZXdMQUtlTHBiTXdINzZnRVNZSnlCa2dnWC9Bbi9CVVA0SC9FWVhyYVg0czE2RmRQREdkdFQ4RmE1cGtNWVVIYzIrNXM0d1FOcE9RU0IrSXBWczR4bFdFcWRTZDFKV2VpMnVuYTlycFhpblpOSy9xeDBzcHcxT1VaMG9XY2RWcTk3Tlh0ZTE3U2F1OWRmSkgwRWZmYXk1OWU5UFZmNTlqWGkramY4RkUvZ0ZxOGRxMGZ4dCtGZHMrb1hLMmRyRGUrSmJTeG51Wm1JQ3hwRk82T3pFbkFBQnljZ1pJSXIyRFFOWXNmRmxrMXhwT29hZnFsc3JiVExaM0tUcGtnRUFsU1IwSVAwSXJ6VDArVmx4RTJuTk9YUCtISFdtdkhKRWRwWEhzVC9LbWxzaHY2bnZTSkhsaC9kYnBTRUtXL2h4alBXbXErenYxOXM1b2JKR2Y0dmVwbHVBWnhqSFNpakpiK2ZIYWluSFlCd1RKL1hwK3RJVlZqejY5cVhkeDNiOEthT2QyQXYwL09tOWdIRWJSMit1YWJ1eWRwKzk3OXFjVGc5TzNUMXBpc0FPaHgvT2tyQUpuYVRuSHpWd0g3UmY3U0hoWDlsajRaemVMUEdFMm9mWVZ1WU5Qc0xIVDdSN3pVdGMxQ2R4SGJXRmxiSUM4OXpQSVFpUm9QVmlWVldZZEg4Uy9pVDRlK0VIZ0RWL0ZYaXpXdE84UGVHZEJ0bXU5UzFLL3VGaHQ3V0lmeE16RWV3QTZsaUFNazRyNTcrQ2Z3bzFQOXJMNDg2WDhkdmlWb0ZqcHVuK0Y0N3V6K0ZuaG0rc1prdnRCZ2tuSWsxdTY4MEl5WHQ3RERibFlYaVY3V0FpTTdaSG5ESE1ocTI3TlRSdmg3cUhnajRiL0VqNDBmRmVUUzlGK0lHdGVFcnFDNDN6cjlqOEM2UEZGTE5GcHNVb1p4dURFUzNVeXN3bnVCbFQ1VVZ1aVh2K0NZUHc5WDRUZjhFMWZnSDRmampsaE5uOFA5R2U0amRQTGZ6cGJPS2FYY09vUG1TTmtIdjc1cmwvOEFnc3o0cG04Ti93REJNdjRyVzF2TkdOVDhYUVdmaExUb3BJMWwrMTNPcDMwRmtzTzF1RHU4L0hPQUJ1T1FCa2ZTZWtlR3JQd2RvT242UHAwU3dhZm85ckZZMjBZNlJSUklJMFg4RlVEclFtcmpsc2VXZkYzOXEvVGZoWDhRclB3M3FIZ2I0Z2F0ZGFsTjVWaGNXT2xRWEZ2cUV1eFhLd3U4eTdtVU1NNUF4aHM0d1NHNnorMUJvM2dHOStJMm9lSk5Ua0dsK0RsMHlRNmV1bEZieTBOMWI3MGd6NWpmYUpwSE9BQUVDZE1uRE5WajQ5K0VkYThRZkYvNE8zbW1XZDlkYWRvdmlDNnVOVmxnWlVXMGlheWtWSkpHUEpVdmhjS0RuZmdrZGE4dytLMzdPL2k3eEQ0MitLMnZhVG9FTjdlTnIvaHpYZERodTdvUlE2MGJDQWlXSWZOOG8rZGxHN2FDMzB6WDAyQXd1WDFhY1BheTVYWk9YdkxmMnNZNmFlN2VONWRlNzB1ZlA0cXZpNFNseUxtVjlOT25JM3V0L2Vzdnczc2VTZjhBQlVEL0FJS3ArTnZnZit5enFtc2ZEZlFOVytIWGlYUWZFR2xKclY5NDQwQlhoMDNUSnpLUlBIREc3Sk1zMDhjRnF3THE2ZmJNcU4rMHIwWDdJdjhBd1c4OEFmR0szdDlCK01XZytKLzJiL2lBc01abjA3eHpwVjVwT2ozcGJLaVMxdjd1R0tQWTdBaFV1QkZJelpWVmsyazE3eGFmRmZ4YjhUTko4WnlhcDhIOVNQaGV6MHlNV2VpYXl0dDl1OFEzdTVqTEY1Yk84WGtENVFHZGVTTjNJSUZXUDJ5dmdmOEE4Tlpmc3FhdDRmdk5FMHU0MXhvcmZWdEx0ZFh0WXJ2N0hmUXVsd2tSSkpWV0pReEYwWVkzRWhxOHpFWVdLeENnclFUNVU3eVVyTjJ1MjEwNnZ0dGM5Q2ppRjdHN3ZLU3UxWk9ON2JKTDh1KzUybHQ4T1BEdmd6eDVyWGpWdkl0ZFUxeTNndDd1L21tUkkyaGpMRkFEd09kMmR4Slk0VVp3b0E2RFVOV3M5SDBxNjFLN21oaHM3V0I3bWU0YjdxUklwWm5KSFlLdWUvQXI0THUvK0NjY25nMzluUHdUcHVuNkQ0bzBYVGJyV3I3Vy9FM2hqUXBZNytQVHBMbGNRQ0MwdUhaRDVFWVdITWJoZ3ZKOHc5ZnJiNE8vRDY4K0gvN01laytHN08wYWErc05FYTJ0N1hYVVFDU1FveFNPNVdJbFFwSkNzcWs0VWtaT01uZkdZT05PaEdyT3NweTV1WGxXcTVWcGRTdnRwb3JMUnA5VEhENHJtcXVuQ255eHR6WGVqYmRucXJiOTlYcXJib3NmQ245b2ExK0sycHd3UitGUEdtZzIrbzJmMi9UcjdWTk9XTzAxT0hqNW81STVKQXJGZHJCSk5qRlNDQWNFRFE4SGZ0QWVFZmlGOFM5ZThJYVByTnRmYS80WkNOZjI2ZmRUT0FkcFBEN0NWRGxjaFN3QjVyNTcvWnM4TCtPUEFuaTZ3dnZEM3c1OGErQ2RCc2RBdjMxYnc1cWV2cGU2UmNhZ01mWllOUFY1R2FOZk1EbmQrN1RZdzlPYzM0RmZzSWVPdmdYOFkvRGZ4QWs4UmFYcldvTmV5TnFlbXhXYlIrVWwxRkw1KzZjdVM2cE15SE8wbkFKNXdLOUtXVTVmKzg1cTZqN3Q0Sy9NM0s3c3BXdWxvdGRiZThuZm9lZC9hV0xTaHlVdWIzclNkcldpdVc3VjdONnZUUzlvdFc2bjBwcFA3UVhnL3dBUTZMNGl2clhWNHBiZnduZU5ZNnVqUnRITFl6TEo1ZUhSc01BV0J3Mk5wd1NEd2E3Um9jNVZsSFVqQjZlbGZsLzhmdjJJL3dCbzYzaStEMm9mRGZTTEd5MUx4bDRwdnRNK01pRzhzNVJjNlZKcThWeEJkT0xrL3ZJb29SY3NwZ1pKeVd0eHRZWlVmcEY0VDhlM25penhuNHFzcnJ3enIraFcvaDdWRXNiZTl2MGlXMzF5Tm9JcGZ0TnFWY3NZbE1oakpkVk8rSndBUnpYbDVuaGNMU3FTaGc1dVhLMnBiZE9WYU5PelY3MmE2VzIxUFJ3TmZFVklLV0lpbzh5VnQvN3pzMDlWN3FqdjF1UldYalRSL0ZPaDZwcWRyYXk2bW1nM0YxWXl4clk3N2hwYmRzU1J4SXczRTdsQVhwdU9DT01HdU8rSG43V25ocjRqYXBxZG5Eb2ZqTFRZOURFbjIrNDFEUTJpdGJGNG96TExISTRMZVc2QmVqZFNWMjV5TTVmN0x0OXJYZ21UeEI0YzFqd2Y0cHNicTY4V2F2ZkRVQmJySnBydzNGeEpMRklKV2szRlNtMGNJTUVnRWM1UG12N1dmam54Wit5Uit4disxTDhSRThNWEhpejdKZDNPclJXSjFFV0RTNlUxbmJSM054RkswY2lsb0lUTTRRcmh6QnN5Q2MxY3NQaDZhcXhxdHZsU2NYZnUwbTdXZDkyOUd0ak9OYXRVZE4wN2U4M2ZUc205ZGROcmEzMVo3UDRhL2FJK0cveHF1ZE4wSVRmYS93RGhKSUpMblRyVFdkRW50b3RaaWpKM3ZEOW9qVkpjRDV1TW5hZDJNYzEzTmpvV2crQnREdXZzdGhvK2o2YXFHVzZXSzNqdG9Ob1RETStBRndGR0NUMkhwWHlMK3lOOGI3UDl2THdEK3p6NGc4QzZYcmw1NFE4SFdrZW9YM2k2N3NQc0ZuZHl3V2pXYjJscUdjczdHNEVpU0FBaVB5U0NjMTlRWC9pRlBpUjhFTDdVSVBEdXAzeWF0cFZ3MGVpMzZpeHVyd0ZIVVFPRG55bWZvQ2VtNEUxT1k0U25SbEdGT1RzOTlVK3JzOUxmRkZLU1R0MzJzelRCWWlkV01wVFN1dHRHdWl2dmU5bTdYVisyNlp6R2cvSDM0VWZIWjVOQlNhdzFlRzF0VzFHSzAxTFE1a2duZ2orVXpRQ2VJTElxN2dBWThuNXVtRFhQRFZ2Z1o4WXZoOWYrRmRKMHZ3VHJGbm83VDNNV2pYZW1TYWZad1hLUnNXWjkwSU1Rd1dET0ZPRkxjSEJGY2IreUY0OTFLNCtMTm40ZjhQM25qTFZmQnVuNlZMSHFGaDRuMHJ5YjN3ZGNxdzh1MEZ4aFRKbkJYWU1nS3FFY0RqVzhFZUQ5WTAvd3YrMHMxOWIzOFM2dHFWKzFwR3R1Qzl3djJJc3J4Z0Q5NXVEb0J3U1NEM3IxYStYUncwcWtZMUpSNVZHVWZlczd1WExkcmxUVFNkL1MxbTAwenphT05saUl3YmhGcHRwKzdkV1VlYXlmTlpxK24zM1NhYVBZL2hkOE5mQytrZkQzdzZ1bGVHL0RlbDJ0dkhGcWRyQnAwYXkydHJPOFhNa0Q3UVc0WmxFbUFXVTlzNHJtL3dCcS9YL2gzOERQZ2g0NCtLSGo3UkxYVU5GOEo2TTJxYXF2MlpKcDcySzEvZlF3cWpFSzh4a1ZWakRFZk80R1FDYTJmZ0I0aTArRDRlZUdmREN0ZUpxdWorR05MbnVZSnJTV013bzhBUk56c29RdHVqY0ZRU3d4eUJrVjhyLzhISHVzWE9rZjhFZ3ZpSTlxMEtDVFYvRHF5U1hNbmx3d29OYXMzM1NIQitUY2lnNHh3VGcxOC9pcWxTbmlKZSs3M2V0OWQ3Ny9BSTMrWjdtRHAwNnRHQ3NyV1duVGIra08rQXY3RjNpai9nb1o0UjBING5mdFdhdmNhOWI2MVBGNGc4Ti9DL1JOUWUzOEkrSHJKazMyeVhhUjdXMVM2SWJlMHR3elI4Z0pHcTdnMzFYNFIvWlQrRnZnR3praDBmNGErQjdIellsZ2xrWFJyZHByaEZWRVZaSkdVdklBa2NhamNUZ1JxT2lnRHY3eUJMYWRZWW8xamloUlZSRVFLRVVkQU1kaGpnVTFRQU8zUEhwWENta3JKblUyNzZtVlkrQnRGMGEwV0d6MFBSTFdCUVZFVVZoRkhHb09BUmdMM0NyK1E5S3o1UGhENFdsU1RkNFg4TXllY0R1enBOdnpsdDV6OG45NzV1ZS9QV3VsVWtlb3gyb0RFZGZ4cDlRT0Q4VGZzemZEN3hsWVRXK29lRFBEekpPNGxtYTF0Ulp2SzI4eTVaNGRqTjg3TTNKUExNZjRqbnlMeFovd1NFK0FIaWZXbDFTMThEdzZMckIxRTZsL2FGbTZ5WFVjNVJrTFF5M0N5dmI1RHNjMjVqTzdCQkJBTmZUSVlML2RwdU1uNjlhWlhNMGZLTC84RTN2RkhnRlVoK0d2N1FIeFc4RjIwTElJNHBkUmwxcFFvR2NGTlFlNnRsK2ZjZjNkc2diZis4RWdBcW1QR2Y3WmZ3WG50bzd6d3o4TC9qSnA4ejRQa1hiNlBkV2E4Y3pYYUtUTHlRbzhuU3g5MlJqdEFSRyt1MlRQOFB2eFRXaUg5MzVnUFRPYWp5RG0wUG1yd2Qvd1ZNOEFMcUVtbi9FTFIvRjN3ajFTTm1NZzhSV0htV1VNSTNicnFhNHR6SUxDMnlwSG1haXRvY2pCVUd2b1R3UjQyMFg0bmVFTk84UmVHZFowcnhKNGYxZUVYTmhxbWsza2Q3WjMwWjZQRk5HV1IxT09xa2ppbStOL0Jlai9BQkkwZ1dHdjZScG10MmE4ckhlMmlUcWgvdkF0eXJEQU81Y0VFQWdnaXZsZjRnZjhFenRXK0d2anU2OGVmczcrUGRYK0dmaks4dXBOUTFMU3JpWTNmaC94UE8yd2s2aGJNTVhUdnRZUFBJZnRqQndFdTRRZ3lQZTZEbWdmWHFPRHRJNTdVVjg2ZjhFOWYyNzVmMnYvQUExcm1oK0wvQ21vZkRYNHllQVhpdGZHbmd5K1Z2TTA2U1ZTME4zYnN5Z3pXZHdnM3h2MUdTcHpnTXhUanNTZlJ3SlB0dG9ZN1Q3L0FNcUJnbitMajJxTnp0Lyt1S045QUhFWVArOXp3ZjhBUCtUWGh2N2UzN1M5OSt6ajhJTlAvd0NFZm10b2ZHbmpUV0xidzk0Zk05akxmcEJKSVM5eGVHM2lCa21TMnRJNTV5aUtTZkxBeGcxN2M1OHh0aXRobXhnSFAwNmQ2K1FmaXI4VDEvYnQvYW9tK0ZmdzIxcUhTOU0rRXNydDQ5OGRXTUN5M2x2TThubFRlR2RQbkE4eTNsbThzRzZ1SW5Wa1dIeUkyTXhrZTIydzg2ZE9xcDFZOHlUMjJ2NWJQOG1SVXB5bkJ4ZzdOOWQ3ZWY4QWtlTS9EMzlxRHhsL3dVSCtLWHdSMGZVcnp3THJQdzc4RytOWDhQZVBMYkVsdkw0cjhUYWRhM2wyczBjVWtZSzJNS3hXVjZpUEdwZWFVUmxVOHJjUGFibi9BSUthYWg0cytIL3hDdjhBUWZCK21XZXBlR2RPczlWMHE0MUhXUHRPbjZsQmNYLzJQekdkRVRoV0RObUpuUTlQTXlDRDlEZUYvd0JuTDRmK0J0QjAvVE5KOEVlRDdHeDBtVzNudEk0ZER0WWxpbXQ0aERETUFrWUN5cEdvVlhVQXFPQmdjVlowL3dDQi9nblNZTlFpdGZCbmhXM2oxaUdTMnYxaDBlM2pXK2lsSU1rY29DQU9ya0FzclpERVpPVFhxVXNWbDNOelZhRDFkN0tUUytKdHJ2Ymw5MWJOSlgzUE1xWWZIVzVhZFZhSzEycnZhMS92MWZmYmJmNGUvYjgrTXNQeHAvNEtFL3M1L0NQVlF0dlo2QjhaTlAxK1MwM1JGNFRwZWhDOWl1TjRjTkpETGU2eFp3cnVRWWV6Y2pPY0QxenhKL3dVSzF4OVA4RGVOSS9COTVwUHc5MS9VZFRpbFV5cHFPcmFyRGJXMCswcEJFTVFMNThaWXVYYkNJUzIxVHpnL3MvK0F0SCtMbi9CYlg0K2VMVDRaMDZ6dC9ndjRHOE0vRHZUN2tXYUt0eGMzYW5XSm5RaFFBME1iYWVnSExJQU1ZQkFyZDhRL3dEQlJud0w4UDhBd3Y0Z21QZ3hiZTY4RCtJWDBqU3RPRFEyN1hVVEc0amUrdHg1Zjd1TGREY0k1VlRoZ1F4d1RYUmxlRGhpWjh1R3d6cU5jcWVxVzhlVzFyV3U1MmFldHV0OVdZNWxXbGg0TDJ0ZFUwMDliWDFVdWEvL0FJRDdyUzM2SHEzN1FmeG0xTHdOK3pmL0FNSmJvWnQ0OVF1MjB2N1BzV1BVRUF1cnUzaVBsamNzY3gyU3NGTzlWSndkd0hOY1g0QS9hdjFUd2hZYTdZK05JbXZOWTBuVnRLdGtpbmp0ZE12QlozOGtjSzNNa2NNczBBalNSbkEyeUZqdHd3UWtFMi9pQiswLzhQOEF3RTk1NFQ4VStIdE1pOEoyM2lHejhOU0EySWswblRZNU5QaHZUTmVlWkV0dkJESDVuQkRNdTFTL0Fqa0tlSmZEVC9nckwrekQ4UWZDOTk0VjhEK0NkWThmMzEzTGVOZGVFdkFQZ0NiWHJQVVZ0SmdqU2ZhSXJkTlBseEg5bWxKTXBDZWRFdVN6S0RuR25DaGgvd0RhS0xhazAwNzZ1THRMVFZ2NFZLOXJyWHBZMGpVblZyL3VxcXVrMDE1OWIvZXJiYmRUM3pXUDJwTlUxVDRpYU5wdmhuUm9yMjFYWHRlMFMvZ2xrQXViNlRUckl6SjluSU9FRHlZWExnOUIwQkJycFBnUCswN292N1E3MzBtaTIxeEhZMkVkckhMZFhES3FtOWxpYVdXeUMvZU1zQ2dlWnh3V1BIeW12bHV5L3dDQ2tuanp4Zm9kdkQ0RCtDUGduNGMvWlBFdGo0YWpqOFZYdHhmYXRvbHhmQ1JJcEpOTDBxMWVMRExFd0lHb0lkdUZ6dklqUGlQeGQvYmIrTW43S3Y3ZC93QUpQRkhqSHhQNFg4Y2ZzLzNIaXEvMEx4UVBCM3d6azBiU3ZEZXROQmVMY1hKbHVoZFhVcndvR3VudTRMZ0swVU40cktneDVzNHJDK3pwZS9ocFJhVnJ1NmVtcmJUWFdMamJieXZjMHcxYjJsVzBLMFpYMXNyUFRaSlAxaksvWFRaSDIxOGUvd0JxSHhMOEpQakQ0azArM3M3RzY4TTZENFZoMUs1bWlnYVc3MHk1dURlTEJjT280YTNFbHNFY0hHM3pGYk9BMU5UOXRLZncxOEs5TjFqVk5GajFSN0x3enArdTY3Y3JleDJPNFhVWksvWkltRGVlU3lNQ29aUUNOdVNlSzZEeEIrMno4TC9EZmgveFpybXRYV3NhSGIrRjQ3Uk5YR3IrRnRRc2JwWWJxV1NLMi9jeXdMSzhieUxJbytYYUR1eVFDVFhpWDdmbi9CVmY0RS9zYmVBZkJldWFwNGJrK0lQeEUxeTBsdmZoOTRMczlDWmRldkFqbVB6VldXSGRZMjI1V1BuTW9EcEc1aVdYWVJWeGxTaFRoN2JEU3RkSytxNXRMMjZhdTZlK3pUczdhNTJxMUtqalJycHV6ZHRIYlZLL1hSV3M5TjdycnA5ZTZUclUycHk2Z1pyV0sxaXRaVkVMTmNxL254bUpIM3VGR1l1V1liVGs0WGQwWVY4dWVCUDIyL0YxbDRCOFo2dDRqdnZDdDVjVy9oK1B4SG9JdDRmOUhuaGU3YTN6R1VmTXNhNWlBTXBpa1oySUlWRHVIaTM3RWY4QXdVeitKbWgvdFA4QXhrK0gzeCs4UC9EdlJmRTJrK00vQ3RuNStqWEVXbVcxb21zMmM2d3BITkw4K3BDTVdkdVZjL3ZXRncvSVNOVlg2bTF6NG0rQ3ZoLzhFL2laNHpzL2h4cGNPbDZicWMybFhNVWVtdzIvL0NVdEZNc0RQSUZpNVR6NUpGQmNQbll6ZDZqTGFjT1J1ZEhuVTNGTFZicDJhMzBiYlc2MjEyZDBZMnBMbVNqVjVlVk8rajdYVDJXeTZkL3VKdmdwKzFiYy9HaUx3cXNHbnhSeStJdFYxTlNpcGxyWFQ3RlJ1YWJrcXNyU1NSSjhqTWc4emdrNUF1U2ZIYnhWUDRHMWN5U2VHOU44UXgrTjE4SlcwbjJlZTZzcllNOFNobjVSbllLNU9TVlVuQUlIU3RENE4rUE5HdGZpQmErRHYrRUR0UEJHcFI2Q3VxNmRIYkMzYUJyTjVGRG9oaFZkaEVtMHNoQXlRRHpqTlUvMnp2amg0SS9aL3dEaHRieWVNOUw4TFhtbCtLTDAyM2xlSWRTc3RKMHFXVkkvTTh5ZTR2Q0lsYkVhaGZ2T3piUUJ3U05xMU9nc1g3S05GcFBWSnlUMDVtOTc4dHVYUjlOSHFyc3pvenJmVjNVbFZ1MWROcE5LL0tsdHZlOW5iekx2aHI0K2F0cUg3SnVxZU83cXpzUDdhMHV5djNhRzNMbTFsbHRwWll3VkJKYmEyd0hHYzg0ejNyazd2OW9qUWZqdDhNUGlkcHZ4QjhPUjJQZ2UzOFAvQUdEVy9ER3B4U0RWdFJ0cnlNcEl6cmxBa0VpU2VXbTNMRXNXTEp4bmpQakYvd0FGZC8yY2YyYjc3VC9DZXQrTHZBZHRweGppc3IzVE5OMS9UOVd2Tk5hU0l1YmM2WFpQUGN5RmNCU0Zqd3pTS0YzNXpYUWZzOWY4RkpQZ1grMlJhNjU0ZzBlOTBlVHdwcE5uY3h5ZUpkYmlqczdkWUxkcmRybUc3UzVDUzJXMXA3ZVJVdUZSWkVZU0xuYTIzbi8yZDg3ZEg0bTVSdEplN0ZOWFNXdDlFL05LOHRsYzBVY1F1VzFSM1ZvdThYckpwMmJkbDVlVGVtN082OEIvRUR3Wit6dm8rb2ZEdnc3NEkxVHdyNEwrRXVnSkxITGFMYnZwMXZaeHhibzQwMnl0SjVqSUMySlFKR3lYYnJ1TG92MnI3RzMxVHhsSmVhZk1kTThPMzJuV2RvOEx4UXkzUDJxMFNjUEliaVNORTViYVBtQjZEa212Qi9IWC9CV2I5bkR3OXJmanJVdEQ4TTY5OFR0SDAreG4vdHp4YjRROE9KcWZoMjlLMjNteTI4dXJFcFliaW0ySStiT29hUXFoT2R0VnYyZWYrQ2tYd2ovYmMrQTJxZVBOZStFZmpid0xwRnZlYWRxbW5KNGswMjNzNXRjaGxmN0xZNmhCUEhNSS9MSldSQTd5S3V5S1FxelJxeEJoYUdIcVM1STBweTBqdHJ1NDNkcjlXK1ZLNjNYVU1ROFRUZzZuUEdLVGxlK25TVmxmeTMrVDdIMEY0Yi9hWCtHMWkxeHE5dmMzdG5jZUo3QzExZ3ZQYXltWFVrYVEya1VjWStiZklyZ0o1YTlBMmNZeVJtZkZEOXN4ZmhaOFB2RjNpYTYwa1g5aHBQaU1lSE5EU0J5aDFDVlkxODUzYzdsVkZsRTZodU0rVUIxSUp1ZUVmaDE0UitKL2did040NHNOTG0wM3cvNEZTNjFEU2RKdHphWENKS2hkV1paWVpKRWtYS0ZrQ1M3R09DVDJIaC9odi9ncHIreWY4VGZpSjRYOEMyOTFINGc4WFBkWFVlbDZCcCtpUytJVWdsa0prdUdlYXorMFdQTEt4THROOHBWaVNvVWtiY3VCalVVNVFuSkpwU1RhdlpQU04xczJrazJycFhkcnRKR2JxWXVVZVZTakZ2V0xTNjJ1M1o5RTI1VzBidHIxdDdGcjM3ZU9nYUo4UHZoMzRvVFM5UXVkSDhkeXV0dzZ1TjJpUnhLUE9sa0FCRExFeCtjZ2dCRlpzOUFmbnY4QTRLM2Z0SitDL2pIK3hENHM4RjZwSEphYWZyMXpxTXR0ZithanhUUDRldkxXOTJZMnRnM2J4K1RHU0dWVElHWUVjVjlCYVY4YXZnaWIzd25OWnhXc2szajZPZlVOSmhoMGVkdnRTM1BsMjB4ZUlKOG5tZVVxTXJBWjJISTRKcXQ4S3AvZ0RySGpUUmZBbWc2VnArb2YyUGU2cEhwZHROcGx4THBvdWNIN2RIQkpNdmt5TXE1QkNsbFVaQUl6ZzlQMWJBeHU1NGFxcktiMHZ0NzFuZHJUa2ZLbTJyT3p1bHNjOGNSak9aS0ZlbnZCYTIzOTIraTM1MWRwYjdXYldxeXRDL2I3MWdmc2cvRDc0Z2F6NEhadkYzeElTQTZGNFp0dFZTYTQxR05vbGxNenZFakxFM2w3bWFKUkpzTEloYkpPTkg0MmY4RkVORitEZmduNGNhME5FYlYxK0lscDlzakM2cERheGFjZ2pqWnQ4c2cybkRTQk9kb3lwNzhWNEYvd1I3K0R2Z1cwMHY0bmZCVFZ0UDhBN2ExTDltZnhWZCtIOUxzdFZ1WHZoWjZiZWhKbzV4YlNGdkxGeE5iM0V5REJBUjFDSGI4aStsZnNiL0hEOWxiOXBHMTAzV2ZoNzR3MGlTVFRaTDYxc2REMTI0ZlRybTNpdTJSMkVkaGViSmZzN21MZEV5cnR5SkZCM0s2cHpVSzJUcFhxMDVYVGs5THBOTlNzaytadmRSZDNycTA5TEhSWG81cEtUVkdhUzBTdWxkTzZiYlZyUDdTdGUxck5hM1BRZkV2N2VObHBuN08zaGp4NXAvaFhWOVN2dkY3eUpwdWd0TWtGMUlzUWQ1NUM1QkhscEhHemJncHp1UVlCYmoxejRXL0VXeCtLL3dBT2RFOFRhZC94NDY1WlIza2FsMVpvdHd5WTJJNDNJMlZPTzZtdUEwZjloSHdGcDJ0Mk4zZFEzWGlLejBtMW10Tk4wM1dMcGJ5eDAyS1dRU0VSSXd6MXpqY1crVnR2UUtCM0h3cCtDT2svQlRRYjdUZEQ4eUxUcjNVWnRRV0NTWU10cTB1M01jZmNJTWNBa2taeFdPWVBLL1pOWVRtNXVadFhXbksyN1JldTZWbmUxcjMxZWhwZ0k1bjdSZldsSGw1VW5iZm1TVGI5RzdwSysxdHRUcGNmTjI1OXFRZ0VEL0RwUUhpeXFOY1c2dDZlYXY4QWpWRFZ2RjJoK0g3R1M2djljMFd4dElnV2VhZTlqaWpRRDFZdGdZRmVPZXpabWdCZy9RZDZRbGNjOSs0cnkvNGdmdHJmQlg0WHpMSDRrK05Id244T3pNZUUxUHhiWVdqUHhuR0pKUVQ4dlBGY1RmZjhGVS8yYjdVR1BTL2k1NGQ4ZmFneHpIcC9nUVRlTE5RWWRNQzIwMUxpVWtETEg1ZUZWbSs2ckVTUGxaOURNd0I5am5HS1FkVksvZS9MSHZYekRyMzdmWGp6eDB6Ui9CbjltcjR2ZU5HV1FSUHFuaktHUDRmNlJiazV3V0dxYk5Ra1VZVWt3MlRqRGNNV0JVWkYvd0RzV2ZHRDlyMjYzL3RHL0VqVHROOEVzeXMzd3orR0VsellhWmZnWitUVXRYazJYdDVHMlJtR0piYUk0K1paQjBPYm9pZVYzc3pCL1phdUlQMnRQK0NzbnhBL2FEOEZ0RGVmQ3J3NzhQby9oWGE2MnUzN1A0czFlTFUydkx1ZXpZSE10dGJqYmJOTVFGYVZDSXk2b1NwWDJONFU4SmFUNEI4TWFmb2VnNlhwdWg2SG84Q1dtbjZicDF0SGEyZGxDZ3drY1VTQUtpS01BS29BQTRGRk5EWnBFOFp5djRDcTg4Mi81QXBMTnhnY1pxeEkrMWVvWHRYenovd1VpL2IyOFA4QS9CUFA5bURWL0hXb20xMUx4TmRvK24rRk5FWi9uMXZVMmpMUm9WVWh2SmpVR1dabCtaWW8zMmhuS0l6MjFFY2orM24rMVo0bXNQaUg0ZS9aNStDOTFaZjhMMCtJMm4zR292cWMwOGEyL2dmUklTaTNHcFRuYkk4YzB1OFEyMzdpVlJLMjkxWkl5c251SDdMMzdPdWcvc3BmQW53NzhQOEF3N0hHdW02RGJsWkpRakJyNjVkakpQY3VXWjNhU1dWbmRua2QzWXNTenV4Wmo0bC93UzkvWXc4US9CTHc1clh4VitMRjVONGcvYUErTUVOcnFQaTNVYm1CWTIwZUlSTDVPa3dScXpMREhDTUdSVVlvMDI3Yis3amlWUHEzRzA0L3JpcDYzRHBZQndjWS9UcFNNdkh5OGZVVXVPT01ZUDZVQlBsLyt0VkFmbWI4WVBpeCswVi93VFcvYjkrTTgvdzcvWngxbjQ5ZURmajFxZW4rTE5OMU93dkxtMS9zbTlpc1liT2UwdUpvYlM1VlZCZ1JrRTNrcUZPVmQ5ekxIdGVHditDYlB4MC9hUE5yclhqdnhSOE1mZ1pwOTlEcXNkem9YZ2p3MUo0aTF4N1hWSlpMaTRobjFQV0NZb3B4SmN6cm1DMEtydWNJMjBxRS9SY3hiUnV4OWNtaGwrWEsvb00xMFlYR1Y4TzNLaE54YjdPM1JycDVOcjVtTmZEMGF5U3JRVXJhcTZUNnAvbWsva2ZLR2ovOEVjZmd4SnFHbTZwNHVpOGJmRmJ4SHBtb1FhcERxL2o3eERMNGltKzBSYkFHVzJ1QTFsRHVWSTBieWJlUEt4SUFSdFhIcGxuK3hKOE9iUHd4NGMwZit4N3FTeThKMldyNmJwWWZVWjk5ckJxaXN0NGdZTUR0WlhaVkE0akhDQmNESHNEcHovbkZOOHZQdjdqazBReGRlRWVXRTJ0OW5ycW5GNitqYTlHMXMzZVpZV2xMNG9wLzhCcCttNlQ5VW4wVnZsWFJmQ3Z3ZitHRnpyM2hPMzhHL0VEVDIwVjdYeEJmMzVTYU1XbjJFT2JhNkV5ekw1YUFLNFVxcXEyNDdoZ2sxeFA3UW43Skh3bCtPbjdPK3VlSDc3eDlEbzNpNzRqUjNXdStFYlhYdFlhenM5TTFQVUpQUHNYazAxWkdpYkVpeHd5SFlUTkU4OGVDSjNEZlRXcy9BU2JWL2lQNDExNTlaOHVQeFo0ZFR3L0ZiaXlWdnNRQ3VETVN4eEljdVR0WVk0NUpybTdEOWpxUFE3cUdiVGZGdXJXRFMyV21XR3BEN0Rhei93Qm9SMktxaUJXa1JtaUxxb0RiTTgvaGo2Q1dMb1ZZUDJtSW56U1N2ZHQzYlNUWHczUzB0MTJTMjFYaC9WcTlPYWRPakcwVzdXc3RFOUg4VytyN2J0NzZQNE8vWnQ4RGZ0TzZQK3lOckZuL0FNSzZoL1owaDhQNlFOQzhTZkVMeFI0Z3V0ZDhRMzlscER6aTJtMG5SWTVWZ2ltZHlYTFMzQzIwcnpTTXFTUk1nUGEvc3RmOEUrZjJiZmhyOE1mRVhpL1YvREh4ZjhRZUtOWWhndHZFSGpYeERySi90VHhkYTZpNHRYUlpyUzQ4ajdLZDQzMnFGU3FoUXl1Nml2dmFYNGRhbnJmd3oxenc3cm5pZlVOUW0xcjdWR2RTZ3Q0YlM0Z2dsZGlrYXFxbVA1RU96SlU3Z09jNU5lWCtCZjhBZ245NGI4RVdHcndwcldyM0xhemM2ZmN5bU8zdHJXTkRaVHJORUJGSEdGM013K1ordlBHM25PZUJ4bUhVWlZNVFduN1JTaTA0dDZwV1R0cHBhTjdOM3Rza20zZmJHVThSN1NNY1BTanlPTWxKTkpXYjFYcW03WFNzbjM3ZUZhci9BTUVnZjJlL2l4L3dVdDhhZkV6eGw0d3RmaUJydXBXMXUybCtCYm5VSU52aDZhM3RJTFJwdGtaRXNubFIyOFJpRGNSTzd1UXpoSFQ2VitMbmd6NGJmQ2o0U3hhZDRtazFEUy9CTWxsYmVGMHNJN3k1K3h4eG1iekkzTWNaK1dYY010T2ZtQ3I4ell6VW1nZnN2VGVEdkZGNWRhUDR1djdQVHByaSsxQzJzSmRJc3JrMmQ1ZGVZV25FOGtabE94cE55cVNPbUdMQW10NzRxZkJmL2hiUGg3d3ZwK3BhdXovOEkvcXRycWwwejJjYnBxM2tveVBISkh3cXJKdlluYndNOEExeFJxVUlWb0pWcGNsMDVXdW1uMWt0TFg3UDNtdTUxU2xpSjBwT1ZKS2FUUzJzMHJXVzZmNWFlWnovQUlBOEcrQmIvd0FWZU1MWFN0ZDhRWFd2NmVsbnBPcDM5MXJWMDEzYXhNZ3ViZU9HNWRzN0dEYnNveDNFRldKeGl2SHYya2YrQ04vd04vYlYvYVh2UGlkOFJOUzhiZUxyeldOTGl0TFRRaDRyZUhSYk9LRkVqYVMxaGgydW9mQytZb2tNYk81Slhjd3gydDEvd1Q1MCsyZ21YU3ZFbHhickhya09zV0VHbzJDNmphMjBjVURRcGFTUnU0ODZJS3lnYmlDcW9BT1NTZlJQZ3A4Qm4rRHVsMkZuYjZyWjNkdkZjYWhlWFNMcEVWdm1hNmtWODIrdy93Q2p4cGdqWXU0TUc1UEF3OGRUd2pqN1NsWGNub2tuSHlYWFphNkpkTzdXcnp3ZFRGUmZMT2p5NzZwcTIrbW5wWjkzK0I1MzRXL1pWK0EvN1BmeE04RytGZkNzVnI4UDdwbmh1dEw4SmVHN2dhWFkzMDlzc3JwZHp3VzZyNXNoQ3R1a2xmRXBqVU51SUZlYS9DSC9BSUptL3NnK0l2MnUvR1BqRzMrSFduZUxQaUxxRnpMcWNzSGl5d3VyeXp0U1pnc2s5amJYYS9aeXZuS3Y3Mk5XWlRqREFNYy9UM3hBK0VrbmpENHJlQS9Fa2Q5YjJzZmhHNHU1NTR2c3l2TmZDYTNNU29yNHlnVWtrNDZnOFlQTmVjK0t2Mk9kZStJM2oveEpyV3QrUHJqVFpOWTBqK3hJN3J3L3B5Mk43TGJHWVNiYmt5dE5FNUNxSXdZa2ozTG5PYzBxTWNKVnBxRmFvNCs3MnVsSlNhV2lpNys3Ylc2ZlM3MkNzOFRUcU9kR25mM3JlYmpaWDFiVnJQcFpwMjZIa1A3ZUg3RS93ai9iZi9adzhUYVBlL0ZEeEo0UDhPYXQ0cy90WC9pWFJSM2xqSHJGcXUyZkZwTEN4dUl5a080eGttTlNwa1RCSkp3OWUvWUxieDNyZGpwdmpYOXNiNDBhdHFIampSYkNDQWVFdEIwTFJHdWJLMWxNbHE0bXQ5TmxlQ0lTdTdLZk1UTE0yRGdZSHMyc2ZzQzNWeDRLL3NXSHhuY1hsa05adk5WU3oxRFQwRm1QUGk4dFNWdGZKZmZIeXk3WEVlV1llV0ZJQTZMVXYyU3JqYjRVdDdYVXRIVnZEdHBZV2phekpaeXByQVcwbEVtMk4wbEVleVRrRkhVcW9KQkQ1NDc1L1U3cHh4VXV5c21ySkwzYjZkR2szYSt5dGQ3Y1VhbU5jV3BZYU8xMm5aNnQ2MjE2cSs5bGZleVBGL0QzL0JNTDlsZnhING4xSHdYcno2OThXdkdWckhkRXY0ODhSWDNpbHRObmtBYWFlSzN2REpZUjNBSlVzVWhCT01FRVpXdlhQaHYrd0I0ZitGSGdWZEg4TzY5cW1nM1ZycTBlc1dkL3BHbDZacGYyR1JMWDdMNWNkcmJXMGRxc2JSazdsRVFMRTVKeUsyZmg5K3kvTDRLK1BFbmpPT2JSOU9NNHZGdkl0TFc2UTZ4NXo1amE0V1dWMTNvQUNXWDc3NWJqZ0QyVmxPNzA3SDJyemNSV2hRa2xoSnQ4eVRrMmxlL1ZiUFRUWk4zVnI2M1M5R2xUbmlVL3JjTGNyYVN1N1c2TzJtdm0wck5YWGM4QjhUZjhFL3ZEbXZlQ1BEdmhtSFY5UXRQRCtpd1JXOXpiTllXZHhKcVNwY0c0TEc0a2lNME1qU00yV2pjRERZd090ZEo4T2YyU2RMK0hIeEdzZGNzZFkxVDdCcGVwYWpxMW5wTEtoaGh1TDVBSjJaemwzT1FTdVNNYm02NU9mV2xVa2RRZWUzZWpaL0QvQUU2ZjUvcFJMT3NkS0xoS28ybnpYMjE1dDN0dSsrKy9RcW5rK0RoSlNoQ3pWcmF2N095OUYyKys3UGpuU3RHYjRKZjhGME5YMUd5dDd4dE4rTjNnQzBPcE9aUTBVZXAyWnVSQ3lLRUpYL1JkUFpXWXNBeGRBeEpXSmE3YjRsZjhFaWYyWnZqSjhTcFBHSGliNEorQU5TOFJYbHhMZFhkeEpwY2ZsWDgwemI1cEpvQ0RESkpJM3pOS1U4d2tzUTRMRW5oLzIzYksxK0Z2L0JVWDlrdjRoWDczRnJwR3JhaHFmaEM3dVVqVjErMlRXTjFGcDBES0VhUnZNbHZwdm1VcXNZamRuTzNsZnN4NDJ0NTJWdHVjOEg4UC9yVjVTdFk5TG11Zk5SLzRJMy9zbkttMy9obS80T25qR2Y4QWhHYmIySDkzMkZTdi93QUVmZjJVM1lzZjJjL2cyMjlkaHo0WXRzWXdWNmJldUQxSFA2VjlISDVjZk43Q2dGajFJNmRQV2xaTldHcE5PNlo4OVdYL0FBU08vWlUwN2Q1ZjdOdndQeXd4bC9CdGhKamdEK0tJOWgvUHVUV25aLzhBQk1YOW1YUTcyQzRzL3dCbkg0QzJkMWJzR2lsaThBYVNzcUVkQ3JlUm5QdjFyM1FnS2V2NVUwbmNvSHJua2NacDJIek00ZjRlZnN3L0RUNFN4S25oWDRjL0Qvd3lGR0ZHaytIYk95QUhwKzdqV3UzakJnVFpGKzVUKzdIOG9INERpa1Q1Ri9IamluRDV1bWZRK3BvNVNic01ZUDNqZ2V0TGhRM1Q3MUlHNjU0YjM5YWR2eWZ3d2M5S1lEYzRIemMrOUZIeTU2anB6NzBVQWN6OGJQalY0Ui9aeStGbXIrTnZIV3Uydmh6d3ZvcUlidTl1QXpETE9zY2Nhb29MeVNQSXlJa1NLenlPNnFxa2tBL25YK3h6NEg4U2Y4Rlgvd0Rnb3RhL3RTZUwvQ2VwYUw4R2ZBTnZKWi9EVFNkZWpDenpYVVVpZVZkcENOMGJLSmZ0RjFMTXB4NXlhZWl5VGZZOTYvUTMvQlRqL2drOTRlLzRLZjhBaWo0UjNmaVR4THFHaFdQd3oxYTR1Ynl3aHN4Y3BydGhjdGJtNXRRM214bTJsZGJaWXhjSnZaVWxsQVVsZ1Yrc2RJMGUxMFBTcld4c2JTMTArd3NZVXRyVzF0b1ZpaHRva1VLa2FJb0FWVlVBQUFBQUFDazFmUmpXaEtCdFArOTNQR0theTQ3Zi9YcVJsSzlPbE5jQnZ1citJcGlHdWRyRE9DTVVGY25IUHB6VG1WdW50U0ViUjZIcG1nQlFkd0RlZ05JMyt5T1Bla1pzSjF6ei9ubWtKMy9qejlLQUZLNUgrRk5ZWUh6WitYdWFYcUJ4VFFSbitwTkFER0dHOXZZMEQvWng2WXpVbTMzR092clRTbkhKK25iRkFEU2VPdjE5cU1aUCtldE9KK1RyK0JPS051N0IzZjRVQU5aT2YwNUdSMm9LdDNPZmIvNjFQSy94VUE4L3hmbG1nQk5uMUo2Z2luYmNBZGV2cFM3ZDM1Y0gycFI4cW5wOWFubUFQS3owNUk5YWFFK2J1dTQrbE9QTGRzaW04RWZYMnBwM0FYN3c1L1BGTG5udU9POUlUdVAzYy9ROGZsU21MajArbE1CcWpPZVBiR2VsT1Q1ZjlydG1nUkZ1djBwVmp4MFZ1ZzZDZ0JRRGhlM3JTbGNEK3BQNlVnQUI0d1AxeFMvaitGQUh6Si93VjcvWlMxRDlyMzlnYnhwb1BodUtRK1B2RGNZOFZlRFpZUWZ0TVdxMmFzOGFRTmtGSlpvekxBR0RBajdRVG12UWYyRnYydHRML2J0L1k1K0hIeGMwbUNPM2o4YWFRdHpkV3laWmJLOGpab2J1M1ZqOTVZcm1LYU1OMFlJR0hCRmVxM2Q3YTZiYVRYZDVjUVd0bmFJMDF4UE00ampoalZTV1p5Y0FLQUNTVHdCbk5mbmwvd0FHKytxMk5sb3Y3UzNocndQTFo2aDhGZkQzeGQxTWVBdFF0TlFhODA5N2FRa3lXdGkyV2pObENpMnhqYUppcGVhWGpndTUxSDZuNklBWkdmYjg2SEdjNTY0eUNhRHgvdFk5T0tVa1A2Y2RSNlVMUVFoWWdkdlhnNHBGVSt1NytZcHhLakgwcHJKam41cUFBSDVPZWk4REZCeUI2ZGdhRkJPZlk1eU9wb09OM0g0OXNVQU9DWmIwNDc5cVZWejE5Y2crbEFDa2Q2UWpiZy9sNzByNjJBYXBJYm5wNzBVNzZkK2hGRk1DU052TVJ0M1BOS2lndFJSV1lER08yNDI4YlNPZUthaHduNDBVVmNkZ0RHV1gvZXgrbEI2ZjhCb29wZ05rWEN0L2pSS2dERDM2MFVWbUEyUWZ1bC8yc1VwR09QYzBVVlVRR3FjeTdlMmFjWTFWVkkvaUhQdlJSVkFSQnRwL0ROT0J4dTlxS0tBRWsrVnZ3elQ4OGY3ckRIdFJSVTlRRDczNVovR25LdVkxYnVRYUtLb0J3TzVuOXNVMWZta3g3QTBVVk1nQmx4ajhhY0I4bytsRkZTQXFxQ21mYk5LVUJqSDVVVVZVUUdzY2ZrS2VGd29ORkZVQkZNZms1Q3NHR0NDTWcvaFVOalkyK25Cb0xhM3Q3YUhlOHZsd3hMR3UrUnk4allVQWJtZG1ZbnFXWWs4bWlpa0hRdEZjSEh0VVdmM1gwNlVVVXdFaytWdUtVOHQrQVA2MFVWbUErRlEzWDFwU05zZkhiT0tLSzBBV05BNE83bjZtZ0RDWjcwVVZQVUJPci9wUlJSVkFmLy9aIi8+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLWZhdHVyYSBiaWxnaWxlcmktLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0icmlnaHQiIHZhbGlnbj0iYm90dG9tIiBjb2xzcGFuPSIyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgaWQ9ImxpbmVUYWJsZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5IHN0eWxlID0idGV4dC1hbGlnbjpsZWZ0OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgc3R5bGU9IndpZHRoOjEwNXB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0iYm9sZFRkIj7DlnplbGxlxZ90aXJtZSBObzo8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Im4xOkludm9pY2UvY2JjOkN1c3RvbWl6YXRpb25JRCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmFwcGx5LXRlbXBsYXRlcy8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+RmF0dXJhIFRpcGk6PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSJuMTpJbnZvaWNlL2NiYzpJbnZvaWNlVHlwZUNvZGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDphcHBseS10ZW1wbGF0ZXMvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPkZhdHVyYSBObzo8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Im4xOkludm9pY2UvY2JjOklEIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6YXBwbHktdGVtcGxhdGVzLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0iYm9sZFRkIj5GYXR1cmEgVGFyaWhpOjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0ibjE6SW52b2ljZS9jYmM6SXNzdWVEYXRlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6YXBwbHktdGVtcGxhdGVzIHNlbGVjdD0iLiIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0ibjE6SW52b2ljZS9jYmM6SXNzdWVUaW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0iYm9sZFRkIj5GYXR1cmEgU2FhdGk6PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0ibjE6SW52b2ljZS9jYmM6SXNzdWVUaW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDphcHBseS10ZW1wbGF0ZXMgc2VsZWN0PSIuIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0ibjE6SW52b2ljZS9jYWM6RGVzcGF0Y2hEb2N1bWVudFJlZmVyZW5jZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+xLByc2FsaXllIE5vOjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNiYzpJRCIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+xLByc2FsaXllIFRhcmloaTwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9ImNiYzpJc3N1ZURhdGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmFwcGx5LXRlbXBsYXRlcyBzZWxlY3Q9Ii4iLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOk9yZGVyUmVmZXJlbmNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0iYm9sZFRkIj5TaXBhcmnFnyBObzo8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSJjYmM6SUQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmFwcGx5LXRlbXBsYXRlcy8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPlNpcGFyacWfIFRhcmloaTo8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSJjYmM6SXNzdWVEYXRlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDphcHBseS10ZW1wbGF0ZXMgc2VsZWN0PSIuIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0ibjE6SW52b2ljZS9jYWM6VGF4UmVwcmVzZW50YXRpdmVQYXJ0eS9jYWM6UGFydHlJZGVudGlmaWNhdGlvbi9jYmM6SURbQHNjaGVtZUlEPSdBUkFDSUtVUlVNVktOJ10iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPkFyYWPEsSBLdXJ1bSBWS046PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iLiIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+QXJhY8SxIEt1cnVtIFVudmFuOjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4uLy4uL2NhYzpQYXJ0eU5hbWUvY2JjOk5hbWUiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iLy9uMTpJbnZvaWNlL2NhYzpQYXltZW50TWVhbnMvY2JjOlBheW1lbnREdWVEYXRlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0iYm9sZFRkIj5WYWRlIFRhcmloaTo8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOlBheW1lbnRNZWFucy9jYmM6UGF5bWVudER1ZURhdGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKC4sOSwyKSIvPi08eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKC4sNiwyKSIvPi08eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKC4sMSw0KSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iJERvY3VtZW50Q3VycmVuY3kgIT0gJ1RMJyBhbmQgLy9uMTpJbnZvaWNlL2NhYzpQcmljaW5nRXhjaGFuZ2VSYXRlL2NiYzpDYWxjdWxhdGlvblJhdGUiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBLdXI6KDx4c2w6dmFsdWUtb2Ygc2VsZWN0ID0gIi8vbjE6SW52b2ljZS9jYWM6UHJpY2luZ0V4Y2hhbmdlUmF0ZS9jYmM6U291cmNlQ3VycmVuY3lDb2RlIiAvPikNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0ID0gIi8vbjE6SW52b2ljZS9jYWM6UHJpY2luZ0V4Y2hhbmdlUmF0ZS9jYmM6Q2FsY3VsYXRpb25SYXRlIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PiA8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3QgPSAiLy9uMTpJbnZvaWNlL2NhYzpQcmljaW5nRXhjaGFuZ2VSYXRlL2NiYzpUYXJnZXRDdXJyZW5jeUNvZGUiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgPCEtLWV0dG4gc2F0xLFyxLEtLT4NCiAgICAgICAgICAgICAgICAgICAgICA8dHIgYWxpZ249ImxlZnQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJsZWZ0IiB2YWxpZ249InRvcCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxoci8+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDxiPkVUVE46JiMxNjA7PC9iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0ibjE6SW52b2ljZS9jYmM6VVVJRCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDphcHBseS10ZW1wbGF0ZXMvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgICAgICA8IS0tZmF0dXJhIGthbGVtbGVyaW5pbiDDvHN0IGvEsXNtxLEtLT4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgPCEtLWZhdHVyYSBrYWxlbWxlcmktLT4NCiAgICAgICAgICAgICAgICAgIDx0YWJsZSAgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMHB4IiB3aWR0aD0iODAwIiBjZWxscGFkZGluZz0iMHB4IiBpZD0ibGluZVRhYmxlIj4NCiAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZSA9ImZvbnQtd2VpZ2h0OmJvbGQ7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjpPbGRMYWNlOyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVweCIgPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+U8SxcmEgTm88L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1TRUxMRVJJRDEtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MjUwcHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+TWFsIEhpem1ldDwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLU1BTlVGQUNUVVJFUklEMS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUJVWUVSSUQxLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tREVTQ1JJUFRJT04xLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tTElORU5PVEUxLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjcwcHgiID4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0Pk1pa3RhcjwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo3MHB4IiA+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD5CaXJpbSBGaXlhdDwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLURJU0NSQVRFMS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLURJU0NBTU9VTlQxLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjcwcHgiID48eHNsOnRleHQ+S0RWIE9yYW7EsTwveHNsOnRleHQ+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NzBweCIgPjx4c2w6dGV4dD5LRFYgVHV0YXLEsTwveHNsOnRleHQ+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MzBweCIgPjx4c2w6dGV4dD5EacSfZXIgVmVyZ2lsZXI8L3hzbDp0ZXh0PjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjk1cHgiID4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0Pk1hbCBIaXptZXQgVHV0YXLEsTwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgPCEtLVNhdMSxciBLYWxlbWxlcmkgT3RvbWF0aWsgR2VsaXlvci0tPg0KICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0ID0gIi8vbjE6SW52b2ljZS9jYWM6SW52b2ljZUxpbmUiID4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6YXBwbHktdGVtcGxhdGVzIHNlbGVjdCA9ICIuIiAvPg0KICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgIDwhLS1mYXR1cmEga2FsZW1sZXJpLS0+DQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgIDx0YWJsZSBzdHlsZT0id2lkdGg6ODAwcHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NTAwcHg7Ij4mIzE2MDs8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MzAwcHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1kaXAgdG9wbGFtLS0+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgc3R5bGU9IndpZHRoOjMwMHB4O21hcmdpbi10b3A6MTBweDttYXJnaW4tYm90dG9tOjEwcHg7IiBib3JkZXIgPSIxIiBpZCA9ImxpbmVUYWJsZSIgYWxpZ24gPSJyaWdodCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmCXRlc3Q9IjE9MSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXdlaWdodDpib2xkO3dpZHRoOjIwMHB4OyI+JiMxNjA7TWFsIEhpem1ldCBUb3BsYW0gVHV0YXLEsTwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MTAwcHg7IHRleHQtYWxpZ246cmlnaHQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSJuMTpJbnZvaWNlL2NhYzpMZWdhbE1vbmV0YXJ5VG90YWwvY2JjOkxpbmVFeHRlbnNpb25BbW91bnQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpjYWxsLXRlbXBsYXRlIG5hbWU9IkN1cnJfVHlwZSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSJuMTpJbnZvaWNlL2NhYzpUYXhUb3RhbC9jYWM6VGF4U3VidG90YWwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmIHRlc3Q9ImNhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lL2NiYzpUYXhUeXBlQ29kZSA9ICc0MTcxJyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPiYjMTYwO1Rlc2xpbSBCZWRlbGkgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjpyaWdodCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbC9jYmM6TGluZUV4dGVuc2lvbkFtb3VudCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpjYWxsLXRlbXBsYXRlIG5hbWU9IkN1cnJfVHlwZSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+JiMxNjA7VG9wbGFtIMSwc2tvbnRvPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0ibjE6SW52b2ljZS9jYWM6TGVnYWxNb25ldGFyeVRvdGFsL2NiYzpBbGxvd2FuY2VUb3RhbEFtb3VudCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0iQ3Vycl9UeXBlIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1TVUJUT1RBTDEtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSJuMTpJbnZvaWNlL2NhYzpUYXhUb3RhbC9jYWM6VGF4U3VidG90YWwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tTUFUUkFIMS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiMxNjA7PHhzbDp0ZXh0Pkhlc2FwbGFuYW4gPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjYWM6VGF4Q2F0ZWdvcnkvY2FjOlRheFNjaGVtZS9jYmM6TmFtZSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PiglPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjYmM6UGVyY2VudCIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0Pik8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSJjYmM6VGF4QW1vdW50Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpjYWxsLXRlbXBsYXRlIG5hbWU9IkN1cnJfVHlwZSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Im4xOkludm9pY2UvY2FjOlRheFRvdGFsL2NhYzpUYXhTdWJ0b3RhbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iY2FjOlRheENhdGVnb3J5L2NhYzpUYXhTY2hlbWUvY2JjOlRheFR5cGVDb2RlID0gJzQxNzEnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+JiMxNjA7S0RWIE1hdHJhaMSxIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246cmlnaHQiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2YNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdD0iZm9ybWF0LW51bWJlcihzdW0oLy9uMTpJbnZvaWNlL2NhYzpUYXhUb3RhbC9jYWM6VGF4U3VidG90YWxbY2FjOlRheENhdGVnb3J5L2NhYzpUYXhTY2hlbWUvY2JjOlRheFR5cGVDb2RlPTAwMTVdL2NiYzpUYXhhYmxlQW1vdW50KSwgJyMjIy4jIzAsMDAnLCAnZXVyb3BlYW4nKSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVzdD0iLy9uMTpJbnZvaWNlL2NhYzpMZWdhbE1vbmV0YXJ5VG90YWwvY2JjOlRheEluY2x1c2l2ZUFtb3VudC9AY3VycmVuY3lJRCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PiA8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlc3Q9Ii8vbjE6SW52b2ljZS9jYWM6TGVnYWxNb25ldGFyeVRvdGFsL2NiYzpUYXhJbmNsdXNpdmVBbW91bnQvQGN1cnJlbmN5SUQgPSAnVFJMJyBvciAvL24xOkludm9pY2UvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbC9jYmM6VGF4SW5jbHVzaXZlQW1vdW50L0BjdXJyZW5jeUlEID0gJ1RSWSciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PlRMPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXN0PSIvL24xOkludm9pY2UvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbC9jYmM6VGF4SW5jbHVzaXZlQW1vdW50L0BjdXJyZW5jeUlEICE9ICdUUkwnIGFuZCAvL24xOkludm9pY2UvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbC9jYmM6VGF4SW5jbHVzaXZlQW1vdW50L0BjdXJyZW5jeUlEICE9ICdUUlknIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2YNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbC9jYmM6VGF4SW5jbHVzaXZlQW1vdW50L0BjdXJyZW5jeUlEIg0KCQkJCQkJCQkJCQkvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+JiMxNjA7VGV2a2lmYXQgRGFoaWwgVG9wbGFtIFR1dGFyIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246cmlnaHQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iLy9uMTpJbnZvaWNlL2NhYzpMZWdhbE1vbmV0YXJ5VG90YWwvY2JjOlRheEluY2x1c2l2ZUFtb3VudCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpjYWxsLXRlbXBsYXRlIG5hbWU9IkN1cnJfVHlwZSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+JiMxNjA7VGV2a2lmYXQgSGFyacOnIFRvcGxhbSBUdXRhciA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYWM6TGVnYWxNb25ldGFyeVRvdGFsL2NiYzpQYXlhYmxlQW1vdW50Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0iQ3Vycl9UeXBlIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Im4xOkludm9pY2UvY2FjOldpdGhob2xkaW5nVGF4VG90YWwvY2FjOlRheFN1YnRvdGFsIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0iYm9sZFRkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYjMTYwOzx4c2w6dGV4dD5IZXNhcGxhbmFuIEtEViBUZXZraWZhdDwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+KCU8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNiYzpQZXJjZW50Ii8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+KTwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246cmlnaHQiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iY2JjOlRheEFtb3VudCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Y2FsbC10ZW1wbGF0ZSBuYW1lPSJDdXJyX1R5cGUiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVzdD0ic3VtKG4xOkludm9pY2UvY2FjOlRheFRvdGFsL2NhYzpUYXhTdWJ0b3RhbFtjYWM6VGF4Q2F0ZWdvcnkvY2FjOlRheFNjaGVtZS9jYmM6VGF4VHlwZUNvZGU9OTAxNV0vY2JjOlRheGFibGVBbW91bnQpPjAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPiYjMTYwO1RldmtpZmF0YSBUYWJpIMSwxZ9sZW0gVHV0YXLEsSA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjpyaWdodCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdD0iZm9ybWF0LW51bWJlcihzdW0objE6SW52b2ljZS9jYWM6SW52b2ljZUxpbmVbY2FjOlRheFRvdGFsL2NhYzpUYXhTdWJ0b3RhbC9jYWM6VGF4Q2F0ZWdvcnkvY2FjOlRheFNjaGVtZS9jYmM6VGF4VHlwZUNvZGU9OTAxNV0vY2JjOkxpbmVFeHRlbnNpb25BbW91bnQpLCAnIyMjLiMjMCwwMCcsICdldXJvcGVhbicpIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmIHRlc3Q9IiREb2N1bWVudEN1cnJlbmN5ID0gJ1RMJyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD5UTDwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iJERvY3VtZW50Q3VycmVuY3kgIT0gJ1RMJyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIkRG9jdW1lbnRDdXJyZW5jeSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPiYjMTYwO1RldmtpZmF0YSBUYWJpIMSwxZ9sZW0gw5x6ZXJpbmRlbiBIZXMuIEtEViA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjpyaWdodCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdD0iZm9ybWF0LW51bWJlcihzdW0objE6SW52b2ljZS9jYWM6VGF4VG90YWwvY2FjOlRheFN1YnRvdGFsW2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lL2NiYzpUYXhUeXBlQ29kZT05MDE1XS9jYmM6VGF4YWJsZUFtb3VudCksICcjIyMuIyMwLDAwJywgJ2V1cm9wZWFuJykiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iJERvY3VtZW50Q3VycmVuY3kgPSAnVEwnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PlRMPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIkRG9jdW1lbnRDdXJyZW5jeSAhPSAnVEwnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9IiREb2N1bWVudEN1cnJlbmN5Ii8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmIHRlc3QgPSAibjE6SW52b2ljZS9jYWM6SW52b2ljZUxpbmVbY2FjOldpdGhob2xkaW5nVGF4VG90YWwvY2FjOlRheFN1YnRvdGFsL2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lXSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+JiMxNjA7VGV2a2lmYXRhIFRhYmkgxLDFn2xlbSBUdXRhcsSxIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdCA9ICJuMTpJbnZvaWNlL2NhYzpJbnZvaWNlTGluZVtjYWM6V2l0aGhvbGRpbmdUYXhUb3RhbC9jYWM6VGF4U3VidG90YWwvY2FjOlRheENhdGVnb3J5L2NhYzpUYXhTY2hlbWVdIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdD0iZm9ybWF0LW51bWJlcihzdW0objE6SW52b2ljZS9jYWM6SW52b2ljZUxpbmVbY2FjOldpdGhob2xkaW5nVGF4VG90YWwvY2FjOlRheFN1YnRvdGFsL2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lXS9jYmM6TGluZUV4dGVuc2lvbkFtb3VudCksICcjIyMuIyMwLDAwJywgJ2V1cm9wZWFuJykiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0ID0gIi8vbjE6SW52b2ljZS9jYWM6VGF4VG90YWwvY2FjOlRheFN1YnRvdGFsL2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lL2NiYzpUYXhUeXBlQ29kZT0mYXBvczs5MDE1JmFwb3M7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdD0iZm9ybWF0LW51bWJlcihzdW0objE6SW52b2ljZS9jYWM6SW52b2ljZUxpbmVbY2FjOlRheFRvdGFsL2NhYzpUYXhTdWJ0b3RhbC9jYWM6VGF4Q2F0ZWdvcnkvY2FjOlRheFNjaGVtZS9jYmM6VGF4VHlwZUNvZGU9OTAxNV0vY2JjOkxpbmVFeHRlbnNpb25BbW91bnQpLCAnIyMjLiMjMCwwMCcsICdldXJvcGVhbicpIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iJERvY3VtZW50Q3VycmVuY3kgPSAnVEwnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PlRMPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIkRG9jdW1lbnRDdXJyZW5jeSAhPSAnVEwnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9IiREb2N1bWVudEN1cnJlbmN5Ii8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPiYjMTYwO1RldmtpZmF0YSBUYWJpIMSwxZ9sZW0gw5x6ZXJpbmRlbiBIZXMuIEtEViA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjpyaWdodCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmIHRlc3QgPSAibjE6SW52b2ljZS9jYWM6SW52b2ljZUxpbmVbY2FjOldpdGhob2xkaW5nVGF4VG90YWwvY2FjOlRheFN1YnRvdGFsL2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lXSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2YNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Q9ImZvcm1hdC1udW1iZXIoc3VtKG4xOkludm9pY2UvY2FjOldpdGhob2xkaW5nVGF4VG90YWwvY2FjOlRheFN1YnRvdGFsW2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lXS9jYmM6VGF4YWJsZUFtb3VudCksICcjIyMuIyMwLDAwJywgJ2V1cm9wZWFuJykiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0ID0gIi8vbjE6SW52b2ljZS9jYWM6VGF4VG90YWwvY2FjOlRheFN1YnRvdGFsL2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lL2NiYzpUYXhUeXBlQ29kZT0mYXBvczs5MDE1JmFwb3M7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdD0iZm9ybWF0LW51bWJlcihzdW0objE6SW52b2ljZS9jYWM6VGF4VG90YWwvY2FjOlRheFN1YnRvdGFsW2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lL2NiYzpUYXhUeXBlQ29kZT05MDE1XS9jYmM6VGF4YWJsZUFtb3VudCksICcjIyMuIyMwLDAwJywgJ2V1cm9wZWFuJykiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIkRG9jdW1lbnRDdXJyZW5jeSA9ICdUTCciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+VEw8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmIHRlc3Q9IiREb2N1bWVudEN1cnJlbmN5ICE9ICdUTCciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iJERvY3VtZW50Q3VycmVuY3kiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPiYjMTYwO1ZlcmdpbGVyIERhaGlsIFRvcGxhbSBUdXRhciA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246cmlnaHQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSJuMTpJbnZvaWNlL2NhYzpMZWdhbE1vbmV0YXJ5VG90YWwvY2JjOlRheEluY2x1c2l2ZUFtb3VudCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0iQ3Vycl9UeXBlIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvbGRUZCI+JiMxNjA7w5ZkZW5lY2VrIFR1dGFyIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjpyaWdodCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Im4xOkludm9pY2UvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbC9jYmM6UGF5YWJsZUFtb3VudCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0iQ3Vycl9UeXBlIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIkRG9jdW1lbnRDdXJyZW5jeSAhPSAnVEwnIGFuZCAvL24xOkludm9pY2UvY2FjOlByaWNpbmdFeGNoYW5nZVJhdGUvY2JjOkNhbGN1bGF0aW9uUmF0ZSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iJERvY3VtZW50Q3VycmVuY3kgIT0gJ1RMJyBhbmQgLy9uMTpJbnZvaWNlL2NhYzpQcmljaW5nRXhjaGFuZ2VSYXRlL2NiYzpDYWxjdWxhdGlvblJhdGUiPjx0cj48dGQgaWQ9ImJvbGRUZCI+JiMxNjA7TWFsIEhpem1ldCBUb3BsYW0gVHV0YXLEsShUTCkgPC90ZD48dGQgc3R5bGU9InRleHQtYWxpZ246cmlnaHQiPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJmb3JtYXQtbnVtYmVyKC8vbjE6SW52b2ljZS9jYWM6TGVnYWxNb25ldGFyeVRvdGFsL2NiYzpMaW5lRXh0ZW5zaW9uQW1vdW50ICogLy9uMTpJbnZvaWNlL2NhYzpQcmljaW5nRXhjaGFuZ2VSYXRlL2NiYzpDYWxjdWxhdGlvblJhdGUsICcjIyMuIyMwLDAwJywgJ2V1cm9wZWFuJykiLz48eHNsOnRleHQ+IFRMPC94c2w6dGV4dD48L3RkPjwvdHI+PHRyPjx0ZCBpZD0iYm9sZFRkIj4mIzE2MDtUb3BsYW0gxLBza29udG8oVEwpPC90ZD48dGQgc3R5bGU9InRleHQtYWxpZ246cmlnaHQiPjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJmb3JtYXQtbnVtYmVyKC8vbjE6SW52b2ljZS9jYWM6TGVnYWxNb25ldGFyeVRvdGFsL2NiYzpBbGxvd2FuY2VUb3RhbEFtb3VudCAqIC8vbjE6SW52b2ljZS9jYWM6UHJpY2luZ0V4Y2hhbmdlUmF0ZS9jYmM6Q2FsY3VsYXRpb25SYXRlLCAnIyMjLiMjMCwwMCcsICdldXJvcGVhbicpIi8+PHhzbDp0ZXh0PiBUTDwveHNsOnRleHQ+PC90ZD48L3RyPjwhLS1TVUJUT1RBTDItLT48eHNsOmZvci1lYWNoIHNlbGVjdD0ibjE6SW52b2ljZS9jYWM6VGF4VG90YWwvY2FjOlRheFN1YnRvdGFsIj48IS0tTUFUUkFIMi0tPjx0cj48dGQgaWQ9ImJvbGRUZCI+JiMxNjA7PHhzbDp0ZXh0Pkhlc2FwbGFuYW4gPC94c2w6dGV4dD48eHNsOnZhbHVlLW9mIHNlbGVjdD0iY2FjOlRheENhdGVnb3J5L2NhYzpUYXhTY2hlbWUvY2JjOk5hbWUiLz48eHNsOnRleHQ+KCU8L3hzbDp0ZXh0Pjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjYmM6UGVyY2VudCIvPjx4c2w6dGV4dD4pIChUTCk8L3hzbDp0ZXh0PjwvdGQ+PHRkIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij48eHNsOnZhbHVlLW9mIHNlbGVjdD0iZm9ybWF0LW51bWJlcihjYmM6VGF4QW1vdW50ICogLy9uMTpJbnZvaWNlL2NhYzpQcmljaW5nRXhjaGFuZ2VSYXRlL2NiYzpDYWxjdWxhdGlvblJhdGUsICcjIyMuIyMwLDAwJywgJ2V1cm9wZWFuJykiLz48eHNsOnRleHQ+IFRMPC94c2w6dGV4dD48L3RkPjwvdHI+PC94c2w6Zm9yLWVhY2g+PHRyPjx0ZCBpZD0iYm9sZFRkIj4mIzE2MDtWZXJnaWxlciBEYWhpbCBUb3BsYW0gVHV0YXIoVEwpIDwvdGQ+PHRkIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij48eHNsOnZhbHVlLW9mIHNlbGVjdD0iZm9ybWF0LW51bWJlcigvL24xOkludm9pY2UvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbC9jYmM6VGF4SW5jbHVzaXZlQW1vdW50ICogLy9uMTpJbnZvaWNlL2NhYzpQcmljaW5nRXhjaGFuZ2VSYXRlL2NiYzpDYWxjdWxhdGlvblJhdGUsICcjIyMuIyMwLDAwJywgJ2V1cm9wZWFuJykiLz48eHNsOnRleHQ+IFRMPC94c2w6dGV4dD48L3RkPjwvdHI+PHRyPjx0ZCBpZD0iYm9sZFRkIj4mIzE2MDvDlmRlbmVjZWsgVHV0YXIoVEwpIDwvdGQ+PHRkIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij48eHNsOnZhbHVlLW9mIHNlbGVjdD0iZm9ybWF0LW51bWJlcigvL24xOkludm9pY2UvY2FjOkxlZ2FsTW9uZXRhcnlUb3RhbC9jYmM6UGF5YWJsZUFtb3VudCAqIC8vbjE6SW52b2ljZS9jYWM6UHJpY2luZ0V4Y2hhbmdlUmF0ZS9jYmM6Q2FsY3VsYXRpb25SYXRlLCAnIyMjLiMjMCwwMCcsICdldXJvcGVhbicpIi8+PHhzbDp0ZXh0PiBUTDwveHNsOnRleHQ+PC90ZD48L3RyPjwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCg0KICAgICAgICAgICAgICAgICAgPCEtLWRpcCB0b3BsYW0tLT4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgPCEtLWlhZGUgYmlsZ2lzaS0tPg0KICAgICAgICAgICAgICAgICAgPHhzbDp2YXJpYWJsZSBuYW1lPSJpYWRlIj4NCiAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYWM6QmlsbGluZ1JlZmVyZW5jZS9jYWM6SW52b2ljZURvY3VtZW50UmVmZXJlbmNlIi8+DQogICAgICAgICAgICAgICAgICA8L3hzbDp2YXJpYWJsZT4NCiAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iY29udGFpbnMoJGlhZGUsJ8SwQURFJykgb3IgY29udGFpbnMoJGlhZGUsJ0lBREUnKSBvciBjb250YWlucygkaWFkZSwnxLBhZGUnKSBvciBjb250YWlucygkaWFkZSwnSWFkZScpIG9yIGNvbnRhaW5zKCRpYWRlLCdpYWRlJykiPg0KICAgICAgICAgICAgICAgICAgICA8YnIvPg0KICAgICAgICAgICAgICAgICAgICA8dGFibGUgaWQ9ImxpbmVUYWJsZSIgd2lkdGg9IjgwMCI+DQogICAgICAgICAgICAgICAgICAgICAgPHRoZWFkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3BhbiA9IjIiIGFsaWduPSJsZWZ0IiBpZD0iYm9sZFRkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDvEsGFkZXllIEtvbnUgT2xhbiBGYXR1cmFsYXINCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgPC90aGVhZD4NCiAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk+DQogICAgICAgICAgICAgICAgICAgICAgICA8dHIgYWxpZ249ImxlZnQiIGNsYXNzPSJsaW5lVGFibGVUciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0iYm9sZFRkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDtGYXR1cmEgTm8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJib2xkVGQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwO1RhcmloDQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYWM6QmlsbGluZ1JlZmVyZW5jZS9jYWM6SW52b2ljZURvY3VtZW50UmVmZXJlbmNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGFsaWduPSJsZWZ0IiBjbGFzcz0ibGluZVRhYmxlVHIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2JjOklEIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIuL2NiYzpJc3N1ZURhdGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmFwcGx5LXRlbXBsYXRlcyBzZWxlY3Q9Ii4iLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgICAgICA8IS0taWFkZSBiaWxnaXNpLS0+DQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgIDwhLS3DtmtjIGJpbGdpc2ktLT4NCiAgICAgICAgICAgICAgICAgIDx4c2w6aWYJdGVzdD0iLy9uMTpJbnZvaWNlL2NhYzpCaWxsaW5nUmVmZXJlbmNlL2NhYzpBZGRpdGlvbmFsRG9jdW1lbnRSZWZlcmVuY2UvY2JjOkRvY3VtZW50VHlwZUNvZGU9J09LQ0JGJyI+DQogICAgICAgICAgICAgICAgICAgIDxici8+DQogICAgICAgICAgICAgICAgICAgIDx0YWJsZSBpZD0ibGluZVRhYmxlIiB3aWR0aD0iODAwIj4NCiAgICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPSI2Ij7DlktDIEJpbGdpbGVyaTwvdGg+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+DQogICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGlkPSJib2xkVGQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjIwJSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PkZpxZ8gTnVtYXJhc8SxPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDoxMCUiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD5GacWfIFRhcmloaTwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MTAlIiBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+RmnFnyBTYWF0aTwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NDAlIiBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+RmnFnyBUaXBpPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDoxMCUiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD5aIFJhcG9yIE5vPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDoxMCUiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD7DlktDIFNlcmkgTm88L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOkJpbGxpbmdSZWZlcmVuY2UvY2FjOkFkZGl0aW9uYWxEb2N1bWVudFJlZmVyZW5jZS9jYmM6RG9jdW1lbnRUeXBlQ29kZVt0ZXh0KCk9J09LQ0JGJ10iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjIwJSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4uL2NiYzpJRCIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjEwJSIgYWxpZ249ImNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4uL2NiYzpJc3N1ZURhdGUiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDoxMCUiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJzdWJzdHJpbmcoLi4vY2FjOlZhbGlkaXR5UGVyaW9kL2NiYzpTdGFydFRpbWUsMSw1KSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgYWxpZ249ImNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpjaG9vc2U+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iLi4vY2JjOkRvY3VtZW50RGVzY3JpcHRpb249J0FWQU5TJyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD7Dlm4gVGFoc2lsYXQoQXZhbnMpIEJpbGdpIEZpxZ9pPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iLi4vY2JjOkRvY3VtZW50RGVzY3JpcHRpb249J1lFTUVLX0ZJUyciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+WWVtZWsgRmnFn2kvS2FydMSxIGlsZSBZYXDEsWxhbiBUYWhzaWxhdCBCaWxnaSBGacWfaTwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp3aGVuIHRlc3Q9Ii4uL2NiYzpEb2N1bWVudERlc2NyaXB0aW9uPSdFLUZBVFVSQSciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+RS1GYXR1cmEgQmlsZ2kgRmnFn2k8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSIuLi9jYmM6RG9jdW1lbnREZXNjcmlwdGlvbj0nRS1GQVRVUkFfSVJTQUxJWUUnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PsSwcnNhbGl5ZSBZZXJpbmUgR2XDp2VuIEUtRmF0dXJhIEJpbGdpIEZpxZ9pPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iLi4vY2JjOkRvY3VtZW50RGVzY3JpcHRpb249J0UtQVJTSVYnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PkUtQXLFn2l2IEJpbGdpIEZpxZ9pPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iLi4vY2JjOkRvY3VtZW50RGVzY3JpcHRpb249J0UtQVJTSVZfSVJTQUxJWUUnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PsSwcnNhbGl5ZSBZZXJpbmUgR2XDp2VuIEUtQXLFn2l2IEJpbGdpIEZpxZ9pPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iLi4vY2JjOkRvY3VtZW50RGVzY3JpcHRpb249J0ZBVFVSQSciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+RmF0dXJhbMSxIFNhdMSxxZ8gQmlsZ2kgRmnFn2k8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSIuLi9jYmM6RG9jdW1lbnREZXNjcmlwdGlvbj0nT1RPUEFSSyciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+T3RvcGFyayBHaXJpxZ8gQmlsZ2kgRmnFn2k8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSIuLi9jYmM6RG9jdW1lbnREZXNjcmlwdGlvbj0nRkFUVVJBX1RBSFNJTEFUJyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD5GYXR1cmEgVGFoc2lsYXQgQmlsZ2kgRmnFn2k8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSIuLi9jYmM6RG9jdW1lbnREZXNjcmlwdGlvbj0nRkFUVVJBX1RBSFNJTEFUX0tPTUlTWU9OTFUnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PktvbWlzeW9ubHUgRmF0dXJhIFRhaHNpbGF0IEJpbGdpIEZpxZ9pPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOm90aGVyd2lzZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PiA8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6b3RoZXJ3aXNlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmNob29zZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDoxMCUiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIuLi9jYWM6QXR0YWNobWVudC9jYWM6RXh0ZXJuYWxSZWZlcmVuY2UvY2JjOlVSSSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjEwJSIgYWxpZ249ImNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4uL2NhYzpJc3N1ZXJQYXJ0eS9jYmM6RW5kcG9pbnRJRCIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgPCEtLcO2a2MgYmlsZ2lzaS0tPg0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICA8IS0tbm90bGFyLS0+DQogICAgICAgICAgICAgICAgICA8dGFibGUgaWQgPSJsaW5lVGFibGUiIHdpZHRoPSI4MDAiPg0KICAgICAgICAgICAgICAgICAgICA8dGJvZHk+DQogICAgICAgICAgICAgICAgICAgICAgPHRyIGFsaWduPSJsZWZ0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBoZWlnaHQ9IjEwMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOlRheFRvdGFsL2NhYzpUYXhTdWJ0b3RhbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZgl0ZXN0PSIoY2FjOlRheENhdGVnb3J5L2NhYzpUYXhTY2hlbWUvY2JjOlRheFR5cGVDb2RlPScwMDE1JyBvciAuLi8uLi9jYmM6SW52b2ljZVR5cGVDb2RlPSdPWkVMTUFUUkFIJykgYW5kIGNhYzpUYXhDYXRlZ29yeS9jYmM6VGF4RXhlbXB0aW9uUmVhc29uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPiYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyBWZXJnaSDEsHN0aXNuYSBNdWFmaXlldCBTZWJlYmk6IDwvYj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjYWM6VGF4Q2F0ZWdvcnkvY2JjOlRheEV4ZW1wdGlvblJlYXNvbkNvZGUiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD4tPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjYWM6VGF4Q2F0ZWdvcnkvY2JjOlRheEV4ZW1wdGlvblJlYXNvbiIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmCXRlc3Q9InN0YXJ0cy13aXRoKGNhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lL2NiYzpUYXhUeXBlQ29kZSwnMDA3JykgYW5kIGNhYzpUYXhDYXRlZ29yeS9jYmM6VGF4RXhlbXB0aW9uUmVhc29uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPiYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyDDllRWIMSwc3Rpc25hIE11YWZpeWV0IFNlYmViaTogPC9iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNhYzpUYXhDYXRlZ29yeS9jYmM6VGF4RXhlbXB0aW9uUmVhc29uQ29kZSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0Pi08L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNhYzpUYXhDYXRlZ29yeS9jYmM6VGF4RXhlbXB0aW9uUmVhc29uIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYWM6V2l0aGhvbGRpbmdUYXhUb3RhbC9jYWM6VGF4U3VidG90YWwvY2FjOlRheENhdGVnb3J5L2NhYzpUYXhTY2hlbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPiYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyBUZXZraWZhdCBTZWJlYmk6IDwvYj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iY2JjOlRheFR5cGVDb2RlIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0Pi08L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjYmM6TmFtZSIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxici8+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iLy9uMTpJbnZvaWNlL2NiYzpOb3RlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj4mIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsgTm90OiA8L2I+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4iIGRpc2FibGUtb3V0cHV0LWVzY2FwaW5nPSJ5ZXMiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIvL24xOkludm9pY2UvY2FjOlBheW1lbnRNZWFucy9jYmM6SW5zdHJ1Y3Rpb25Ob3RlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj4mIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsgw5ZkZW1lIE5vdHU6IDwvYj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYWM6UGF5bWVudE1lYW5zL2NiYzpJbnN0cnVjdGlvbk5vdGUiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlc3Q9Ii8vbjE6SW52b2ljZS9jYWM6UGF5bWVudE1lYW5zL2NhYzpQYXllZUZpbmFuY2lhbEFjY291bnQvY2JjOlBheW1lbnROb3RlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj4mIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsgSGVzYXAgQcOnxLFrbGFtYXPEsTogPC9iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2YNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdD0iLy9uMTpJbnZvaWNlL2NhYzpQYXltZW50TWVhbnMvY2FjOlBheWVlRmluYW5jaWFsQWNjb3VudC9jYmM6UGF5bWVudE5vdGUiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIvL24xOkludm9pY2UvY2FjOlBheW1lbnRUZXJtcy9jYmM6Tm90ZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7JiMxNjA7IMOWZGVtZSBLb8WfdWx1OiA8L2I+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYWM6UGF5bWVudFRlcm1zL2NiYzpOb3RlIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgICAgICA8IS0tbm90bGFyLS0+DQogICAgICAgICAgICAgICAgICA8YnIvPg0KICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgIDxici8+DQo8dGFibGUgc3R5bGU9IndpZHRoOjgwMHB4O2JvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IiA+DQoJPHRyIHN0eWxlPSJmb250LXdlaWdodDpib2xkOyIgPg0KCQk8dGQgIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MTBweDtib3JkZXI6MXB4IHNvbGlkOyI+DQoJCQlCYW5rYQ0KCQk8L3RkPg0KCQk8dGQgIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MTBweDtib3JkZXI6MXB4IHNvbGlkOyI+DQoJCQlIZXNhcA0KCQk8L3RkPg0KCQk8dGQgIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MTBweDtib3JkZXI6MXB4IHNvbGlkOyI+DQoJCQlJQkFODQoJCTwvdGQ+DQoJPC90cj4NCgk8dHI+DQoJCTx0ZCAgc3R5bGU9InBhZGRpbmctbGVmdDoxMHB4O2JvcmRlcjoxcHggc29saWQ7Ij4NCgkJCVQuQy4gWmlyYWF0IEJhbmthc8SxDQoJCTwvdGQ+DQoJCTx0ZCAgc3R5bGU9InBhZGRpbmctbGVmdDoxMHB4O2JvcmRlcjoxcHggc29saWQ7Ij4NCgkJCVRMDQoJCTwvdGQ+DQoJCTx0ZCAgc3R5bGU9InBhZGRpbmctbGVmdDoxMHB4O2JvcmRlcjoxcHggc29saWQ7Ij4NCgkJCVRSOTEgMDAwMSAwMDA3IDk1MDYgNTY2OSA2MDUwIDAxDQoJCTwvdGQ+DQoJPC90cj4NCjwvdGFibGU+DQoNCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgPHRkPg0KDQoNCiAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOkFkZGl0aW9uYWxEb2N1bWVudFJlZmVyZW5jZSI+DQogICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iLi9jYmM6SUQvQHNjaGVtZUlEID0gJ1hTTFRESVNQQVRDSCciPg0KICAgICAgICAgICAgICAgICAgICAgIDxiciAvPg0KICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iODAwIiBib3JkZXI9IjEiIGhlaWdodD0iNTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9Im1hcmdpbi1sZWZ0OjEwcHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2JjOklEIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgIDx0ZD4NCg0KICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYWM6QWRkaXRpb25hbERvY3VtZW50UmVmZXJlbmNlIj4NCiAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIuL2NiYzpJRC9Ac2NoZW1lSUQgPSAnWFNMVElOVEVSTkVUJyI+DQogICAgICAgICAgICAgICAgICAgICAgPGJyIC8+DQogICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSI4MDAiIGJvcmRlcj0iMSIgaGVpZ2h0PSI1MCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0ibWFyZ2luLWxlZnQ6MTBweCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iLi9jYmM6SUQiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgICAgICAgICAgPGJyIC8+DQogICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjgwMCIgaGVpZ2h0PSI1MCIgaWQ9ImluZm8iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgV2ViIEFkcmVzaQ0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iLy9uMTpJbnZvaWNlL2NhYzpBZGRpdGlvbmFsRG9jdW1lbnRSZWZlcmVuY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIuL2NiYzpJRC9Ac2NoZW1lSUQgPSAnSU5UV0VCQURSRVMnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2JjOklEIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXdlaWdodDogYm9sZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIMOWZGVtZSDFnmVrbGkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOkFkZGl0aW9uYWxEb2N1bWVudFJlZmVyZW5jZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmIHRlc3Q9Ii4vY2JjOklEL0BzY2hlbWVJRCA9ICdJTlRPREVNRVNFS0xJJyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIuL2NiYzpJRCIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC13ZWlnaHQ6IGJvbGQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICDDlmRlbWUgVGFyaWhpDQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iLy9uMTpJbnZvaWNlL2NhYzpBZGRpdGlvbmFsRG9jdW1lbnRSZWZlcmVuY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIuL2NiYzpJRC9Ac2NoZW1lSUQgPSAnSU5UT0RFTUVUQVJJSEknIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2JjOklEIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXdlaWdodDogYm9sZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEfDtm5kZXJpeWkgVGHFn8SxeWFuDQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iLy9uMTpJbnZvaWNlL2NhYzpBZGRpdGlvbmFsRG9jdW1lbnRSZWZlcmVuY2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIuL2NiYzpJRC9Ac2NoZW1lSUQgPSAnSU5UR09OREVSSVRBU0lZQU4nIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2JjOklEIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXdlaWdodDogYm9sZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRhxZ/EsXnEsWPEsSBWS04NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOkFkZGl0aW9uYWxEb2N1bWVudFJlZmVyZW5jZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOmlmIHRlc3Q9Ii4vY2JjOklEL0BzY2hlbWVJRCA9ICdJTlRUQVNJWUlDSVZLTiciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iLi9jYmM6SUQiLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgR8O2bmRlcmltIFRhcmloaQ0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9Ii8vbjE6SW52b2ljZS9jYWM6QWRkaXRpb25hbERvY3VtZW50UmVmZXJlbmNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iLi9jYmM6SUQvQHNjaGVtZUlEID0gJ0lOVEdPTkRFUklNVEFSSUhJJyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIuL2NiYzpJRCIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCg0KICAgICAgICAgICAgICAgICAgICAgIDxiciAvPg0KICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBpZD0iaW5mbyIgYm9yZGVyPSIxIiBoZWlnaHQ9IjUwIiBzdHlsZT0ibWFyZ2luLWJvdHRvbToxMHB4IiB3aWR0aD0iODAwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiIHN0eWxlPSJmb250LXdlaWdodDpib2xkIj7EsEFERSBCw5ZMw5xNw5w8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgc3R5bGU9ImJvcmRlcjowcHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MTUwcHg7IHRleHQtYWxpZ246Y2VudGVyIj5TdG9rIEtvZHU8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MzUwcHg7IHRleHQtYWxpZ246Y2VudGVyIj5DaW5zaTwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDoxMDBweDsgdGV4dC1hbGlnbjpjZW50ZXIiPkFkZXQ8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MTAwcHg7IHRleHQtYWxpZ246Y2VudGVyIj5CaXJpbSBGaXlhdMSxPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjEwMHB4OyB0ZXh0LWFsaWduOmNlbnRlciI+VHV0YXLEsTwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImhlaWdodDoxOHB4OyBib3JkZXItYm90dG9tOjBweCI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci1ib3R0b206IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci1ib3R0b206IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci1ib3R0b206IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci1ib3R0b206IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iaGVpZ2h0OjE4cHg7IGJvcmRlci10b3A6MHB4OyBib3JkZXItYm90dG9tOjBweCI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci10b3A6IDBweCBub25lOyBib3JkZXItYm90dG9tOiAwcHggbm9uZTsiPjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJib3JkZXItdG9wOiAwcHggbm9uZTsgYm9yZGVyLWJvdHRvbTogMHB4IG5vbmU7Ij48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogMHB4IG5vbmU7IGJvcmRlci1ib3R0b206IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci10b3A6IDBweCBub25lOyBib3JkZXItYm90dG9tOiAwcHggbm9uZTsiPjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImhlaWdodDoxOHB4OyBib3JkZXItdG9wOjBweCI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci10b3A6IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci10b3A6IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci10b3A6IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlci10b3A6IDBweCBub25lOyI+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+DQogICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7EsGFkZSBFZGVuaW4gQWTEsSwgU295YWTEsTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9Im1hcmdpbi1sZWZ0OjI1MHB4Ij7EsG16YXPEsTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgPGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5BZHJlc2k6IDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICA8YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgICA8YnIgLz4NCg0KICAgICAgICAgICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICA8dGQ+DQoNCiAgICAgICAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIvL24xOkludm9pY2UvY2FjOkFkZGl0aW9uYWxEb2N1bWVudFJlZmVyZW5jZSI+DQogICAgICAgICAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iLi9jYmM6SUQvQHNjaGVtZUlEID0gJ1hTTFRFTEVDVFJPTklDJyI+DQoNCiAgICAgICAgICAgICAgICAgICAgICA8YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgd2lkdGg9IjgwMCIgYm9yZGVyPSIxIiBoZWlnaHQ9IjUwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJtYXJnaW4tbGVmdDoxMHB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIuL2NiYzpJRCIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCg0KICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQoNCiAgICAgICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICA8L3RkPg0KICAgICAgICA8L3RyPg0KDQoNCiAgICAgIDwvYm9keT4NCiAgICA8L2h0bWw+DQogIDwveHNsOnRlbXBsYXRlPg0KICA8IS0tYnVyYXPEsSBzYXTEsXIgLSBrYWxlbSBpw6dlcmlraWxlcmluaW4gZ2VsZGnEn2kgeWVyLS0+DQogIDx4c2w6dGVtcGxhdGUgbWF0Y2g9Ii8vbjE6SW52b2ljZS9jYWM6SW52b2ljZUxpbmUiPg0KICAgIDx0cj4NCiAgICAgIDwhLS1zxLFyYW5vLS0+DQogICAgICA8dGQ+DQogICAgICAgIDx4c2w6dGV4dD4mIzE2MDs8L3hzbDp0ZXh0Pg0KICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iLi9jYmM6SUQiLz4NCiAgICAgIDwvdGQ+DQogICAgICA8IS0tc3RvayBrb2R1LS0+DQogICAgICA8IS0tU0VMTEVSSUQyLS0+DQogICAgICA8IS0tbWFsIGhpem1ldC0tPg0KICAgICAgPHRkPg0KICAgICAgICA8eHNsOnRleHQ+JiMxNjA7PC94c2w6dGV4dD4NCiAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOkl0ZW0vY2JjOk5hbWUiLz4NCiAgICAgIDwvdGQ+DQogICAgICA8IS0tw7xyZXRpY2kga29kdS0tPg0KICAgICAgPCEtLU1BTlVGQUNUVVJFUklEMi0tPg0KICAgICAgPCEtLWFsxLFjxLEga29kdS0tPg0KICAgICAgPCEtLUJVWUVSSUQyLS0+DQogICAgICA8IS0tYcOnxLFrbGFtYS0tPg0KICAgICAgPCEtLURFU0NSSVBUSU9OMi0tPg0KICAgICAgPCEtLXNhdMSxciBub3R1LS0+DQogICAgICA8IS0tTElORU5PVEUyLS0+DQogICAgICA8IS0tbWlrdGFyLS0+DQogICAgICA8dGQgYWxpZ249InJpZ2h0Ij4NCiAgICAgICAgPHhzbDpmb3ItZWFjaCBzZWxlY3Q9ImNiYzpJbnZvaWNlZFF1YW50aXR5Ij4NCiAgICAgICAgICA8eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0iQXRyX1R5cGUiLz4NCiAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICA8L3RkPg0KICAgICAgPCEtLWJpcmltIGZpeWF0LS0+DQogICAgICA8dGQgYWxpZ249InJpZ2h0Ij4NCiAgICAgICAgPHhzbDp0ZXh0PiYjMTYwOzwveHNsOnRleHQ+DQogICAgICAgIDx4c2w6dmFsdWUtb2YNCgkJCQkJc2VsZWN0PSJmb3JtYXQtbnVtYmVyKC4vY2FjOlByaWNlL2NiYzpQcmljZUFtb3VudCwgJyMjIy4jIzAsMDAjIyMjJywgJ2V1cm9wZWFuJykiLz4NCiAgICAgICAgPHhzbDppZiB0ZXN0PSIuL2NhYzpQcmljZS9jYmM6UHJpY2VBbW91bnQvQGN1cnJlbmN5SUQiPg0KICAgICAgICAgIDx4c2w6dGV4dD4gPC94c2w6dGV4dD4NCiAgICAgICAgICA8eHNsOmlmIHRlc3Q9Ii4vY2FjOlByaWNlL2NiYzpQcmljZUFtb3VudC9AY3VycmVuY3lJRCA9ICZxdW90O1RSTCZxdW90OyBvciAuL2NhYzpQcmljZS9jYmM6UHJpY2VBbW91bnQvQGN1cnJlbmN5SUQgPSAmcXVvdDtUUlkmcXVvdDsiPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PlRMPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICA8eHNsOmlmIHRlc3Q9Ii4vY2FjOlByaWNlL2NiYzpQcmljZUFtb3VudC9AY3VycmVuY3lJRCAhPSAmcXVvdDtUUkwmcXVvdDsgYW5kIC4vY2FjOlByaWNlL2NiYzpQcmljZUFtb3VudC9AY3VycmVuY3lJRCAhPSAmcXVvdDtUUlkmcXVvdDsiPg0KICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOlByaWNlL2NiYzpQcmljZUFtb3VudC9AY3VycmVuY3lJRCIvPg0KICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICA8L3hzbDppZj4NCiAgICAgIDwvdGQ+DQogICAgICA8IS0taXNrb250byBvcmFubsSxLS0+DQogICAgICA8IS0tRElTQ1JBVEUyLS0+DQogICAgICA8IS0taXNrb250byB0dXRhcsSxLS0+DQogICAgICA8IS0tRElTQ0FNT1VOVDItLT4NCiAgICAgIDwhLS1rZHYgb3JhbsSxLS0+DQogICAgICA8dGQgYWxpZ249InJpZ2h0Ij48eHNsOnRleHQ+JiMxNjA7PC94c2w6dGV4dD48eHNsOmZvci1lYWNoIHNlbGVjdD0iLi9jYWM6VGF4VG90YWwvY2FjOlRheFN1YnRvdGFsL2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lIj48eHNsOmlmIHRlc3Q9ImNiYzpUYXhUeXBlQ29kZT0nMDAxNScgIj48eHNsOnRleHQ+IDwveHNsOnRleHQ+PHhzbDppZiB0ZXN0PSIuLi8uLi9jYmM6UGVyY2VudCI+PHhzbDp0ZXh0PiAlPC94c2w6dGV4dD48eHNsOnZhbHVlLW9mIHNlbGVjdD0iZm9ybWF0LW51bWJlciguLi8uLi9jYmM6UGVyY2VudCwgJyMjIy4jIzAsMDAnLCAnZXVyb3BlYW4nKSIvPjwveHNsOmlmPjwveHNsOmlmPjwveHNsOmZvci1lYWNoPjwvdGQ+DQogICAgICA8IS0ta2R2ICB0dXRhcsSxLS0+DQogICAgICA8dGQgYWxpZ249InJpZ2h0Ij48eHNsOnRleHQ+JiMxNjA7PC94c2w6dGV4dD48eHNsOmZvci1lYWNoIHNlbGVjdD0iLi9jYWM6VGF4VG90YWwvY2FjOlRheFN1YnRvdGFsL2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lIj48eHNsOmlmIHRlc3Q9ImNiYzpUYXhUeXBlQ29kZT0nMDAxNScgIj48eHNsOnRleHQ+IDwveHNsOnRleHQ+PHhzbDpmb3ItZWFjaCBzZWxlY3Q9Ii4uLy4uL2NiYzpUYXhBbW91bnQiPjx4c2w6Y2FsbC10ZW1wbGF0ZSBuYW1lPSJDdXJyX1R5cGUiLz48L3hzbDpmb3ItZWFjaD48L3hzbDppZj48L3hzbDpmb3ItZWFjaD48L3RkPg0KICAgICAgPCEtLWRpxJ9lciB2ZXJnaWxlci0tPg0KICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6IHh4LXNtYWxsIiBhbGlnbj0icmlnaHQiPjx4c2w6dGV4dD4mIzE2MDs8L3hzbDp0ZXh0Pjx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIuL2NhYzpUYXhUb3RhbC9jYWM6VGF4U3VidG90YWwvY2FjOlRheENhdGVnb3J5L2NhYzpUYXhTY2hlbWUiPjx4c2w6aWYgdGVzdD0iY2JjOlRheFR5cGVDb2RlIT0nMDAxNScgIj48eHNsOnRleHQ+IDwveHNsOnRleHQ+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNiYzpOYW1lIi8+PHhzbDppZiB0ZXN0PSIuLi8uLi9jYmM6UGVyY2VudCI+PHhzbDp0ZXh0PiAoJTwveHNsOnRleHQ+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImZvcm1hdC1udW1iZXIoLi4vLi4vY2JjOlBlcmNlbnQsICcjIyMuIyMwLDAwJywgJ2V1cm9wZWFuJykiLz48eHNsOnRleHQ+KT08L3hzbDp0ZXh0PjwveHNsOmlmPjx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIuLi8uLi9jYmM6VGF4QW1vdW50Ij48eHNsOmNhbGwtdGVtcGxhdGUgbmFtZT0iQ3Vycl9UeXBlIi8+PC94c2w6Zm9yLWVhY2g+PC94c2w6aWY+PC94c2w6Zm9yLWVhY2g+PHhzbDpmb3ItZWFjaCBzZWxlY3Q9Ii4vY2FjOldpdGhob2xkaW5nVGF4VG90YWwvY2FjOlRheFN1YnRvdGFsL2NhYzpUYXhDYXRlZ29yeS9jYWM6VGF4U2NoZW1lIj48eHNsOnRleHQ+S0RWIFRFVkvEsEZBVCA8L3hzbDp0ZXh0Pjx4c2w6aWYgdGVzdD0iLi4vLi4vY2JjOlBlcmNlbnQiPjx4c2w6dGV4dD4gKCU8L3hzbDp0ZXh0Pjx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJmb3JtYXQtbnVtYmVyKC4uLy4uL2NiYzpQZXJjZW50LCAnIyMjLiMjMCwwMCcsICdldXJvcGVhbicpIi8+PHhzbDp0ZXh0Pik9PC94c2w6dGV4dD48L3hzbDppZj48eHNsOmZvci1lYWNoIHNlbGVjdD0iLi4vLi4vY2JjOlRheEFtb3VudCI+PHhzbDpjYWxsLXRlbXBsYXRlIG5hbWU9IkN1cnJfVHlwZSIvPjx4c2w6dGV4dD4mIzEwOzwveHNsOnRleHQ+PC94c2w6Zm9yLWVhY2g+PC94c2w6Zm9yLWVhY2g+PHhzbDp0ZXh0PiYjMTYwOzwveHNsOnRleHQ+PHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOkl0ZW0vY2JjOk5vdGUiLz48L3RkPg0KICAgICAgPCEtLW1hbCBoaXptZXQgdHV0YXLEsS0tPg0KICAgICAgPHRkIGFsaWduPSJyaWdodCI+DQogICAgICAgIDx4c2w6dGV4dD4mIzE2MDs8L3hzbDp0ZXh0Pg0KICAgICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iY2JjOkxpbmVFeHRlbnNpb25BbW91bnQiPg0KICAgICAgICAgIDx4c2w6Y2FsbC10ZW1wbGF0ZSBuYW1lPSJDdXJyX1R5cGUiLz4NCiAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICA8L3RkPg0KICAgIDwvdHI+DQogIDwveHNsOnRlbXBsYXRlPg0KICA8IS0tdGFyaWggZm9ybWF0xLEtLT4NCiAgPHhzbDp0ZW1wbGF0ZSBtYXRjaD0iLy9jYmM6SXNzdWVEYXRlIj4NCiAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKC4sOSwyKSIvPi08eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKC4sNiwyKSIvPi08eHNsOnZhbHVlLW9mIHNlbGVjdD0ic3Vic3RyaW5nKC4sMSw0KSIvPg0KICA8L3hzbDp0ZW1wbGF0ZT4NCiAgPCEtLXBhcmEgYmlyaW1pLS0+DQogIDx4c2w6dGVtcGxhdGUgbmFtZT0iQ3Vycl9UeXBlIj4NCiAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iZm9ybWF0LW51bWJlciguLCAnIyMjLiMjMCwwMCcsICdldXJvcGVhbicpIi8+DQogICAgPHhzbDppZgl0ZXN0PSJAY3VycmVuY3lJRCI+DQogICAgICA8eHNsOnRleHQ+IDwveHNsOnRleHQ+DQogICAgICA8eHNsOmNob29zZT4NCiAgICAgICAgPHhzbDp3aGVuIHRlc3Q9IkBjdXJyZW5jeUlEID0gJ1RSTCcgb3IgQGN1cnJlbmN5SUQgPSAnVFJZJyI+DQogICAgICAgICAgPHhzbDp0ZXh0PlRMPC94c2w6dGV4dD4NCiAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgPHhzbDpvdGhlcndpc2U+DQogICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9IkBjdXJyZW5jeUlEIi8+DQogICAgICAgIDwveHNsOm90aGVyd2lzZT4NCiAgICAgIDwveHNsOmNob29zZT4NCiAgICA8L3hzbDppZj4NCiAgPC94c2w6dGVtcGxhdGU+DQogIDwhLS1iaXJpbSBrYXLFn8SxbMSxxJ/EsS0tPg0KICA8eHNsOnRlbXBsYXRlIG5hbWU9IkF0cl9UeXBlIj4NCiAgICA8eHNsOnRleHQ+JiMxNjA7PC94c2w6dGV4dD4NCiAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iZm9ybWF0LW51bWJlciguLCAnIyMjLiMjMCwjIyMjJywgJ2V1cm9wZWFuJykiLz4NCiAgICA8eHNsOmlmIHRlc3Q9IkB1bml0Q29kZSI+DQogICAgICA8eHNsOmZvci1lYWNoIHNlbGVjdD0iLiI+DQogICAgICAgIDx4c2w6dGV4dD4gPC94c2w6dGV4dD4NCiAgICAgICAgPHhzbDpjaG9vc2U+DQogICAgICAgICAgPHhzbDp3aGVuIHRlc3Q9IkB1bml0Q29kZSAgPSAnVE5FJyI+DQogICAgICAgICAgICA8eHNsOnRleHQ+dG9uPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0JYJyI+DQogICAgICAgICAgICA8eHNsOnRleHQ+S3V0dTwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdQSyciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PlBha2V0PC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0xUUiciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0Pmx0PC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0M2MiciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PkFkZXQ8L3hzbDp0ZXh0Pg0KICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgPHhzbDp3aGVuIHRlc3Q9IkB1bml0Q29kZSAgPSAnTklVJyI+DQogICAgICAgICAgICA8eHNsOnRleHQ+QWRldDwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdLR00nIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD5rZzwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdLSk8nIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD5rSjwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdHUk0nIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD5nPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ01HTSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0Pm1nPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ05UJyI+DQogICAgICAgICAgICA8eHNsOnRleHQ+TmV0IFRvbjwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdHVCciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0Pkdyb3NzIFRvbjwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdNVFInIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD5tPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ01NVCciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0Pm1tPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0tUTSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PmttPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ01MVCciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0Pm1sPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ01NUSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0Pm1tMzwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdDTFQnIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD5jbDwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdDTUsnIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD5jbTI8L3hzbDp0ZXh0Pg0KICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgPHhzbDp3aGVuIHRlc3Q9IkB1bml0Q29kZSAgPSAnQ01RJyI+DQogICAgICAgICAgICA8eHNsOnRleHQ+Y20zPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0NNVCciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PmNtPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ01USyciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0Pm0yPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ01UUSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0Pm0zPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0RBWSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBHw7xuPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ01PTiciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBBeTwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdQQSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBQYWtldDwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdLV0gnIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD4gS1dIPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0FOTiciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBZxLFsPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0hVUiciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBTYWF0PC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0Q2MSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBEYWtpa2E8L3hzbDp0ZXh0Pg0KICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgPHhzbDp3aGVuIHRlc3Q9IkB1bml0Q29kZSAgPSAnRDYyJyI+DQogICAgICAgICAgICA8eHNsOnRleHQ+IFNhbml5ZTwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdDQ1QnIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD4gVG9uIGJhxZ8udGHFn8SxbWEga2FwLjwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdEMzAnIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD4gQnLDvHQga2Fsb3JpPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0Q0MCciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiAxMDAwIGx0PC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ0xQQSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBzYWYgYWxrb2wgbHQ8L3hzbDp0ZXh0Pg0KICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgPHhzbDp3aGVuIHRlc3Q9IkB1bml0Q29kZSAgPSAnQjMyJyI+DQogICAgICAgICAgICA8eHNsOnRleHQ+IGtnLm0yPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ05DTCciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBow7xjcmUgYWRldDwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdQUiciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiDDh2lmdDwveHNsOnRleHQ+DQogICAgICAgICAgPC94c2w6d2hlbj4NCiAgICAgICAgICA8eHNsOndoZW4gdGVzdD0iQHVuaXRDb2RlICA9ICdSOSciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiAxMDAwIG0zPC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICAgIDx4c2w6d2hlbiB0ZXN0PSJAdW5pdENvZGUgID0gJ1NFVCciPg0KICAgICAgICAgICAgPHhzbDp0ZXh0PiBTZXQ8L3hzbDp0ZXh0Pg0KICAgICAgICAgIDwveHNsOndoZW4+DQogICAgICAgICAgPHhzbDp3aGVuIHRlc3Q9IkB1bml0Q29kZSAgPSAnVDMnIj4NCiAgICAgICAgICAgIDx4c2w6dGV4dD4gMTAwMCBhZGV0PC94c2w6dGV4dD4NCiAgICAgICAgICA8L3hzbDp3aGVuPg0KICAgICAgICA8L3hzbDpjaG9vc2U+DQogICAgICA8L3hzbDpmb3ItZWFjaD4NCiAgICA8L3hzbDppZj4NCiAgPC94c2w6dGVtcGxhdGU+DQogIDx4c2w6Y2hhcmFjdGVyLW1hcCBuYW1lPSJhIj4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzEyODsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxMjk7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTMwOyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzEzMTsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxMzI7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTMzOyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzEzNDsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxMzU7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTM2OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzEzNzsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxMzg7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTM5OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE0MDsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNDE7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTQyOyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE0MzsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNDQ7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTQ1OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE0NjsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNDc7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTQ4OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE0OTsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNTA7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTUxOyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE1MjsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNTM7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTU0OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE1NTsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNTY7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTU3OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE1ODsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNTk7IiBzdHJpbmc9IiIvPg0KICA8L3hzbDpjaGFyYWN0ZXItbWFwPg0KICA8eHNsOnRlbXBsYXRlIG5hbWUgPSJGaXJtYUJpbGdpc2kiPg0KICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0PSIuL2NhYzpQYXJ0eSI+DQogICAgICA8dGFibGU+DQogICAgICAgIDx0aGVhZD4NCiAgICAgICAgICA8dHI+DQogICAgICAgICAgICA8dGQgd2lkdGggPSIxMDAiPg0KICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIDx0ZCB3aWR0aCA9IjIwMCI+DQogICAgICAgICAgICA8L3RkPg0KICAgICAgICAgIDwvdHI+DQogICAgICAgIDwvdGhlYWQ+DQogICAgICAgIDx0Ym9keT4NCiAgICAgICAgICA8dHI+DQogICAgICAgICAgICA8dGQgY29sc3BhbiA9IjIiPg0KICAgICAgICAgICAgICA8Yj4NCiAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iY2FjOlBhcnR5TmFtZS9jYmM6TmFtZSIvPg0KICAgICAgICAgICAgICA8L2I+DQogICAgICAgICAgICA8L3RkPg0KICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPHhzbDppZiB0ZXN0PSIuL2NhYzpQZXJzb24iPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICA8dGQgY29sc3BhbiA9IjIiPg0KICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIuL2NhYzpQZXJzb24vY2JjOkZpcnN0TmFtZSIvPg0KICAgICAgICAgICAgICAgIDx4c2w6dGV4dD4mIzE2MDs8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgIDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSIuL2NhYzpQZXJzb24vY2JjOkZhbWlseU5hbWUiLz4NCiAgICAgICAgICAgICAgICA8eHNsOnRleHQ+JiMxNjA7PC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iLi9jYWM6UGVyc29uL2NiYzpNaWRkbGVOYW1lIi8+DQogICAgICAgICAgICAgICAgPHhzbDp0ZXh0PiYjMTYwOzwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOlBlcnNvbi9jYmM6VGl0bGUiLz4NCiAgICAgICAgICAgICAgICA8eHNsOnRleHQ+JiMxNjA7PC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iLi9jYWM6UGVyc29uL2NiYzpOYW1lU3VmZml4Ii8+DQogICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPHhzbDppZiB0ZXN0PSIuL2NhYzpQYXJ0eS9jYWM6UGFydHlJZGVudGlmaWNhdGlvbi9jYmM6SUQgPSdUQVhGUkVFJyI+DQogICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+UGFzYXBvcnQgTm8gPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgIDo8eHNsOnZhbHVlLW9mIHNlbGVjdD0iY2FjOklkZW50aXR5RG9jdW1lbnRSZWZlcmVuY2UvY2JjOklEIi8+DQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD7DnGxrZXNpIDwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICA6PHhzbDpmb3ItZWFjaCBzZWxlY3Q9ImNiYzpOYXRpb25hbGl0eUlEIj4NCiAgICAgICAgICAgICAgICAgICAgPHhzbDp2YXJpYWJsZSBuYW1lPSJOYXRpb25hbGl0eUlEIiBzZWxlY3Q9Ii4iLz4NCiAgICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4iLz4NCiAgICAgICAgICAgICAgICAgIDwveHNsOmZvci1lYWNoPg0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICA8eHNsOmlmIHRlc3QgPSIuL2NhYzpQb3N0YWxBZGRyZXNzIj4NCiAgICAgICAgICAgIDx4c2w6aWYgdGVzdCA9Ii4vY2FjOlBvc3RhbEFkZHJlc3MvY2JjOlN0cmVldE5hbWVbdGV4dCgpIT0nJ10gb3IgLi9jYWM6UG9zdGFsQWRkcmVzcy9jYmM6QnVpbGRpbmdOYW1lW3RleHQoKSE9JyddIG9yIC4vY2FjOlBvc3RhbEFkZHJlc3MvY2JjOlJvb21bdGV4dCgpIT0nJ10gb3IgLi9jYWM6UG9zdGFsQWRkcmVzcy9jYmM6UG9zdGFsWm9uZVt0ZXh0KCkhPScnXSI+DQogICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICA8dGQgY29sc3BhbiA9IjIiPg0KICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOlBvc3RhbEFkZHJlc3MvY2JjOlN0cmVldE5hbWUiLz4NCiAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD4mIzE2MDs8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOlBvc3RhbEFkZHJlc3MvY2JjOkJ1aWxkaW5nTmFtZSIvPg0KICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PiYjMTYwOzwveHNsOnRleHQ+DQogICAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iLi9jYWM6UG9zdGFsQWRkcmVzcy9jYmM6QnVpbGRpbmdOdW1iZXIiLz4NCiAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD4mIzE2MDs8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOlBvc3RhbEFkZHJlc3MvY2JjOlJvb20iLz4NCiAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD4mIzE2MDs8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOlBvc3RhbEFkZHJlc3MvY2JjOlBvc3RhbFpvbmUiLz4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgIDx0ZCBjb2xzcGFuID0iMiI+DQogICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOlBvc3RhbEFkZHJlc3MvY2JjOkNpdHlTdWJkaXZpc2lvbk5hbWUiLz4NCiAgICAgICAgICAgICAgICA8eHNsOnRleHQ+JiMxNjA7PC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICA8eHNsOnZhbHVlLW9mIHNlbGVjdD0iLi9jYWM6UG9zdGFsQWRkcmVzcy9jYmM6Q2l0eU5hbWUiLz4NCiAgICAgICAgICAgICAgICA8eHNsOmlmIHRlc3Q9Ii4vY2FjOlBhcnR5SWRlbnRpZmljYXRpb24vY2JjOklEID0nRVhQT1JUJyBvciAuL2NhYzpQYXJ0eUlkZW50aWZpY2F0aW9uL2NiYzpJRCA9J1RBWEZSRUUnIj4NCiAgICAgICAgICAgICAgICAgIDx4c2w6dGV4dD4mIzE2MDs8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vY2FjOlBvc3RhbEFkZHJlc3MvY2FjOkNvdW50cnkvY2JjOk5hbWUiLz4NCiAgICAgICAgICAgICAgICAgIDxici8+DQogICAgICAgICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgIDx4c2w6aWYgdGVzdCA9Ii4vY2JjOldlYnNpdGVVUklbdGV4dCgpIT0nJ10iPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgPHhzbDp0ZXh0PldlYiBTaXRlc2kgPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgIDogPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNiYzpXZWJzaXRlVVJJIi8+DQogICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDwveHNsOmlmPg0KICAgICAgICAgIDx4c2w6aWYgdGVzdCA9Ii4vY2FjOkNvbnRhY3QvY2JjOkVsZWN0cm9uaWNNYWlsW3RleHQoKSE9JyddIj4NCiAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgIDx4c2w6dGV4dD5FLVBvc3RhIDwveHNsOnRleHQ+DQogICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICA6IDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjYWM6Q29udGFjdC9jYmM6RWxlY3Ryb25pY01haWwiLz4NCiAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgPHhzbDppZiB0ZXN0ID0iLi9jYWM6Q29udGFjdC9jYmM6VGVsZXBob25lW3RleHQoKSE9JyddIj4NCiAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgIDx4c2w6dGV4dD5UZWwgPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgIDogPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9ImNhYzpDb250YWN0L2NiYzpUZWxlcGhvbmUiLz4NCiAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgPC94c2w6aWY+DQogICAgICAgICAgPHhzbDppZiB0ZXN0ID0iLi9jYWM6Q29udGFjdC9jYmM6VGVsZWZheFt0ZXh0KCkhPScnXSI+DQogICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICA8eHNsOnRleHQ+RmF4IDwveHNsOnRleHQ+DQogICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICA6IDx4c2w6dmFsdWUtb2Ygc2VsZWN0PSJjYWM6Q29udGFjdC9jYmM6VGVsZWZheCIvPg0KICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICA8eHNsOnZhcmlhYmxlIG5hbWU9IlBhcnR5SWRlbnRpZmljYXRpb24iIHNlbGVjdD0iLi9jYWM6UGFydHlJZGVudGlmaWNhdGlvbi9jYmM6SUQiLz4NCiAgICAgICAgICA8eHNsOmlmIHRlc3Q9IiRQYXJ0eUlkZW50aWZpY2F0aW9uICE9J1RBWEZSRUUnIGFuZCAkUGFydHlJZGVudGlmaWNhdGlvbiAhPSdFWFBPUlQnIj4NCiAgICAgICAgICAgIDx4c2w6aWYgdGVzdD0iY2FjOlBhcnR5VGF4U2NoZW1lL2NhYzpUYXhTY2hlbWUvY2JjOk5hbWUiPg0KICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgPHhzbDp0ZXh0PlZlcmdpIERhaXJlc2kgPC94c2w6dGV4dD4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgIDogPHhzbDp2YWx1ZS1vZiBzZWxlY3QgPSJjYWM6UGFydHlUYXhTY2hlbWUvY2FjOlRheFNjaGVtZS9jYmM6TmFtZSIvPg0KICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8L3hzbDppZj4NCiAgICAgICAgICAgIDx4c2w6Zm9yLWVhY2ggc2VsZWN0ID0iJFBhcnR5SWRlbnRpZmljYXRpb24iPg0KICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4vQHNjaGVtZUlEIi8+DQogICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICA8eHNsOnRleHQ+OiA8L3hzbDp0ZXh0Pg0KICAgICAgICAgICAgICAgICAgPHhzbDp2YWx1ZS1vZiBzZWxlY3Q9Ii4iLz4NCiAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPC94c2w6Zm9yLWVhY2g+DQogICAgICAgICAgPC94c2w6aWY+DQogICAgICAgIDwvdGJvZHk+DQogICAgICA8L3RhYmxlPg0KICAgIDwveHNsOmZvci1lYWNoPg0KICA8L3hzbDp0ZW1wbGF0ZT4NCiAgPHhzbDpjaGFyYWN0ZXItbWFwIG5hbWU9ImEiPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTI4OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzEyOTsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxMzA7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTMxOyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzEzMjsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxMzM7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTM0OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzEzNTsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxMzY7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTM3OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzEzODsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxMzk7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTQwOyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE0MTsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNDI7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTQzOyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE0NDsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNDU7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTQ2OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE0NzsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNDg7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTQ5OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE1MDsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNTE7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTUyOyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE1MzsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNTQ7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTU1OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE1NjsiIHN0cmluZz0iIi8+DQogICAgPHhzbDpvdXRwdXQtY2hhcmFjdGVyIGNoYXJhY3Rlcj0iJiMxNTc7IiBzdHJpbmc9IiIvPg0KICAgIDx4c2w6b3V0cHV0LWNoYXJhY3RlciBjaGFyYWN0ZXI9IiYjMTU4OyIgc3RyaW5nPSIiLz4NCiAgICA8eHNsOm91dHB1dC1jaGFyYWN0ZXIgY2hhcmFjdGVyPSImIzE1OTsiIHN0cmluZz0iIi8+DQogIDwveHNsOmNoYXJhY3Rlci1tYXA+DQo8L3hzbDpzdHlsZXNoZWV0Pg0KDQoNCg==</cbc:EmbeddedDocumentBinaryObject>
    </cac:Attachment>
  </cac:AdditionalDocumentReference>
  <cac:AccountingSupplierParty>
    <cac:Party>
      <cbc:WebsiteURI>www.ncs.com.tr</cbc:WebsiteURI>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">444</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyIdentification>
        <cbc:ID schemeID="TICARETSICILNO">444</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyIdentification>
        <cbc:ID schemeID="MERSISNO">666</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>ncs</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>atatürk bulvarı</cbc:StreetName>
        <cbc:BuildingNumber>
        </cbc:BuildingNumber>
        <cbc:CitySubdivisionName>ÇANKAYA</cbc:CitySubdivisionName>
        <cbc:CityName>ANKARA</cbc:CityName>
        <cbc:PostalZone>
        </cbc:PostalZone>
        <cac:Country>
          <cbc:Name>Türkiye</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>333</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone>1111</cbc:Telephone>
        <cbc:Telefax>222</cbc:Telefax>
        <cbc:ElectronicMail>info@ncs.com.tr</cbc:ElectronicMail>
      </cac:Contact>
    </cac:Party>
  </cac:AccountingSupplierParty>
  <cac:AccountingCustomerParty>
    <cac:Party>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">6300063050</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>Adem Çalık</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>Adem Çalık adres</cbc:StreetName>
        <cbc:BuildingNumber>
        </cbc:BuildingNumber>
        <cbc:CitySubdivisionName>
        </cbc:CitySubdivisionName>
        <cbc:CityName>
        </cbc:CityName>
        <cbc:PostalZone>
        </cbc:PostalZone>
        <cac:Country>
          <cbc:Name>TÜRKİYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>MİTHATPAŞA</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:ElectronicMail>ADEM@NCS.COM.TR</cbc:ElectronicMail>
      </cac:Contact>
      <cac:Person>
        <cbc:FirstName>Adem Çalık</cbc:FirstName>
        <cbc:FamilyName>
        </cbc:FamilyName>
      </cac:Person>
    </cac:Party>
  </cac:AccountingCustomerParty>
  <cac:PaymentMeans>
    <cbc:PaymentMeansCode>ZZZ</cbc:PaymentMeansCode>
    <cac:PayeeFinancialAccount>
      <cbc:ID>
      </cbc:ID>
      <cbc:CurrencyCode>"TRY"</cbc:CurrencyCode>
      <cbc:PaymentNote>
      </cbc:PaymentNote>
    </cac:PayeeFinancialAccount>
  </cac:PaymentMeans>
  <cac:TaxTotal>
    <cbc:TaxAmount currencyID="TRY">8474.58</cbc:TaxAmount>
    <cac:TaxSubtotal>
      <cbc:TaxableAmount currencyID="TRY">8474.58</cbc:TaxableAmount>
      <cbc:TaxAmount currencyID="TRY">1525.42</cbc:TaxAmount>
      <cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
      <cbc:Percent>18</cbc:Percent>
      <cac:TaxCategory>
        <cac:TaxScheme>
          <cbc:Name>KDV</cbc:Name>
          <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
        </cac:TaxScheme>
      </cac:TaxCategory>
    </cac:TaxSubtotal>
  </cac:TaxTotal>
  <cac:LegalMonetaryTotal>
    <cbc:LineExtensionAmount currencyID="TRY">10000.00</cbc:LineExtensionAmount>
    <cbc:TaxExclusiveAmount currencyID="TRY">8474.58</cbc:TaxExclusiveAmount>
    <cbc:TaxInclusiveAmount currencyID="TRY">10000.00</cbc:TaxInclusiveAmount>
    <cbc:AllowanceTotalAmount currencyID="TRY">0.00</cbc:AllowanceTotalAmount>
    <cbc:PayableAmount currencyID="TRY">10000.00</cbc:PayableAmount>
  </cac:LegalMonetaryTotal>
  <cac:InvoiceLine>
    <cbc:ID>2</cbc:ID>
    <cbc:Note>
    </cbc:Note>
    <cbc:InvoicedQuantity unitCode="C62">1</cbc:InvoicedQuantity>
    <cbc:LineExtensionAmount currencyID="TRY">10000.00</cbc:LineExtensionAmount>
    <cac:TaxTotal>
      <cbc:TaxAmount currencyID="TRY">0.00</cbc:TaxAmount>
      <cac:TaxSubtotal>
        <cbc:TaxableAmount currencyID="TRY">10000.00</cbc:TaxableAmount>
        <cbc:TaxAmount currencyID="TRY">1525.42</cbc:TaxAmount>
        <cbc:Percent>18</cbc:Percent>
        <cac:TaxCategory>
          <cac:TaxScheme>
            <cbc:Name>KDV</cbc:Name>
            <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
          </cac:TaxScheme>
        </cac:TaxCategory>
      </cac:TaxSubtotal>
    </cac:TaxTotal>
    <cac:Item>
      <cbc:Description>
      </cbc:Description>
      <cbc:Name>aaaa</cbc:Name>
    </cac:Item>
    <cac:Price>
      <cbc:PriceAmount currencyID="TRY">10000.00</cbc:PriceAmount>
    </cac:Price>
  </cac:InvoiceLine>
</Invoice>