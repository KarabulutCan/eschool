@model ESCHOOL.ViewModels.AccountingViewModel
@{
    System.Globalization.CultureInfo.CurrentCulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    System.Globalization.CultureInfo.CurrentUICulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);

    var culture = System.Globalization.CultureInfo.CurrentCulture.ToString();
}
<!--#region head -->
<head>
    <style>
        html {
            font-size: 13px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
    <title></title>
    <link href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.common.min.css" rel="stylesheet" />
    <link rel="stylesheet" id="skin-css" href="@TempData["theme"]" />
    <link rel="stylesheet" id="skin-css" href="@TempData["themeMobile"]" />
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/kendo.all.min.js"></script>
    <script src="~/telerik/2021.2.616/js/jszip.min.js"></script>
    <script src="@Url.Content("~/telerik/2021.2.616/js//cultures/kendo.culture." + culture + ".min.js")"></script>
    <script src="@Url.Content("~/telerik/2021.2.616/js//messages/kendo.messages." + culture + ".min.js")"></script>

    <script type="text/javascript">
        kendo.culture("@culture");
    </script>
</head>
<!--#endregion -->
<body data-spy="scroll" data-target=".navbar">
    <form id="M500Accounting" asp-controller="M500Accounting" asp-action="ExportAccountingFiletoExcel" asp-route-id="@Model.UserID&0" enctype="multipart/form-data" method="post">
        <div class="demo-section k-content fixed-top wide">
            <div id="toolbarMenu"></div>
        </div>

        @*<br /><br /><br /><br /><br /><br /><br />*@

        <!--#region hidden -->
        @*Geri dönüşlerde null olmaması için*@
        <input type="hidden" asp-for="@Model.Period" />
        <input type="hidden" asp-for="@Model.UserID" />
        <input type="hidden" asp-for="@Model.SchoolID" />
        <input type="hidden" asp-for="@Model.VoucherTypeID" />
        <input type="hidden" asp-for="@TempData["studentID"]" id="studentID" />

        <br />
        <br />
        <br />

        <ul id="panelbarHelp" style="display: none;">
            <li>
                <span class="k-link">@ESCHOOL.Resources.Resource.Help</span>
                <div class="k-card-body" style="padding-left:15px;">
                    <p>@ESCHOOL.Resources.Resource.AccountingExcel1</p>
                    <p>@ESCHOOL.Resources.Resource.AccountingExcel2</p>
                    <p>@ESCHOOL.Resources.Resource.AccountingExcel3</p>
                    <p>@ESCHOOL.Resources.Resource.AccountingExcel4</p>
                    <br />
                </div>
                <style>
                    #panelbarHelp {
                        width: 100%;
                        /*     max-width: none;*/
                        margin: 0 auto;
                    }
                </style>

                <script>
                    $(document).ready(function() {
                        $("#panelbarHelp").kendoPanelBar({
                            animation: {
                                collapse: {
                                    duration: 500,
                                    effects: "fadeOut"
                                },
                                expand: {
                                    duration: 500,
                                    effects: "expandVertical fadeIn"
                                }
                            }
                        });
                    });
                </script>
            </li>
        </ul>
        <!--#endregion -->
        <div id="example">
            <input type="hidden" asp-for="@Model.SchoolID" />
            <input type="hidden" asp-for="@Model.Period" />

            <div class="form-horizontal k-content" style="border: thin solid rgb(120,120,120); padding-left:20px; padding-top:1px; padding-bottom:1px;">
                <div class="container-flued">
                    <div class="card-body">
                        <div>
                            <div lass="col col-md-8">
                                <div class="row">
                                    <div class="col col-md-2">
                                        <label class="control-label">@ESCHOOL.Resources.Resource.VoucherType</label>
                                    </div>
                                    <div class="col col-md-2">
                                        <input id="voucherTypeDropDown" style="width: 130px;" />
                                    </div>
                                    <div class="col col-md-2">
                                    </div>
                                </div>

                                <div class="row" style="padding-top:2px;">
                                    <div class="col col-md-2">
                                        <label class="control-label">@ESCHOOL.Resources.Resource.Date</label>
                                    </div>
                                    <div class="col col-md-2">
                                        <input asp-for="StartDate" type="date" id="transactiondate1" class="form-control" style="width: 130px;" />
                                    </div>
                                    <div class="col col-md-2">
                                        <input asp-for="EndDate" type="date" id="transactiondate2" class="form-control" style="width: 130px;" />
                                    </div>
                                </div>

                                <div class="row" style="padding-top:4px;">
                                    <div class="col col-md-2">
                                        <label class="control-label">@ESCHOOL.Resources.Resource.AccountCode</label>
                                    </div>
                                    <div class="col col-md-2">
                                        <input class="Accounting" asp-for="StartCode" id="startCode" style="width: 130px;" />
                                    </div>
                                    <div class="col col-md-2">
                                        <span><input class="Accounting" asp-for="EndCode" id="endCode" style="width: 130px;" /></span>
                                    </div>
                                </div>

                                <div class="row" style="padding-top:2px;">
                                    <div class="col col-md-2">
                                        <label class="control-label">@ESCHOOL.Resources.Resource.VoucherNo</label>
                                    </div>
                                    <div class="col col-md-2">
                                        <input asp-for="StartVoucherNo" id="startvoucherNo" type="number" class="k-textbox" min="1" style="width: 130px;" />
                                    </div>
                                    <div class="col col-md-2">
                                        <input asp-for="EndVoucherNo" id="endvoucherNo" type="number" class="k-textbox" min="1" style="width: 130px;" />
                                    </div>
                                    <div class="col col-md-2">
                                        <button type="button" id="okButton" onclick="okClick()" style="width:80px">@ESCHOOL.Resources.Resource.Start</button>
                                    </div>
                                    <script>
                                        $("#okButton").kendoButton({
                                            icon: "check",
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <div id="grid" style="width:1110px;"></div>
            <div class="form-horizontal k-content" style="padding-left: 15px; padding-right: 15px;  padding-bottom:20px; border: thin solid rgb(120,120,120);">
                <div id="gridDiv1" class="row">
                    <div style="width:40px;">
                    </div>
                    <div style="width:180px">
                    </div>
                    <div style="width:200px">
                    </div>
                    <div style="width:80px">
                    </div>
                    <div style="width:80px">
                    </div>
                    <div style="width:100px">
                    </div>

                    <div style="width: 190px;">
                        <label class="control-label" style="font-weight: bold; float: right; padding-right: 10px; "> @ESCHOOL.Resources.Resource.Total</label>
                    </div>
                    <div style="width: 112px;">
                        <input id="totalDebt" class="form-control" style="font-weight: bold; text-align:right;" readonly />
                    </div>
                    <div style="width:111px">
                        <input id="totalCredit" class="form-control" style="font-weight: bold; text-align:right;" readonly />
                    </div>
                </div>

                <div id="gridDiv2" class="row">
                    <div style="width:40px;">
                    </div>
                    <div style="width:180px">
                    </div>
                    <div style="width:200px">
                    </div>
                    <div style="width:80px">
                    </div>
                    <div style="width:80px">
                    </div>
                    <div style="width:100px">
                    </div>

                    <div style="width:190px">
                        <label class="control-label" style="font-weight: bold; float: right; padding-right: 10px;"> @ESCHOOL.Resources.Resource.BalanceAmount</label>
                    </div>
                    <div style="width:112px;">
                        <input id="balanceDebt" class="form-control" style="font-weight:bold; text-align:right;" readonly />
                    </div>
                    <div style="width:111px;">
                        <input id="balanceCredit" class="form-control" style="font-weight:bold; text-align:right;" readonly />

                    </div>
                    <!--#region style -->
                    <style>
                        #grid .k-grid-toolbar {
                            padding: .6em 1.3em .6em .4em;
                        }

                        #grid.k-grid tbody td {
                            white-space: nowrap;
                            text-overflow: ellipsis;
                            padding: 0;
                        }

                        #grid.k-grid tbody tr {
                            line-height: 62px;
                        }

                        .k-grid-content {
                            max-height: 540px;
                            padding: 0;
                        }

                        .category-label {
                            vertical-align: middle;
                            padding-right: .5em;
                        }

                        #category {
                            vertical-align: middle;
                        }

                        .refreshBtnContainer {
                            display: inline-block;
                        }

                        .toolbar {
                            float: left;
                        }
                    </style>
                </div>
                <!--#endregion -->
            </div>
        </div>
        <script>
            $(document).ready(function() {
                $("#voucherTypeDropDown").kendoDropDownList({
                    dataTextField: "categoryName",
                    dataValueField: "categoryID",
                    index: 0,
                    dataSource: {
                        transport: {
                            read: {
                                dataType: "json",
                                url: "/M500Accounting/AccountTypeCombo"
                            }
                        }
                    }
                });
            });
        </script>

    </form>

    <script>
        var dictionary =
        {
            'tr-TR': {
                select: 'Seç',
                selectbankName: 'Banka Seçimini Yapınız.',
                delete: "Bu Muhasebe Fişine Ait Kayıtlar Silinecek, Emin misiniz?",
                total: "Toplam",
                itemsfound: "kayıt bulundu",
                newVoucher: "Yeni Bir Fiş Numarası Verilecek, Emin misiniz?",
                voucherTransaction: "Bu Fiş İşlenecek, Emin misiniz?",
                subCategory: "Girilen Hesabın Alt Hesabı Var.",
                titleMsg: 'Kullanıcı Mesajı:',
                msgOk: 'Tamam',
                accountingCode: 'Muhasebe Kodu',
                accountingCodeName: 'Muhasebe Adı',
                voucherNo: "Fiş No",
                code: 'Kodu',
                processType: 'İşlem Tipi',
                taxNoOrId: 'Vergi No/TC.',
                no: 'No',
                date: 'Tarih',
                explanation: 'Açıklama',
                debt: 'Borç',
                credit: 'Alacak'
            },

            'en-US': {
                select: 'Select',
                selectbankName: 'Select the bank name.',
                delete: "Are you sure, All Records of this Accounting slip will be deleted?",
                total: "Total",
                itemsfound: "items found",
                newVoucher: "Are you sure? A New Receipt Number Will Be Given.",
                voucherTransaction: "Are you sure? This Receipt will be processed.",
                subCategory: "The account entered has a sub-account.",
                titleMsg: 'User message:',
                msgOk: 'OK',
                accountingCode: 'Accounting Code',
                accountingCodeName: 'Accounting Name',
                voucherNo: "Voucher No",
                code: 'Code',
                processType: 'Process Type',
                taxNoOrId: 'Tax No/ID',
                no: 'No',
                date: 'Date',
                explanation: 'Explanation',
                debt: 'Debt',
                credit: 'Credit'
            },
        }
        function getByCulture(culture, word) {
            return dictionary[culture][word]
        }
    </script>
    <!--#region toolbar -->
    <style>
        #logoId img {
            width: 60px;
        }
    </style>
    <script>
        $(document).ready(function() {
            $("#toolbarMenu").kendoToolBar({
                items: [
                    {
                        template: "<img src='../Upload/Images/Logo.png' class='user-image' style='width:60px;'/>",
                        overflow: "never",
                    },
                    { template: "<h4 style='padding-left:20px;'>@ESCHOOL.Resources.Resource.ExportAccountingFiletoExcel</h4>" },
                    { type: "spacer" },

                    { type: "button", id: "help", text: "@ESCHOOL.Resources.Resource.Help", icon: "help" },
                    { type: "separator" },

                    { type: "button", id: "exit", text: "@ESCHOOL.Resources.Resource.Exit", attributes: { style: "float: right; margin-top: .4em;" }, icon: "logout" },
                    { type: "separator" },
                ],

                click: function(e) {
                    if (e.id == "exit") {
                        if (e.id == "exit")
                            window.location.replace("/Home/index?userID=@Model.UserID");
                    }

                    if (e.id == "help") {
                        var myWindow = $("#panelbarHelp").show();
                        var panelBar = $("#panelbarHelp").data("kendoPanelBar");
                        panelBar.select(panelBar.element.children("li").eq(0));
                        panelBar._selected[0].style.display = 'block';
                        var item = panelBar.select();
                        panelBar.expand(item);
                    }
                }
            });
            if (@Model.StudentID == 0) $("#back").hide();
            if ("@Model.IsPermission" == 'False') permissionsControl();
        });
    </script>
    <!--#endregion -->

</body>
<div id="alert"></div>

<script>
    function permissionsControl() {
        msg = getByCulture('@culture', 'msgOk');
        showAlert(msg);
    };

    function showAlert(message) {
        msg = getByCulture('@culture', 'titleMsg');
        $("#alert").kendoAlert({
            title: msg,
            content: "<strong>@ESCHOOL.Resources.Resource.PermissionMsg</strong>",
            messages: {
                okText: message
            },
            actions: [{
                text: "#: messages.okText #",
                action: function(e) {
                    window.location.replace("/Home/index?userID=@Model.UserID");
                }
            }]
        }).data("kendoAlert").open();
    };
</script>
<script>
    <!--#region grid accounting-- >
    function okClick() {
        waitProgress();
        var voucherTypeID = document.getElementById('voucherTypeDropDown').value;
        var transactiondate1 = document.getElementById('transactiondate1').value;
        var date1 = $("#transactiondate1").data("kendoDatePicker").value();
        var transactiondate1 = kendo.toString(date1, "yyyy-MM-dd");
        var date2 = $("#transactiondate2").data("kendoDatePicker").value();
        var transactiondate2 = kendo.toString(date2, "yyyy-MM-dd");

        var startCode = $("#startCode").data("kendoMultiColumnComboBox").value();
        var endCode = $("#endCode").data("kendoMultiColumnComboBox").value();

        var startvoucherNo = document.getElementById('startvoucherNo').value;
        var endvoucherNo = document.getElementById('endvoucherNo').value;

        var grid = $("#grid").data("kendoGrid");
        grid.dataSource.options.transport.read.url = "/M500Accounting/AccountingExcelDataRead/" + "@Model.UserID" + "/" + voucherTypeID + "/" + transactiondate1 + "/" + transactiondate2 + "/" + startCode + "/" + endCode + "/" + startvoucherNo + "/" + endvoucherNo;
        grid.dataSource.read();
        grid.refresh();
        setTimeout(function () {
            waitProgressFalse();
        }, 3000);
    }
</script>

<script>
    function waitProgress() {
        $('#loader-pulsing').kendoLoader({ type: 'pulsing' });
        $('#loader-infinite-spinner').kendoLoader({ type: 'infinite-spinner' });
        $('#loader-converging-spinner').kendoLoader({ type: 'converging-spinner' });
    }

    function waitProgressFalse() {
        $('#loader-pulsing').kendoLoader({ visible: false });
        $('#loader-infinite-spinner').kendoLoader({ visible: false });
        $('#loader-converging-spinner').kendoLoader({ visible: false });
    }
</script>
<div class="vertical-center">
    <span id="loader-pulsing"></span>
    <span id="loader-infinite-spinner"></span>
    <span id="loader-converging-spinner"></span>
</div>
<style>
    .vertical-center {
        margin: 0;
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }

    form label {
        font-weight: bold;
        font-size: 12px;
    }

    .k-header {
        font-weight: bold !important;
        font-size: 12px;
    }

</style>

<script>
    record = 0;
    var voucherTypeID = 0;
    var transactiondate1 = "0";
    var transactiondate2 = "0";
    var startCode = "100";
    var endCode = "100";
    var startvoucherNo = 0;
    var endvoucherNo = 0;

    $(document).ready(function() {
        var crudServiceBaseUrl = "/M500Accounting/",
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: crudServiceBaseUrl + "M500Accounting/AccountingExcelDataRead/" + "@Model.UserID" + "/" + voucherTypeID + "/" + transactiondate1 + "/" + transactiondate2 + "/" + startCode + "/" + endCode + "/" + startvoucherNo + "/" + endvoucherNo,
                        dataType: "json"
                    },
                    parameterMap: function(options, operation) {
                        if (operation !== "read" && options.models) {
                            return { models: kendo.stringify(options.models) };
                        }
                    }
                },

                batch: true,
                sortable: true,
                resizable: true,
                schema: {
                    model: {
                        id: "accountingID",
                        fields: {
                            accountingID: { editable: false, type: "number" },
                            schoolID: { editable: false, type: "number" },
                            period: { editable: false, type: "string" },
                            voucherTypeID: { editable: true, type: "number" },
                            voucherNo: { editable: true, type: "number" },
                            accountDate: { editable: true, type: "date" },
                            accountCode: { type: "string" },
                            accountCodeName: { editable: true, type: "string" },
                            codeTypeName: { editable: true, type: "string", defaultValue: " ", validation: { required: false } },
                            processTypeName: { editable: true, type: "string", defaultValue: " ", validation: { required: false } },
                            taxNoOrId: { editable: true, type: "string" },
                            documentNumber: { editable: true, type: "string" },
                            documentDate: { editable: true, type: "date" },
                            explanation: { type: "string" },
                            debt: { editable: true, type: "number" },
                            credit: { editable: true, type: "number" },
                            sortOrder: { type: "number" },
                            isTransaction: { type: "boolean", defaultValue: false },

                            accountCode: {
                                accountCodeID: 0,
                                accountCode: 0,
                                accountCodeName: '',
                                isActive: true
                            },
                            parameter: {
                                categoryID: 0,
                                categorySubID: 0,
                                categoryName: '',
                                categoryLevel: '',
                                sortOrder: 0,
                                isActive: true,
                                isProtected: true,
                                nationalityCode: ''
                            }
                        },
                    },
                },
            });

        var first = 1;
        var grid = $("#grid").kendoGrid({
            dataSource: dataSource,
            navigatable: true,
            groupable: true,
            selectable: "multiple row",
            height: '450px',
            resizable: true,
            toolbar: ["search", "excel"],
            excelExport: function(e) {
                e.workbook.fileName = "ExcelAccounting-" + kendo.toString(new Date, "yyyy/MM/dd HH:mm") + ".xlsx";
            },
            columns: [
                { title: "#", template: "#= ++record #", width: 40 },
                //{ field: "accountCode", title: getByCulture('@culture', 'accountingCode'), width: "180px", editor: AccountCodeEditor, template: "#=accountCode#", footerTemplate: "#=count#" },
                { field: "voucherNo", title: getByCulture('@culture', 'voucherNo'), width: "55px", template: "#=voucherNo#" },
                { field: "accountCode", title: getByCulture('@culture', 'accountingCode'), width: "140px", template: "#=accountCode#" },
                { field: "accountCodeName", title: getByCulture('@culture', 'accountingCodeName'), width: "160px", template: "#=accountCodeName#" },
                { field: "codeTypeName", title: getByCulture('@culture', 'code'), width: "50px", editor: CodeTypeDropDown, template: "#=codeTypeName#" },
                { field: "processTypeName", title: getByCulture('@culture', 'processType'), width: "80px", editor: ProcessTypeDropDown, template: "#=processTypeName#" },
                { field: "taxNoOrId", title: getByCulture('@culture', 'taxNoOrId'), width: "80px", template: "#=taxNoOrId#" },
                { field: "documentNumber", title: getByCulture('@culture', 'no'), width: "50px", template: "#=documentNumber#" },
                { field: "documentDate", title: getByCulture('@culture', 'date'), width: "80px", format: "{0:dd.MM.yyyy}", template: '#= kendo.toString(kendo.parseDate(documentDate), "dd.MM.yyyy")#' },
                { field: "explanation", title: getByCulture('@culture', 'explanation'), width: "240px", template: "#=explanation#" },
                { field: "debt", title: getByCulture('@culture', 'debt'), width: "110px", template: "#if(debt == 0){#  #}else{# #=kendo.toString(debt,'n')# #}#", attributes: { style: "text-align:right" } },
                { field: "credit", title: getByCulture('@culture', 'credit'), width: "110px", template: "#if(credit == 0){#  #}else{# #=kendo.toString(credit,'n')# #}#", attributes: { style: "text-align:right" } },
            ],

            dataBinding: function() {
                record = 0;
                this.trigger('dataBound');
            },
            dataBound: function(e) {
                balanceCalculate(e);
            }
        });

        function CodeTypeDropDown(container, options) {
            $('<input required name="' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    optionLabel: { categoryID: 0, categoryName: " " },
                    autoBind: false,
                    /*      valuePrimitive: true,*/
                    dataTextField: "categoryName",
                    dataValueField: "categoryName",
                    index: 0,
                    dataSource: {
                        dataType: "json",
                        transport: {
                            read: "/M500Accounting/CodeTypeDataRead"
                        }
                    }
                });
        };

        function ProcessTypeDropDown(container, options) {
            $('<input required name="' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    //optionLabel: { categoryID: 0, categoryName: " " },
                    autoBind: false,
                    valuePrimitive: true,
                    dataTextField: "@Model.CategoryName",
                    dataValueField: "categoryName",
                    index: -1,
                    dataSource: {
                        dataType: "json",
                        transport: {
                            read: "/M500Accounting/ProcessTypeDataRead"
                        }
                    }
                });
        };
    });

    function balanceCalculate(e) {
        var debt = 0;
        var credit = 0;
        var debtBalance = 0;
        var creditBalance = 0;

        var $grid = $('#grid');
        var kendo = $grid.data().kendoGrid;
        var data = kendo.dataSource.data();

        for (var i = 0; i < data.length; i++) {
            debt += parseFloat(data[i].debt);
            credit += parseFloat(data[i].credit);
        }

        if (debt > credit) {
            debtBalance = debt - credit;
            creditBalance = 0;
        }
        else {
            creditBalance = credit - debt;
            debtBalance = 0;
        }
        document.getElementById('totalDebt').value = debt.toFixed(2);
        document.getElementById('totalCredit').value = credit.toFixed(2);

        document.getElementById('balanceDebt').value = debtBalance.toFixed(2);
        document.getElementById('balanceCredit').value = creditBalance.toFixed(2);

    }
</script>

<!--#region multicombobox  -->
<script>
    $(document).ready(function() {
        $(".Accounting").kendoMultiColumnComboBox({
            dataTextField: "accountCode",
            dataValueField: "accountCode",
            height: 400,
            columns: [
                { field: "accountCode", title: getByCulture('@culture', 'accountingCode'), width: 200 },
                { field: "accountCodeName", title: getByCulture('@culture', 'accountingCodeName'), width: 400 },
            ],

            footerTemplate: getByCulture('@culture', 'total') + ' #: instance.dataSource.total() # ' + getByCulture('@culture', 'itemsfound'),
            filter: "contains",
            filterFields: ["accountCode", "accountCodeName"],
            dataSource: {
                dataType: "json",
                transport: {
                    read: {
                        dataType: "json",
                        url: "/ListPanel/AccountCodesRead/" + "@Model.Period",
                    }
                }
            }
        });
    });
</script>
<!--#endregion -->

<script>
    $("#transactiondate1").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    $("#transactiondate2").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    var datepicker1 = $("#transactiondate1").data("kendoDatePicker");
    datepicker1.value(new Date().AddMonths(-1));
    var datepicker2 = $("#transactiondate2").data("kendoDatePicker");
    datepicker2.value(new Date());

</script>
<!--#endregion -->
<span id="popupNotification"></span>
<script>
    function showPopupNotification() {
        var popupNotification = $("#popupNotification").kendoNotification().data("kendoNotification");
        var d = new Date();
        popupNotification.show(kendo.toString(d, 'HH:MM:ss.') + kendo.toString(d.getMilliseconds(), "000"), "error");
    };
</script>
<script>
    window.history.replaceState('', '', window.location.pathname);
</script>
