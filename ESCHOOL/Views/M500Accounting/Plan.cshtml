@model ESCHOOL.ViewModels.StudentViewModel
@{
    System.Globalization.CultureInfo.CurrentCulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    System.Globalization.CultureInfo.CurrentUICulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    var culture = System.Globalization.CultureInfo.CurrentCulture.ToString();
}
<!--#region head -->
<head>
    <meta charset="utf-8" />
    <style>
        html {
            font-size: 13px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
    <title></title>
    <link href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.common.min.css" rel="stylesheet" />
    <link rel="stylesheet" id="skin-css" href="@TempData["theme"]" />
    <link rel="stylesheet" id="skin-css" href="@TempData["themeMobile"]" />
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/kendo.all.min.js"></script>
    <script src="~/telerik/2021.2.616/js/jszip.min.js"></script>
    <script src="@Url.Content("~/telerik/2021.2.616/js//cultures/kendo.culture." + culture + ".min.js")"></script>
    <script src="@Url.Content("~/telerik/2021.2.616/js//messages/kendo.messages." + culture + ".min.js")"></script>

    <script type="text/javascript">
        kendo.culture("@culture");
    </script>
</head>
<!--#endregion -->
<body data-spy="scroll" data-target=".navbar">
    <form id="M500Accounting" asp-controller="M500Accounting" asp-action="Plan" enctype="multipart/form-data" method="post">
        <div class="demo-section k-content fixed-top wide">
            <div id="toolbarMenu"></div>
        </div>
        <br />
        <br />
        <br />
        <br />
        <!--#region panelbarHelp -->
        <ul id="panelbarHelp" style="display: none;">
            <li>
                <span class="k-link">@ESCHOOL.Resources.Resource.Help</span>
                <div class="k-card-body" style="padding-left:15px;">
                    <p><strong>@ESCHOOL.Resources.Resource.AccountCodeMsg1</strong></p>
                    <p><strong>@ESCHOOL.Resources.Resource.AccountCodeMsg2</strong></p>
                    <p>@ESCHOOL.Resources.Resource.AccountCodeMsg3</p>
                    <p><strong>@ESCHOOL.Resources.Resource.AccountCodeMsg4</strong></p>
                    <p>@ESCHOOL.Resources.Resource.AccountCodeMsg5</p>
                    <p>@ESCHOOL.Resources.Resource.AccountCodeMsg6</p>
                    <p>@ESCHOOL.Resources.Resource.AccountCodeMsg7</p>
                    <p>@ESCHOOL.Resources.Resource.AccountCodeMsg8</p>
                    <p>@ESCHOOL.Resources.Resource.AccountCodeMsg9</p>
                    <p>@ESCHOOL.Resources.Resource.AccountCodeMsg10</p>
                    <br />
                </div>
                <style>
                    #panelbarHelp {
                        width: 100%;
                        /*     max-width: none;*/
                        margin: 0 auto;
                    }
                </style>

                <script>
                    $(document).ready(function() {
                        $("#panelbarHelp").kendoPanelBar({
                            animation: {
                                collapse: {
                                    duration: 500,
                                    effects: "fadeOut"
                                },
                                expand: {
                                    duration: 500,
                                    effects: "expandVertical fadeIn"
                                }
                            }
                        });
                    });
                </script>
            </li>
        </ul>
        <!--#endregion -->

        <div id="example">
            <div id="grid"></div>
            <!--#region style -->
            <style>
                #grid .k-grid-toolbar {
                    padding: .6em 1.3em .6em .4em;
                }

                .k-grid-content {
                    max-height: 720px;
                    padding: 0;
                }

                form label {
                    font-weight: bold;
                    font-size: 12px;
                }

                .k-header {
                    font-weight: bold !important;
                    font-size: 12px;
                }

                .category-label {
                    vertical-align: middle;
                    padding-right: .5em;
                }

                #category {
                    vertical-align: middle;
                }

                .refreshBtnContainer {
                    display: inline-block;
                }

                .toolbar {
                    float: left;
                }
            </style>
            <!--#endregion -->
        </div>
    </form>
</body>

<!--#region toolbar -->
<style>
    #logoId img {
        width: 60px;
    }
</style>
<script>
    $(document).ready(function() {
        $("#toolbarMenu").kendoToolBar({
            items: [
                {
                    template: "<img src='../Upload/Images/Logo.png' class='user-image' style='width:60px;'/>",
                    overflow: "never",
                },
                { template: "<h4 style='padding-left:20px;'>@ESCHOOL.Resources.Resource.AccountPlanRecord</h4>" },
                { type: "spacer" },

                { type: "button", id: "planned", text: "@ESCHOOL.Resources.Resource.AccountPlanList", icon: "file-txt" },
                { type: "separator" },

                { type: "button", id: "help", text: "@ESCHOOL.Resources.Resource.Help", icon: "help" },
                { type: "separator" },

                { type: "button", id: "back", text: "@ESCHOOL.Resources.Resource.Back", attributes: { style: "float: right" }, icon: "rewind" },
                { type: "separator" },

                { type: "button", id: "exit", text: "@ESCHOOL.Resources.Resource.Exit", attributes: { style: "float: right; margin-top: .4em;" }, icon: "logout" },
                { type: "separator" },
            ],

            click: function(e) {
                if (e.id == "exit" || e.id == "back") {
                    if (e.id == "exit")
                        window.location.replace("/Home/index?UserID=@Model.UserID");
                    else
                        if (@Model.ViewModelID == 999999)
                            window.location.replace("/M500Accounting/index?userID=@Model.UserID" + "&studentID=" + "@Model.StudentID");
                        else
                            window.location.replace("/Home/index?UserID=@Model.UserID");
                }

                if (e.id == "planned")
                    window.location.replace("/ListPanel/list504?userID=@Model.UserID&msg=0&exitID=3");

                if (e.id == "help") {
                    var myWindow = $("#panelbarHelp").show();
                    var panelBar = $("#panelbarHelp").data("kendoPanelBar");
                    panelBar.select(panelBar.element.children("li").eq(0));
                    panelBar._selected[0].style.display = 'block';
                    var item = panelBar.select();
                    panelBar.expand(item);
                }
            }
        });
        if (@Model.ViewModelID == 0) $("#back").hide();
        if ("@Model.IsPermission" == 'False') permissionsControl();
    });
</script>
<!--#endregion -->

<div id="alert"></div>
<script>
    function permissionsControl() {
        msg = getByCulture('@culture', 'msgOk');
        showAlert(msg);
    };

    function showAlert(message) {
        msg = getByCulture('@culture', 'titleMsg');
        $("#alert").kendoAlert({
            title: msg,
            content: "<strong>@ESCHOOL.Resources.Resource.PermissionMsg</strong>",
            messages: {
                okText: message
            },
            actions: [{
                text: "#: messages.okText #",
                action: function(e) {
                    window.location.replace("/Home/index?userID=@Model.UserID");
                }
            }]
        }).data("kendoAlert").open();
    };
</script>

<!--#region grid  -->
<script>
    record = 0;
    $(document).ready(function() {
        var crudServiceBaseUrl = "/M500Accounting/",
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: crudServiceBaseUrl + "PlanDataRead/" + "@Model.Period",
                        dataType: "json"
                    },
                    update: {
                        url: function(options) {
                            var url = crudServiceBaseUrl + "PlanDataUpdate/" + options.models[0].id;
                            return url;
                        },
                        complete: function(e) {
                            $("#grid").data("kendoGrid").dataSource.read();
                            showPopupNotification();
                        },
                        type: "post",
                        dataType: "json",
                    },

                    destroy: {
                        url: function(options) {
                            var url = crudServiceBaseUrl + "PlanDataDelete/" + options.models[0].id;
                            return url;
                        },
                        type: "post",
                        dataType: "json",
                        complete: function(e) {
                            showPopupNotification();
                        },
                    },

                    create: {
                        url: function(options) {
                            var url = crudServiceBaseUrl + "PlanDataCreate/" + options.models[0].id;
                            return url;
                        },
                        type: "post",
                        dataType: "json",
                        complete: function(e) {
                            showPopupNotification();
                        },
                    },

                    parameterMap: function(options, operation) {
                        if (operation !== "read" && options.models) {
                            return { models: kendo.stringify(options.models) };
                        }
                    }
                },

                change: function(e) {
                    if (e.action == "add") {
                        var newItem = e.items[0];
                        if (this.filter() != undefined) {
                            var filter = this.filter().filters;
                            var i = filter.length;
                            while (i--) {
                                filterValue = filter[i].value;
                                filterField = filter[i].field;
                                switch (filterField) {
                                    case "accountCodeName":
                                        newItem.set("accountCodeName", filterValue);
                                        break;
                                    default:
                                        newItem[filterField] = filterValue;
                                }
                            }
                        }
                    }
                },

                batch: true,
            
                sortable: true,

                schema: {
                    model: {
                        id: "accountCodeID",
                        fields: {
                            accountCodeID: { editable: false, type: "number" },
                            period: { editable: true, type: "string" },
                            accountCode: { validation: { required: true } },
                            accountCodeName: { validation: { required: true } },
                            isCurrentCard: { type: "boolean", defaultValue: false },
                            isActive: { type: "boolean", defaultValue: true },
                        }
                    },
                }
            });

        var first = 1;
        var grid = $("#grid").kendoGrid({
            dataSource: dataSource,
            ajax: true,
            navigatable: true,
            groupable: true,
            resizable: true,
            height: '680px',
            selectable: "multiple row",
            toolbar: [{
                template: '<divclass="toolbar"><label class="periodcombo-label" for="periodcombo">@ESCHOOL.Resources.Resource.Period1&emsp;</label> <input type="select" id="periodcombo" style="width: 150px" /></div >',
                className: "k-grid-custom",
                imageClass: "k-add"
            }, "create", "cancel", "search","excel"],
            excelExport: function(e) {
                e.workbook.fileName = "ExcelAccountPlan-" + kendo.toString(new Date, "yyyy/MM/dd HH:mm") + ".xlsx";
            },
            columns: [
                { title: "#", template: "#= ++record #", width: 50 },

                { field: "accountCode", title: getByCulture('@culture', 'accountCode'), width: "280px", template: "#=accountCode#" },
                { field: "accountCodeName", title: getByCulture('@culture', 'accountCodeName'), width: "450px", template: "#=accountCodeName#" },
                { field: "isCurrentCard", title: getByCulture('@culture', 'currentCard'), width: "70px", editor: customBoolEditor1, template: "<input  #if (isCurrentCard) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },
                { field: "isActive", title: getByCulture('@culture', 'status'), width: "70px", editor: customBoolEditor2, template: "<input  #if (isActive) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },
                { command: [{ text: " ", name: "edit" }, { text: " ", name: "destroy" }], title: "&nbsp;" },
            ],
            dataBinding: function() {
                record = 0;
            },
            editable: "inline",

            edit: function(e) {
                var grid = $('#grid').data('kendoGrid');

                var items = e.sender.items();
                items.each(function(index) {
                    var dataItem = grid.dataItem('tr.k-grid-edit-row');
                    var dropdownlist = $("#periodcombo").data("kendoDropDownList")
                    dataItem.set("period", dropdownlist.text());
                });
            }

        });

        var dropDown = grid.find("#periodcombo").kendoDropDownList({
            dataTextField: "categoryName",
            dataValueField: "categoryID",
            optionLabel: "@Model.Period",
            index: 0,
            dataSource: {
                type: "json",
                severFiltering: true,
                transport: {
                    read: {
                        url: "/M500Accounting/PeriodDataRead",
                        dataType: "json"
                    },
                }
            },

            change: function() {
                var value = this.value();
                var d = new Date();
                var d1 = d.getFullYear();
                var d2 = d1 + 1;
                var period1 = d1 + "-" + d2;
                var period2 = this.text();
                if (first == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/M500Accounting/PlanDataRead/' + this.text(),
                        dataType: "json",
                        traditional: true,
                        success: function(result) {
                            var grid = $("#grid").data("kendoGrid");
                            var dataSource = new kendo.data.DataSource({ data: result });
                            grid.setDataSource(dataSource);
                        }
                    });
                }

                first = 0;
            },

        }).data("kendoDropDownList");
        dropDown.bind("dataBound", function() {
            this.trigger("change");
        });

        function customBoolEditor1(container, options) {
            $('<input class="k-checkbox" type="checkbox" name="isCurrentCard" data-type="boolean" data-bind="checked:isCurrentCard">').appendTo(container);
        };
        function customBoolEditor2(container, options) {
            $('<input class="k-checkbox" type="checkbox" name="isActive" data-type="boolean" data-bind="checked:isActive">').appendTo(container);
        };
    });
</script>
<!--#endregion -->
<span id="popupNotification"></span>
<script>
    function showPopupNotification() {
        var popupNotification = $("#popupNotification").kendoNotification().data("kendoNotification");
        var d = new Date();
        popupNotification.show(kendo.toString(d, 'HH:MM:ss.') + kendo.toString(d.getMilliseconds(), "000"), "error");
    };
</script>

<script>
    var dictionary =
    {
        'tr-TR': {
            titleMsg: 'Kullanıcı Mesajı:',
            msgOk: 'Tamam',
            accountCode: 'Muhasebe Kodu',
            accountCodeName: 'Hesap Adı',
            currentCard: 'Cari Kart',
            status: 'Durumu',
        },

        'en-US': {
            titleMsg: 'User message:',
            msgOk: 'OK',
            accountCode: 'Account Code',
            accountCodeName: 'Account Code Name',
            currentCard: 'Current Card',
            status: 'Status',
        },
    }
    function getByCulture(culture, word) {
        return dictionary[culture][word]
    }
</script>
<script>
    window.history.replaceState('', '', window.location.pathname);
</script>