@model ESCHOOL.ViewModels.StudentViewModel
@{
    System.Globalization.CultureInfo.CurrentCulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    System.Globalization.CultureInfo.CurrentUICulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    var culture = System.Globalization.CultureInfo.CurrentCulture.ToString();
}
@addTagHelper *, Kendo.Mvc

@{
    var messages = new Dictionary<string, string>() { { "custom", "Please choose another Start Time." } };
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
}
<!--#region head -->
<html>
<head>
    <style>
        html {
            font-size: 13px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
    <title></title>
    <link href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.common.min.css" rel="stylesheet" />
    <link rel="stylesheet" id="skin-css" href="@TempData["theme"]" />
    <link rel="stylesheet" id="skin-css" href="@TempData["themeMobile"]" />
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/kendo.all.min.js"></script>

    <script src="@Url.Content("~/telerik/2021.2.616/js//cultures/kendo.culture." + culture + ".min.js")"></script>
    <script src="@Url.Content("~/telerik/2021.2.616/js//messages/kendo.messages." + culture + ".min.js")"></script>

    <script type="text/javascript">
        kendo.culture("@culture");
    </script>
</head>
<!--#endregion -->
<body data-spy="scroll" data-target=".navbar">
    <br />
    @if (ViewBag.IsSuccess == true)
    {
        <br />
        <br />
        <br />
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@ESCHOOL.Resources.Resource.Warning</strong>@ESCHOOL.Resources.Resource.ValidationError<br />
            <a asp-contoller="M400Invoice" asp-action="InvoicePlan" asp-route-id="@Model.UserID&@Model.StudentID">@ESCHOOL.Resources.Resource.ClickToContinue</a>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    @if (@Model.IsSuccess == true)
    {
        <br />
        <br />
        <br />
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@ESCHOOL.Resources.Resource.Warning</strong>@ESCHOOL.Resources.Resource.ValidationError8<br />
            <a href="/M110SchoolInfo/index?@Model.UserID">@ESCHOOL.Resources.Resource.ClickToContinue</a>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <!--#region toolbar -->
    <style>
        #logoId img {
            width: 60px;
        }
    </style>
    <script>
        $(document).ready(function () {
            $("#toolbarMenu").kendoToolBar({
                items: [
                    {
                        template: "<img src='../Upload/Images/Logo.png' class='user-image' style='width:60px;'/>",
                        overflow: "never",
                    },
                    { template: "<h4 style='padding-left:20px;'>@ESCHOOL.Resources.Resource.InvoiceEntryProcesses</h4>" },
                    { type: "spacer" },

                    { type: "button", id: "result", text: "@ESCHOOL.Resources.Resource.TransactionResult", icon: "spell-checker" },
                    { type: "separator" },

                    { type: "button", id: "help", text: "@ESCHOOL.Resources.Resource.Help", icon: "help" },
                    { type: "separator" },

                    { type: "button", id: "back", text: "@ESCHOOL.Resources.Resource.Back", attributes: { style: "float: right" }, icon: "rewind" },
                    { type: "separator" },

                    { type: "button", id: "exit", text: "@ESCHOOL.Resources.Resource.Exit", attributes: { style: "float: right; margin-top: .4em;" }, icon: "logout" },
                    { type: "separator" },
                ],

                click: function (e) {
                    if (e.id == "exit" || e.id == "back") {
                        if (e.id == "exit")
                            window.location.replace("/Home/index?userID=" + "@Model.UserID");
                        else
                            window.location.replace("/M210Student/AddOrEditStudent?studentID=" + @Model.StudentID + "&userID=@Model.UserID");
                    }

                    if (e.id == "result") {
                        div1EInvoiceShow();
                    }

                    if (e.id == "help") {
                        var myWindow = $("#panelbarHelp").show();
                        var panelBar = $("#panelbarHelp").data("kendoPanelBar");
                        panelBar.select(panelBar.element.children("li").eq(0));
                        panelBar._selected[0].style.display = 'block';
                        var item = panelBar.select();
                        panelBar.expand(item);
                    }
                }
            });
            if (@Model.StudentID == 0) $("#back").hide();
            if ("@Model.IsPermission" == 'False') permissionsControl();
        });
    </script>

    <script>
        function div1EInvoiceClose() {
            $("#div1EInvoiceResult").hide(500);
        };

        function div1EInvoiceShow() {
            $("#div1EInvoiceResult").show(500);

            var grid = $("#gridResults").data("kendoGrid");
            grid.dataSource.options.transport.read.url = "/M400Invoice/GridResultDataRead/" + "@Model.UserID";
            grid.dataSource.read();
            grid.refresh();
        };
    </script>

    <div id="alert"></div>
    <script>
        function permissionsControl() {
            msg = getByCulture('@culture', 'msgOk');
            showAlert(msg);
        };

        function showAlert(message) {
            msg = getByCulture('@culture', 'titleMsg');
            $("#alert").kendoAlert({
                title: msg,
                content: "<strong>@ESCHOOL.Resources.Resource.PermissionMsg</strong>",
                messages: {
                    okText: message
                },
                actions: [{
                    text: "#: messages.okText #",
                    action: function (e) {
                        window.location.replace("/Home/index?userID=@Model.UserID");
                    }
                }]
            }).data("kendoAlert").open();
        };
    </script>

    <!--#endregion -->

    <form id="M400Invoice" asp-controller="M400Invoice" asp-action="InvoicePlan" asp-route-id="@Model.UserID&@Model.StudentID" enctype="multipart/form-data" method="post">
        <div class="demo-section k-content fixed-top wide">
            <div id="toolbarMenu"></div>
        </div>
        <br />
        <script id="template" type="text/x-kendo-template">
            <span class="k-textbox k-grid-search k-display-flex"  style="width:50%;">
                <input autocomplete="off" placeholder=@ESCHOOL.Resources.Resource.Search class="k-input">
                <span class="k-input-icon">
                    <span class="k-icon k-i-search" style="float:right"></span>
                </span>
            </span>

            <div class="toolbar" style="float:left"><label  for="paymentDropDown"></label> <input type="select" id="paymentDropDown" style="width: 150px" /></div >
        </script>

        @*  <br /><br /><br /><br /><br /><br /><br />*@

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <!--#region hidden -->
        @*Geri dönüşlerde null olmaması için*@
        <input type="hidden" asp-for="@Model.Student.StudentID" />
        <input type="hidden" asp-for="@Model.StudentID" />
        <input type="hidden" asp-for="@Model.UserID" />
        <input type="hidden" asp-for="@Model.Period" />
        <input type="hidden" asp-for="@Model.Student.SchoolID" />
        <input type="hidden" asp-for="@Model.SchoolID" />
        <input type="hidden" asp-for="@Model.Student.SiblingID" />
        <input type="hidden" asp-for="@Model.PSerialNumber.PSerialNumberID" />

        <input type="hidden" asp-for="@TempData["studentID"]" id="studentID" />

        <input type="hidden" id="invoiceTaxNumberID" />
        <input type="hidden" id="installmentID" />
        <input type="hidden" id="total" />
        <input type="hidden" id="maxTotal" />

        <input type="hidden" id="resultOnOff" value="false" />

        <!--#endregion -->
        <br /> <br />
        <!--#region panelbarHelp -->
        <ul id="panelbarHelp" style="display: none;">
            <li>
                <span class="k-link">@ESCHOOL.Resources.Resource.Help</span>
                <div class="k-card-body" style="padding-left:15px;">
                    <p><strong>@ESCHOOL.Resources.Resource.CollectionMsg</strong></p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg100</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg101</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg102</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg103</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg104</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg105</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg106</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg107</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg108</p>
                    <br />
                </div>
                <style>
                    #panelbarHelp {
                        width: 100%;
                        margin: 0 auto;
                    }
                </style>

                <script>
                    $(document).ready(function () {
                        $("#panelbarHelp").kendoPanelBar({
                            animation: {
                                collapse: {
                                    duration: 500,
                                    effects: "fadeOut"
                                },
                                expand: {
                                    duration: 500,
                                    effects: "expandVertical fadeIn"
                                }
                            }
                        });
                    });
                </script>
            </li>
        </ul>

        <div id="div1EInvoiceResult" class="row" style="display: none;">
            <div>
                <div class="row">
                    <span class="k-card-action"><span class="k-button k-flat k-primary" id="resuldCloseid" style="height: 30px; width: 80px" onclick="div1EInvoiceClose()">@ESCHOOL.Resources.Resource.Close</span></span>
                </div>
                <script>
                    $(document).ready(function () {
                        $("#resuldCloseid").kendoButton({
                            icon: "close",
                        });
                    });
                </script>

                <div id="gridResults" style="max-width:1140px; padding:5px;"></div>
            </div>
            <h5 class="ra-well-title card-header top-left" style="padding-top: 2px; padding-bottom:2px;"> <kbd>  @ESCHOOL.Resources.Resource.TransactionResult</kbd></h5>
        </div>

        <!--#endregion -->
        <div class="row" style="border: thin solid rgb(120,120,120); padding-top:2px; padding-bottom:15px;">
            <section class="col order-1 col-md-5">
                <h5 class="ra-well-title card-header top-left" style="padding-top: 2px; padding-bottom:2px;"> <kbd>  @ESCHOOL.Resources.Resource.Students</kbd></h5>
                <div>
                    <div id="gridStudents"></div>
                </div>
                <style>
                    #gridStudents td {
                        padding: 8px;
                    }
                </style>

                <div class="row leftAlign" style="float: left; padding-left: 15px; height:20px; padding-top: 2px; padding-bottom:2px;">
                    <p>
                        <button type="button" id="newid" style="width:100px;" onclick="newInvoicePlanShow()">@ESCHOOL.Resources.Resource.NewPlan</button>
                    </p>
                    <p>
                        <button type="button" id="closeid1" style="width:100px; display: none;" onclick="newInvoicePlanClose()">@ESCHOOL.Resources.Resource.Close</button>
                    </p>
                    <p>
                        <button type="button" id="detailid" style="width:100px;" onclick="invoiceDetailShow()">@ESCHOOL.Resources.Resource.Detail</button>
                    </p>
                    <p>
                        <button type="button" id="closeid2" style="width:100px; display: none;" onclick="invoiceDetailShowClose()">@ESCHOOL.Resources.Resource.Close</button>
                    </p>
                    <p>
                        <button type="button" id="calculator" onclick="window.open('Calculator:///', '_blank', 'noreferrer')">@ESCHOOL.Resources.Resource.Calculator</button>
                    </p>
                </div>
                <script>
                    $(document).ready(function () {
                        $("#newid").kendoButton({
                            icon: "plus"
                        });
                        $("#closeid2").kendoButton({
                            icon: "close",
                        });

                        $("#detailid").kendoButton({
                            icon: "detail-section"
                        });
                        $("#calculator").kendoButton({
                            icon: "calculator"
                        });
                    });
                </script>
            </section>

            <div class="col order-2 col-md-2 ra-well-title card-header k-content">
                <div class="col" id="center">
                    <div id="wrap" class="row" style="height:8rem; width: 8rem; position:center">
                        <div class="card">
                            <img id="imgpreviewStudent" name="imgStudent" src="@("~/Upload/Students/default.png")" asp-append-version="true" class="img-fluid img-thumbnail" />
                        </div>
                    </div>
                </div>
                <hr class="space-1" />
                <div>
                    <ul id="fieldlist">
                        <li>
                            <label>@ESCHOOL.Resources.Resource.StudentName</label>
                            <input id="name" style="text-align: center" disabled />
                        </li>
                        <li>
                            <label>@ESCHOOL.Resources.Resource.RegistrationStatus</label>
                            <input id="statuCategory" style="text-align: center" disabled />
                        </li>
                        <li>
                            <input id="registrationTypeCategory" style="text-align: center" disabled />
                        </li>
                        <li>
                            <input id="dateOfRegistration" style="text-align: center" disabled />
                        </li>

                        <li>
                            <label>@ESCHOOL.Resources.Resource.IssuedInvoice</label>
                            <input id="cutInvoiceId" style="text-align: center" disabled />
                        </li>
                        <li>
                            <label>@ESCHOOL.Resources.Resource.UnissuedInvoice</label>
                            <input id="uncutInvoiceId" style="text-align: center" disabled />
                        </li>
                    </ul>
                </div>
            </div>
            <section class="col order-3 col-md-5">
                <h5 class="ra-well-title card-header top-left" style="padding-top:2px; padding-bottom:2px;"> <kbd>@ESCHOOL.Resources.Resource.Fees</kbd></h5>
                <div id="gridFees"></div>

                <h5 class="ra-well-title card-header top-left" style="padding-top: 2px; padding-bottom: 2px;"> <kbd>@ESCHOOL.Resources.Resource.Installments</kbd></h5>
                <div id="gridInstallments"></div>

                <div class="row" style="float:right; margin-right:15px; height:20px; padding-top: 2px;">
                    <div class="row rightAlign">
                        <p>
                            <button type="button" id="unplannedid" style="width:100px;" onclick="gridunplanned()">@ESCHOOL.Resources.Resource.Unplanned</button>
                        </p>
                        <p>
                            <button type="button" id="unplanedcloseid" style="width:100px; display: none;" onclick="buttonHide()">@ESCHOOL.Resources.Resource.Close</button>
                        </p>
                        <p>
                            <button type="button" id="invoiceid" style="width: 100px;" onclick="gridInvoiceShow()">@ESCHOOL.Resources.Resource.Invoice</button>
                        </p>
                    </div>

                    <script>
                        $(document).ready(function () {
                            $("#plannedid").kendoButton({
                                icon: "track-changes-accept"
                            });
                            $("#unplannedid").kendoButton({
                                icon: "track-changes-reject"
                            });
                            $("#unplanedcloseid").kendoButton({
                                icon: "close"
                            });
                            $("#invoiceid").kendoButton({
                                icon: "file-data"
                            });
                        });
                    </script>
                </div>
            </section>
        </div>

        <hr id="div1Hr" style="display: none;" />
        <div id="div1" class="form-horizontal k-content" style="display: none; border: thin solid rgb(120,120,120); padding-top:10px; padding-bottom:5px;">
            <div class="row col-md-12">
                <div class="col col-md-2" id="invoiceDate">
                    <label class="control-label">@ESCHOOL.Resources.Resource.InvoiceStartDate</label>
                    <div class="text-section k-content">
                        <input type="date" id="transactiondate" class="form-control" style="width: 130px;" />
                    </div>
                </div>

                <div class="col col-md-1">
                </div>
                <div class="col col-md-1">
                    <label class="control-label">@ESCHOOL.Resources.Resource.NumberOfInvoices</label>
                    <div class="text-section k-content">
                        <input asp-for="SchoolInfo.DefaultInstallment" id="count" class="k-textbox" type="number" min="1" style="width: 60px;" />
                    </div>
                </div>

                <div class="col col-md-1">
                    <label for="detailedId" class="control-label">@ESCHOOL.Resources.Resource.DetailedInvoice</label>
                    <input id="detailedId" type='checkbox' class="k-checkbox" checked />
                </div>

                <div class="col col-md-1">
                    <label for="discountId" class="control-label">@ESCHOOL.Resources.Resource.ShowDiscount</label>
                    <input id="discountId" type='checkbox' class="k-checkbox" />
                </div>

                <div class="col col-md-1">
                </div>

                <div class="col col-md-1">
                    <label class="control-label">@ESCHOOL.Resources.Resource.SelectedStudent</label>
                    <input id="selectStudentId" type='checkbox' class="k-checkbox" checked />
                </div>
                <div class="col col-md-1">
                </div>

                &nbsp;
                <div class="col col-md-1">
                    <div class="row rightAlign">
                        <p>
                            <button type="button" id="okButton" style="height: 30px; width: 90px" onclick="div1Button()">@ESCHOOL.Resources.Resource.Okey</button>
                        </p>
                    </div>
                    <div class="row rightAlign">
                        <span class="k-card-action"><span class="k-button k-flat k-primary" id="closeid1" style="height: 30px;" onclick="newInvoicePlanClose()">@ESCHOOL.Resources.Resource.Close</span></span>
                    </div>

                    <script>
                        $(document).ready(function () {
                            $("#okButton").kendoButton({
                                icon: "check",
                            });
                            $("#closeid1").kendoButton({
                                icon: "close",
                            });
                        });
                    </script>
                </div>
                &nbsp
                <div class="col col-md-1">
                    <div class="row rightAlign">
                        <p>
                            <button type="button" id="startButton" style="height: 30px; width: 90px;" disabled>@ESCHOOL.Resources.Resource.Start</button>
                        </p>
                    </div>
                    <script>
                        $(document).ready(function () {
                            $("#startButton").kendoButton({
                                icon: "gears",
                            });
                        });
                    </script>
                </div>
            </div>
            <hr />
            <div class="row col-md-12">
                <div class="row col-md-7">
                    <div>
                        <div id="gridPlanFees"></div>
                    </div>
                    &nbsp;
                    <div>
                        <div id="gridPlanDates"></div>
                    </div>
                </div>
                <div class="k-card-body col-md-5">
                    <p><strong>@ESCHOOL.Resources.Resource.CollectionMsg</strong></p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg1</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg2</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg3</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg4</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg5</p>
                    <p>@ESCHOOL.Resources.Resource.InvoiceMsg6</p>
                </div>
            </div>
        </div>

        @*   <hr id="div2Hr" style="display: none;" />*@
        <div class="row" style="padding-left:14px;padding-right:14px;">
            <div id="div2" style="display: none; padding-bottom:2px;">
                <h5 class="ra-well-title card-header top-left" style="padding-bottom:2px;">
                    <kbd>@ESCHOOL.Resources.Resource.StudentInvoiceDetails</kbd>
                    <kbd style="float: right;">@ESCHOOL.Resources.Resource.ProcessDate:&nbsp;@Model.Period&nbsp;</kbd>
                </h5>
                <div class="row" id="InInstallment" style="padding-top: 5px;">
                    <div id="gridDetail" style="padding:5px;"></div>
                </div>
            </div>
        </div>
        <!--#region style -->
        <style>
            #middle-pane {
                color: #000;
                background-color: #ccc;
            }

            #bottom-pane {
                color: #000;
                background-color: #aaa;
            }

            #left-pane {
                color: #000;
                background-color: #eee;
                padding: 0 0;
            }

            #right-pane {
                color: #000;
                background-color: #eee;
                padding: 0 0;
            }

            .pane-content {
                padding: 1px 1px;
            }

            .k-grid td {
                white-space: nowrap;
                text-overflow: ellipsis;
                padding: 1px;
            }

            #grid .k-grid-toolbar {
                padding: .6em 1.3em .6em .4em;
            }

            #gridFees .k-grid-content {
                height: 130px;
                max-height: 130px;
            }

            #gridInstallments .k-grid-content {
                height: 140px;
                max-height: 140px;
            }

            #gridStudents .k-grid-content {
                height: 270px;
                max-height: 270px;
                padding: 0;
            }

            /*Settings gridInstallment special color*/
            #gridInvoiceUnplan > table > tbody > tr:hover,
            #gridInvoiceUnplan .k-grid-content > table > tbody > tr:hover {
                color: black;
            }

            /*GRID header WRAP*/
            .gridIP .k-grid-header .k-header .k-link {
                height: auto;
            }

            .gridIP .k-grid-header .k-header {
                white-space: normal;
            }

            form label {
                font-weight: bold;
                font-size: 12px;
            }

            .k-header {
                font-weight: bold !important;
                font-size: 12px;
            }

            .critical {
                background-color: #fdd;
                color: black;
            }

            .warning {
                background-color: #fda;
                color: black;
            }

            .ok {
                background-color: #ced;
                color: black;
            }

            .critical2 {
                color: #fdd;
            }

            .warning2 {
                color: #fda;
            }

            .ok2 {
                color: #ced;
            }

            .k-upload-status {
                display: none;
            }

            .ui-datepicker.ui-datepicker-inline {
                width: 100% !important;
            }

            div.border {
                border-style: solid;
                border-color: coral;
            }

            #fieldlist {
                margin: 0 0 -2em;
                padding: 0;
            }

                #fieldlist li {
                    list-style: none;
                    padding-bottom: 0.5em;
                }

            hr.space-1 {
                background: transparent;
                color: transparent;
                margin: 0;
                border-style: none;
                height: 0.5vw;
            }
        </style>
        <!--#endregion -->
        <div class="row" style="padding-top:5px;">
            <div id="InvoiceUnplan" class="form-horizontal k-content" style="display: none;">
                <h5 class="ra-well-title card-header top-left" style="padding-top: 12px; padding-bottom:2px;">
                    <kbd>@ESCHOOL.Resources.Resource.UnplannedInvoiceEntry</kbd>
                    <kbd style="float: right;">@ESCHOOL.Resources.Resource.ProcessDate:&nbsp;@Model.Period&nbsp;</kbd>
                </h5>

                <div class="row" style="float: right;padding-top: 15px;padding-bottom: 15px; padding-right: 20px; height: 30px;">
                    <div class="row rightAlign" style="padding-right:50px;">
                        <div>
                            <label class="control-label" style="padding-top: 5px;">@ESCHOOL.Resources.Resource.InvoiceDate&nbsp;&nbsp;</label>
                        </div>
                        <div>
                            <input type="date" id="unplanneddate" class="form-control" style="width: 130px;" />
                        </div>
                    </div>
                    <p>
                        <button type="button" id="invoicesaveid" style="width: 100px;" onclick="gridunplannedSave()">@ESCHOOL.Resources.Resource.Submit</button>
                    </p>
                    <script>
                        $(document).ready(function () {
                            $("#invoicesaveid").kendoButton({
                                icon: "save"
                            });
                        });
                    </script>
                </div>
                <br /> <br />
                <div style="padding-top:15px;">
                    <div class="gridIP" id="gridInvoiceUnplan" style="padding:5px;"></div>
                </div>
            </div>
        </div>
        <div id="Invoice" style="padding-top: 5px;">
            <h5 class="ra-well-title card-header top-left" style="padding-top: 2px; padding-bottom:2px;">
                <kbd>@ESCHOOL.Resources.Resource.StudentsInvoices</kbd>
                <kbd style="float: right;">@ESCHOOL.Resources.Resource.ProcessDate:&nbsp;@Model.Period&nbsp;</kbd>
            </h5>

            <div class="row">
                <div id="gridInvoice" style="max-width:1128px; padding:5px;"></div>
            </div>

        </div>

    </form>

    <!--#region dictionary -->
    <script>
        var dictionary =
        {
            'tr-TR': {
                select: 'Seç',
                selectbankName: 'Banka Seçimini Yapınız.',
                enterValidAmount: 'Geçerli Bir Tutar Giriniz.',
                selectclassroom: 'Öğrencinin Sınıfını Giriniz.',
                feetableempty: 'Ücret tablosu girilmemiş.',
                studentfeeempty: 'Öğrenci ücretleri girilmemiş.',
                aboutRefundMsg: 'Notlarınız Kaydedildi.',
                deleted: "Tahsil Kaydı Silindi.",
                delete: "Tahsil Kaydı Silinecek, Emin misiniz?",
                startPlan: "Fatura Planlaması Yapılacak, Emin misiniz?",
                maxTotal: "Dikkat; Bakiye Tutarından Büyük Bir Tutar Giremezsiniz.",
                cut: "Kesildi",
                unCut: "Kesilmedi",
                planned: "Planlı",
                unPlanned: "Plansız",
                isExceed: "Girilen Tutar Çok Büyük.",
                titleMsg: 'Kullanıcı Mesajı:',
                msgOk: 'Tamam'
            },

            'en-US': {
                select: 'Select',
                selectbankName: 'Select the bank name.',
                enterValidAmount: 'Enter Valid Amount.',
                selectclassroom: "Enter Student's Class.",
                feetableempty: 'The wage table has not been entered.',
                studentfeeempty: 'Enter student fees.',
                aboutRefundMsg: 'Your notes have been recorded.',
                deleted: "Student collections record deleted.",
                delete: "Are you sure, Collection record will be deleted?",
                startPlan: "Invoice Planning Will Be Done, Are You Sure?",
                maxTotal: "Attention; You cannot enter an amount greater than the balance amount.",
                cut: "Cut",
                unCut: "Uncut",
                planned: "Planned",
                unPlanned: "Unplanned",
                isExceed: "The amount entered is too large.",
                titleMsg: 'User message:',
                msgOk: 'OK'
            },
        }
        function getByCulture(culture, word) {
            return dictionary[culture][word]
        }
    </script>
    <!--#endregion -->
    <!--#region students -->
    <script>
        function onChange(arg) {
            var grid = $("#gridStudents").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            var filename = document.getElementById('imgpreviewStudent').value;
            filename = selectedItem.studentPicture;
            var ID = selectedItem.studentID
            if (ID == 0) var ID = $("#studentID").val();

            document.getElementById("studentID").value = ID;
            document.getElementById("imgpreviewStudent").src = '@Url.Content("~/Upload/Students/")' + filename;
            document.getElementById("name").value = selectedItem.name;
            document.getElementById("invoiceTaxNumberID").value = selectedItem.invoiceTaxNumber;

            document.getElementById("statuCategory").value = selectedItem.statuCategory;
            document.getElementById("registrationTypeCategory").value = selectedItem.registrationTypeCategory;

            var date = kendo.toString(kendo.parseDate(selectedItem.dateOfRegistration), "dd/MM/yyyy");
            document.getElementById("dateOfRegistration").value = date;

            document.getElementById("cutInvoiceId").value = selectedItem.cutInvoice.toFixed(2);
            document.getElementById("uncutInvoiceId").value = selectedItem.uncutInvoice.toFixed(2);

            $("#invoiceid").data("kendoButton").enable(false);

            $.ajax({
                type: "POST",
                url: "/M400Collections/SchoolDebtDataRead2/" + "@Model.UserID" + "/" + "@Model.Period" + "/" + ID,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    var grid = $("#gridFees").data("kendoGrid");
                    var dataSource = new kendo.data.DataSource({ data: result });
                    grid.setDataSource(dataSource);
                },
            });
            $.ajax({
                type: "POST",
                url: '/M400Invoice/InstallmentDataRead/' + "@Model.UserID" + "/" + ID,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    var grid = $("#gridInstallments").data("kendoGrid");
                    var dataSource = new kendo.data.DataSource({ data: result });
                    grid.setDataSource(dataSource);
                    /*  grid.dataSource.read();*/
                },
            });


            var grid = $("#gridInvoice").data("kendoGrid");
            grid.dataSource.options.transport.read.url = "/M400Invoice/InvoiceDataRead/" + "@Model.Period" + "/" + "@Model.UserID" + "/" + ID;
            grid.dataSource.read();
            grid.refresh();

            var grid = $("#gridDetail").data("kendoGrid");
            grid.dataSource.options.transport.read.url = "/M400Invoice/InvoiceDetailDataRead/" + "@Model.UserID" + "/" + ID;
            grid.dataSource.read();
            grid.refresh();

            var grid = $("#gridInvoiceUnplan").data("kendoGrid");
            grid.dataSource.options.transport.read.url = "/M400Invoice/StudentUnplannedDataRead/" + "@Model.UserID" + "/" + ID;
            grid.dataSource.read();

        };

        var isSelect = false;
        var record1 = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M400Invoice/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "GridStudentDataReadPlan/" + "@Model.UserID",
                            dataType: "json"
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "viewModelId",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                firstName: { editable: false, type: "string" },
                                lastName: { editable: false, type: "string" },
                                statuCategory: { editable: false, type: "string" },
                                registrationTypeCategory: { editable: false, type: "string" },
                                dateOfRegistration: { editable: false, type: "date", format: "{0:yyyy-MM-dd HH:mm:ss}" },
                                cutInvoice: { editable: false, type: "number", format: "{0:#,##}" },
                                uncutInvoice: { editable: false, type: "number", format: "{0:#,##}" },
                                studentPicture: { editable: false, type: "string" },
                            }
                        }
                    },
                });

            var first = 1;
            var grid = $("#gridStudents").kendoGrid({
                dataSource: dataSource,
                sortable: {
                    mode: "single",
                    allowUnsort: false
                },
                resizable: true,
                selectable: 'row',
                change: onChange,
                toolbar: [
                    { template: kendo.template($("#template").html()) }
                ],
                columns: [
                    {
                        template:
                            "<div class='customer-photo'" +
                            "style='background-image: url(../Upload/Students//#:studentPicture#); width: 28px'></div>",
                    },
                    { field: "name", title: "@ESCHOOL.Resources.Resource.StudentName", footerTemplate: "#= sumStudent(1) #", width: "180px", },
                    { field: "studentClassroom", title: "@ESCHOOL.Resources.Resource.Classrooms", width: "135px" },
                    { field: "studentNumber", title: "@ESCHOOL.Resources.Resource.StudentNumber", width: "65px" },
                    { field: "statuCategory" },
                    { field: "registrationTypeCategory" },
                    { field: "cutInvoice", format: "{0:#,##}" },
                    { field: "uncutInvoice", format: "{0:#,##}" },
                    { field: "invoiceTaxNumber" },
                    { field: "studentPicture" },
                ],
                dataBinding: function () {
                    record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                },
                dataBound: function (e) {
                    if (isSelect == false) {
                        var selectID = ('@TempData["studentID"]');
                        if (selectID == 0) {
                            grid.select("tr:eq(0)");
                        }
                        else {
                            //Select scroll
                            gridSelectById(selectID), isSelect = true

                            //Select scroll
                            var scrollContentOffset = this.element.find("tbody").offset().top;
                            var selectContentOffset = this.select().offset().top;
                            var distance = selectContentOffset - scrollContentOffset;

                            //animate our scroll
                            this.element.find(".k-grid-content").animate({
                                scrollTop: distance
                            }, 400);
                        };
                    }
                    showLoadingOff();
                },
            });

            var dropDown = grid.find("#paymentDropDown").kendoDropDownList({
                optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
                dataTextField: "@Model.CategoryName2",
                dataValueField: "categoryID",
                dataSource: {
                    type: "json",
                    severFiltering: true,
                    transport: {
                        read: {
                            url: "/M400Invoice/PaymentTypeCombo",
                            dataType: "json"

                        },
                    }
                },
                change: function () {
                    showLoadingOn()
                    var value = this.value();
                    if (value == 0 || value != first) {
                        $.ajax({
                            type: "POST",
                            url: '/M400Invoice/GridStudentDataReadFilter/' + "@Model.UserID" + '/' + value,
                            dataType: "json",

                            success: function (result) {
                                var grid = $("#gridStudents").data("kendoGrid");
                                var dataSource = new kendo.data.DataSource({ data: result });
                                grid.setDataSource(dataSource);

                                var grid = $("#gridFees").data("kendoGrid");
                                var dataSource = new kendo.data.DataSource({ data: result });
                                grid.setDataSource(dataSource);

                                var grid = $("#gridInstallments").data("kendoGrid");
                                var dataSource = new kendo.data.DataSource({ data: result });
                                grid.setDataSource(dataSource);
                            },
                            error: function (httpRequest, textStatus, errorThrown) {
                                alert("Error: " + textStatus + " " + errorThrown + " " + httpRequest);
                            }
                        });
                        first = 0;
                    };
                },
            }).data("kendoDropDownList");
            var grid = $("#gridStudents").data("kendoGrid");
            grid.hideColumn(4);
            grid.hideColumn(5);
            grid.hideColumn(6);
            grid.hideColumn(7);
            grid.hideColumn(8);
            grid.hideColumn(9);
        })
        function sumStudent(e) {
            var total = 0;
            var $grid = $('#gridStudents');
            var kendo = $grid.data().kendoGrid;
            var data = kendo.dataSource.data();
            var amount = 0;
            for (var i = 0; i < data.length; i++) {
                if (e == 1) amount += 1;
                if (amount == NaN) {
                    amount = 0;
                }
            }
            total = amount;
            return total;
        }

        function gridSelectById(id) {
            var grid = $("#gridStudents").data().kendoGrid;
            var data = grid.dataSource.data();
            for (var i = 0; i < data.length; i++) {
                if (data[i].studentID == id) {
                    var select = grid.tbody.find('tr[data-uid="' + data[i].uid + '"]');
                    grid.select(select);
                }
            }
            var selectedRow = grid.select();
            var selectedDataItem = grid.dataItem(selectedRow);
        }

    </script>
    <script>
        function showLoadingOn() {
            var myGrid = $("#gridStudents").getKendoGrid();
            kendo.ui.progress($("#gridStudents"), true);
        }
        function showLoadingOff() {
            var myGrid = $("#gridStudents").getKendoGrid();
            kendo.ui.progress($("#gridStudents"), false);
        }
    </script>
    <!--#endregion -->
    <!--#region grid fee -->
    <script>
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M400Invoice/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "StudentDebtDataRead/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },

                    batch: true,
                    schema: {
                        model: {
                            id: "studentDebtID",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                studentID: { editable: false, type: "number" },
                                schoolFeeID: { editable: false, type: "number" },
                                period: { editable: false, type: "string" },
                                feeName: { editable: false, type: "string" },
                                selectFee: { type: "boolean" },
                                selectDiscount: { type: "boolean" },
                                unitPrice: { editable: true, type: "number" },
                                discount: { editable: false, type: "number" },
                                amount: { editable: false, type: "number" },
                                isList: { editable: true, type: "boolean" }
                            }
                        }
                    },
                });

            $("#gridFees").kendoGrid({
                dataSource: dataSource,
                pageable: false,
                resizable: true,
                selectable: 'row',
                columns: [
                    { field: "feeName", title: "@ESCHOOL.Resources.Resource.FeeName", footerTemplate: "#= sumAmounts(1) #", width: "125px", },
                    { field: "unitPrice", title: "@ESCHOOL.Resources.Resource.Amount", template: "#if(unitPrice === 0){#  #}else{# #=kendo.toString(unitPrice, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmounts(2),'n') # </div>", attributes: { style: "text-align:right" }, width: "80px" },
                    { field: "discount", title: "@ESCHOOL.Resources.Resource.Discount", template: "#if(discount === 0){#  #}else{# #=kendo.toString(discount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmounts(3),'n') # </div>", attributes: { style: "text-align:right" }, width: "70px" },
                    { field: "amount", title: "@ESCHOOL.Resources.Resource.RegistrationFee", template: "#if(unitPrice === 0){#  #}else{# #=kendo.toString(amount = unitPrice - discount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmounts(4),'n') # </div>", attributes: { style: "text-align:right" }, width: "80px" },
                    { field: "isList", width: "40px", title: "@ESCHOOL.Resources.Resource.List", template: "<input  #if (isList) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },
                ],
            });
        });

        function sumAmounts(e) {
            var total = 0;
            var $grid = $('#gridFees');
            var kendo = $grid.data().kendoGrid;
            var data = kendo.dataSource.data();
            var amount = 0;
            for (var i = 0; i < data.length; i++) {
                if (e == 1) amount += 1;
                if (e == 2) amount += parseFloat(data[i].unitPrice);
                if (e == 3) amount += parseFloat(data[i].discount);
                if (e == 4) amount += parseFloat(data[i].amount);
                if (amount == NaN) {
                    amount = 0;
                }
            }
            total = amount;
            return total;
        }

    </script>
    <!--#endregion -->
    <!--#region grid Plan fee -->
    <script>
        var record = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M400Invoice/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "SchoolDebtDataRead/" + "@Model.UserID",
                            dataType: "json",
                        },
                        update: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "SchoolDebtDataUpdate/" + options.models[0].id;
                                return url;
                            },
                            type: "post",
                            dataType: "json",
                            complete: function (e) {
                                $("#gridPlanFees").data("kendoGrid").dataSource.read();
                            },
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    pageSize: 20,
                    batch: true,
                    schema: {
                        model: {
                            id: "schoolFeeID",
                            fields: {
                                schoolFeeID: { editable: false, nullable: true },
                                feeCategory: { defaultValue: 2 },
                                name: { validation: { required: true } },
                                categoryLevel: { defaultValue: "L1" },
                                tax: { type: "number", validation: { required: true, min: 0 } },
                                sortOrder: { type: "number", validation: { min: 0, required: true } },
                                isActive: { type: "boolean" },
                                isSelect: { type: "boolean" }
                            }
                        }
                    },
                });

            var grid = $("#gridPlanFees").kendoGrid({
                dataSource: dataSource,
                autoBind: false,
                resizable: true,
                height: 300,
                width: 290,
                columns: [
                    { title: "#", template: "#= ++record #", width: 40, locked: true, attributes: { style: "text-align:center" } },
                    { field: "isSelect", width: "50px", title: "@ESCHOOL.Resources.Resource.Status", editor: customBoolEditor1, template: "<input  #if (isSelect) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },
                    { field: "name", title: "@ESCHOOL.Resources.Resource.FeeName", width: "130px", template: "#=name#" },
                    { field: "tax", title: "@ESCHOOL.Resources.Resource.Tax", width: "50px", template: "#=tax#" },
                    { field: "schoolID", width: "0px" },
                ],
                dataBinding: function () {
                    record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                },
                editable: true,

            });
        });
        function customBoolEditor1(container, options) {
            $('<input class="k-checkbox" type="checkbox" name="isSelect" data-type="boolean" data-bind="checked:isSelect">').appendTo(container);
        }
    </script>


    <script>
        var record = 0;
        var isRefresh = false;
        var today = new Date();
        x = (today);
        x.setHours(x.getHours() - x.getTimezoneOffset() / 60);
        var dd = today.getDate();
        var mm = today.getMonth() + 1;
        var yyyy = today.getFullYear();
        var dateString = dd + '-' + + mm + '-' + yyyy;
        var percent = 0;
        var isPercent = 0;
        var count = document.getElementById('count').value;

        $(document).ready(function () {
            var crudServiceBaseUrl = "/M400Invoice/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "PlanDataRead/" + count + "/" + dateString + "/" + percent + "/" + isPercent + "/" + isRefresh,
                            dataType: "json",
                        },
                        update: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "PlanDataUpdate/" + options.models[0].id;
                                return url;
                            },
                            type: "post",
                            dataType: "json",
                            complete: function (e) {
                                $("#gridPlanDates").data("kendoGrid").dataSource.read();
                            },
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    pageSize: 20,
                    batch: true,
                    schema: {
                        model: {
                            id: "planID",
                            fields: {
                                planID: { editable: false, type: "number" },
                                planPercent: { editable: true, type: "number" },
                                planDate: { editable: true, type: "date", format: "{0:yyyy-MM-dd HH:mm:ss}" },
                                isActive: { editable: true, type: "boolean" }
                            }
                        }
                    },
                });

            $("#gridPlanDates").kendoGrid({
                dataSource: dataSource,
                autoBind: false,
                resizable: true,
                height: 300,
                width: 240,
                multiselect: true,
                toolbar: [{
                    template: '<div> <a class="k-button" onclick="return detailRefresh()" ><i class="k-icon k-i-reload"></i></a> </div>',
                    attributes: { style: 'float: right' },
                },],
                columns: [
                    { title: "#", template: "#= ++record #", width: 40, locked: true, attributes: { style: "text-align:center" } },
                    /* { selectable: true, width: "40px", name: "selectable1", id: "selectable1", attributes: { style: "text-align:center" } },*/
                    { field: "isActive", width: "60px", title: "@ESCHOOL.Resources.Resource.Status", editor: customBoolEditor, template: "<input  #if (isActive) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },
                    /*{ field: "planPercent", title: "%", width: "70px", template: "#=planPercent#" },*/
                    { field: "planDate", title: "@ESCHOOL.Resources.Resource.Date", width: "120px", template: '#= kendo.toString(kendo.parseDate(planDate), "dd/MM/yyyy")#' },
                    { field: "planID", width: "0px" },
                ],
                dataBinding: function () {
                    record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                },
                dataBound: function (e) {
                    var rows = e.sender.tbody.children();
                    for (var j = 0; j < rows.length; j++) {
                        var row = $(rows[j]);
                        var dataItem = e.sender.dataItem(row);

                        date = dataItem.get("planDate");
                        x = (date);
                        x.setHours(x.getHours() - x.getTimezoneOffset() / 60);

                        dataItem.set("planDate", date);
                    }
                },

                editable: true,
            });
        });
        function customBoolEditor(container, options) {
            $('<input class="k-checkbox" type="checkbox" name="isActive" data-type="boolean" data-bind="checked:isActive">').appendTo(container);
        }
    </script>
    <!--#endregion -->
    <!--#region grid Installments -->
    <script>
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M400Invoice/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "InstallmentDataRead/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },

                    batch: true,
                    schema: {
                        model: {
                            id: "studentInstallmentID",
                            fields: {
                                studentInstallmentID: { editable: false, type: "number" },
                                schoolID: { editable: false, type: "number" },
                                studentID: { editable: false, type: "number" },
                                installmentDate: { editable: false, type: "date" },
                                installmentNo: { editable: false, type: "number" },
                                feeName: { editable: false, type: "string" },
                                category: { editable: false, type: "string" },
                                installmentAmount: { editable: false, type: "number", format: "{0:#,##}" },
                                previousPayment: { editable: false, type: "number" },
                                status: { editable: false, type: "string" },
                                bank: { editable: false, type: "string" },
                                explanation: { editable: false, type: "string" },
                                accountReceiptNo: { editable: false, type: "string" },
                                paymentDate: { editable: false, type: "date" },
                            }
                        }
                    },
                });

            var grid = $("#gridInstallments").kendoGrid({
                dataSource: dataSource,
                navigatable: true,
                pageable: false,
                resizable: true,
                selectable: 'row',
                columns: [
                    { field: "installmentDate", title: "@ESCHOOL.Resources.Resource.Date", width: "80px", format: "{0:dd.MM.yyyy}", template: '#= kendo.toString(kendo.parseDate(installmentDate), "dd/MM/yyyy")#' },
                    { field: "installmentNo", title: "@ESCHOOL.Resources.Resource.Number", width: "55px", template: "#=installmentNo#" },
                    { field: "category", title: "@ESCHOOL.Resources.Resource.Type", width: "65px", template: "#=category#" },
                    { field: "installmentAmount", title: "@ESCHOOL.Resources.Resource.Amount", width: "85px", template: "#if(installmentAmount === 0){#  #}else{# #=kendo.toString(installmentAmount, 'n')# #}#", attributes: { style: "text-align:right" } },
                    { field: "balance", title: "@ESCHOOL.Resources.Resource.BalanceAmount", width: "85px", template: "#if(balance === 0){#  #}else{# #=balance#  #}#" },
                    { field: "status", title: "@ESCHOOL.Resources.Resource.Status", width: "55px", template: "#=status#" },
                ],

                dataBound: function (e) {
                    var rows = e.sender.tbody.children();
                    var refund = 0;
                    var total = 0;
                    for (var j = 0; j < rows.length; j++) {
                        var row = $(rows[j]);
                        var dataItem = e.sender.dataItem(row);

                        var amount = dataItem.get("installmentAmount");
                        var payment = dataItem.get("previousPayment");
                        total += amount;
                        var cell = row.children();
                        if ('@TempData["color"]' == "#222")
                            cell.addClass(getColorClass2(amount, payment));
                        else
                            cell.addClass(getColorClass(amount, payment));
                    }
                },

            });
        });

        function getColorClass(amount, payment) {
            if (amount == payment) {
                return "critical";
            }
            else if (payment > 0) {
                return "ok";
            }
        }

        function getColorClass2(amount, payment) {
            if (amount == payment) {
                return "critical2";
            }
            else if (payment > 0) {
                return "ok2";
            }
        }

        function getColorClassInv(sw) {
            if (sw) {
                return "critical";
            }
        }

        function getColorClassInv2(sw) {
            if (sw) {
                return "critical2";
            }
        }
    </script>
    <!--#endregion -->
    <!--#region grid Invoice -->
    <script>
        Date.prototype.toJSON = function () {
            return kendo.toString(this, "yyyy-MM-ddTHH:mm:ss.000Z");
        }
        Date.prototype.toUTC = function () {
            return new Date(this.getTime() + this.getTimezoneOffset() * 60000);
        }

        function onClickA(e) {
            var rows = e.sender.select();
            rows.each(function (e) {
                var grid = $("#gridInvoice").data("kendoGrid");
                var dataItem = grid.dataItem(this);
                if (dataItem.invoiceStatus)
                    $("#invoiceid").data("kendoButton").enable(false);
                else {
                    var ID = document.getElementById('invoiceTaxNumberID').value
                    if (ID == null || ID == "")
                        $("#invoiceid").data("kendoButton").enable(false);
                    else $("#invoiceid").data("kendoButton").enable(true);
                }
            })
        };

        var studentID = $("#studentID").val();

        var record = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M400Invoice/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: "/M400Invoice/InvoiceDataRead/" + "@Model.Period" + "/" + "@Model.UserID" + "/" + studentID,
                            dataType: "json",
                        },
                        update: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "InvoiceDataUpdate/" + options.models[0].id;
                                return url;
                            },
                            type: "post",
                            dataType: "json",
                            complete: function (e) {
                                $("#gridInvoice").data("kendoGrid").dataSource.read();
                                showPopupNotification();
                            },
                        },
                        destroy: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "InvoiceDataDelete/" + options.models[0].id;
                                return url;
                            },
                            type: "post",
                            dataType: "json",
                            complete: function (e) {
                                showPopupNotification();
                            },
                        },
                        create: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "InvoiceDataCreate/" + options.models[0].id;
                                return url;
                            },
                            type: "post",
                            dataType: "json",
                            complete: function (e) {
                                showPopupNotification();
                            },
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    error: function (e) {
                        alert(e.errorThrown);
                    },
                    pageSize: 20,
                    autoSync: false,
                    batch: true,
                    schema: {
                        model: {
                            id: "studentInvoiceID",
                            fields: {
                                studentInvoiceID: { editable: false, type: "number" },
                                schoolID: { editable: true, type: "number" },
                                studentID: { editable: true, type: "number" },
                                studentInvoiceAddressID: { editable: true, type: "number" },
                                period: { editable: true, type: "string" },
                                invoiceSerialNo: { editable: false, type: "number" },

                                invoiceDate: { editable: false, type: "date", format: "{0:yyyy-MM-dd}" },
                                invoiceCutDate: { editable: false, type: "date", format: "{0:yyyy-MM-dd}" },
                                InvoiceCutTime: { editable: false, type: "date", format: "{0:HH:mm:ss}" },
                                
                                dExplanation: { editable: false, editable: false, type: "string" },
                                dUnitPrice: { editable: false, type: "number" },
                                dQuantity: { editable: false, type: "number", defaultValue: 1 },
                                dDiscount: { editable: false, type: "number", format: "{0:#,##}" },
                                dTaxPercent: { editable: false, type: "number", format: "{0:#,##}" },
                                dTax: { editable: false, type: "number", format: "{0:#,##}" },
                                dAmount: { editable: false, type: "number", format: "{0:#,##}" },

                                withholdingPercent1: { editable: false, type: "number" },
                                withholdingPercent2: { editable: false, type: "number" },
                                withholdingCode: { editable: false, type: "string" },
                                withholdingExplanation: { editable: false, type: "string" },
                                withholdingTax: { editable: false, type: "number", format: "{0:#,##}" },
                                withholdingTotal: { editable: false, type: "number", format: "{0:#,##}" },

                                isPlanned: { editable: false, type: "boolean", defaultValue: false },
                                invoiceType: { editable: false, type: "boolean", defaultValue: false },
                                invoiceStatus: { editable: true, type: "boolean", defaultValue: false },
                                isActive: { editable: true, type: "boolean", defaultValue: true }
                            }
                        }
                    },
                    error: function (e) {
                        alert("Search.js datasource error: " +
                            "\nthrew: " + e.errorThrown +
                            "\nstatus: " + e.status +
                            "\nurl: " + e.sender.transport.options.read.url);
                    }
                });
            var first = 1;
            var grid = $("#gridInvoice").kendoGrid({
                dataSource: dataSource,
                autoBind: false,
                navigatable: true,
                pageable: false,
                scrollable: true,
                resizable: true,
                height: 285,
                selectable: 'row',
                change: onClickA,
                toolbar: [{
                    template: '<divclass="toolbar"><label class="periodcombo-label" for="periodcombo">@ESCHOOL.Resources.Resource.Period1&emsp;</label> <input type="select" id="periodcombo" style="width: 150px" /></div >',
                    className: "k-grid-custom",
                    imageClass: "k-add"
                }, "Search"],
                //}, "create", "cancel", "Search"],
                columns: [
                    /*"id",*/
                    { title: "#", template: "#= ++record #", width: 30, locked: true, footerTemplate: "#= sumInvoice(1) #" },
                    { field: "invoiceDate", title: "@ESCHOOL.Resources.Resource.Date", width: "100px", format: "{0:dd.MM.yyyy}", template: '#= kendo.toString(kendo.parseDate(invoiceDate), "dd/MM/yyyy")#', attributes: { style: "text-align:center" } },
                    { field: "dUnitPrice", title: "@ESCHOOL.Resources.Resource.Amount", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumInvoice(2),'n') # </div>", width: "110px", template: "#if(dUnitPrice === 0){#  #}else{# #=kendo.toString(dUnitPrice, 'n')# #}#", attributes: { style: "text-align:right" } },
                    { field: "dDiscount", title: "@ESCHOOL.Resources.Resource.Discount", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumInvoice(3),'n') # </div>", width: "110px", template: "#if(dDiscount === 0){#  #}else{# #=kendo.toString(dDiscount, 'n')# #}#", attributes: { style: "text-align:right" } },
                    { field: "dTax", title: "@ESCHOOL.Resources.Resource.Tax", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumInvoice(4),'n') # </div>", width: "110px", template: "#if(dTax === 0){#  #}else{# #=kendo.toString(dTax, 'n')# #}#", attributes: { style: "text-align:right" } },
                    { field: "dAmount", title: "@ESCHOOL.Resources.Resource.Total", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumInvoice(5),'n') # </div>", width: "110px", template: "#if(dAmount === 0){#  #}else{# #=kendo.toString(dAmount, 'n')# #}#", attributes: { style: "text-align:right" } },
                    { field: "invoiceSerialNo", title: "@ESCHOOL.Resources.Resource.InvoiceSerialNo", width: "90px", template: "#if(invoiceSerialNo === 0){#  #}else{# #=invoiceSerialNo#  #}#", },
                    { field: "isPlanned", width: "80px", title: "@ESCHOOL.Resources.Resource.Plan1", template: "\#= isPlanned ? getByCulture('@culture', 'planned') : getByCulture('@culture', 'unPlanned') \#" },
                    { field: "invoiceStatus", width: "90px", title: "@ESCHOOL.Resources.Resource.Status", template: "\#= invoiceStatus ? getByCulture('@culture', 'cut') : getByCulture('@culture', 'unCut') \#" },

                    { field: "isActive", width: "80px", title: "@ESCHOOL.Resources.Resource.Active", template: "<input  #if (isActive) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },

                    { command: ["edit", "destroy"], title: "&nbsp;", width: "180px" }
                ],
                editable: "inline",
                dataBound: function (e) {
                    var rows = e.sender.tbody.children();
                    for (var j = 0; j < rows.length; j++) {
                        var row = $(rows[j]);
                        var dataItem = e.sender.dataItem(row);

                        var sw = dataItem.get("invoiceStatus");;
                        var cell = row.children();
                        if ('@TempData["color"]' == "#222")
                            cell.addClass(getColorClassInv2(sw));
                        else
                            cell.addClass(getColorClassInv(sw));
                    }
                },

                dataBinding: function () {
                    record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                },
                edit: function (e) {
                    var grid = $('#gridInvoice').data('kendoGrid');

                    var items = e.sender.items();
                    items.each(function (index) {
                        var dataItem = grid.dataItem('tr.k-grid-edit-row');
                        var dropdownlist = $("#periodcombo").data("kendoDropDownList");
                        dataItem.set("schoolID", "@Model.SchoolID");
                        dataItem.set("studentID", studentID);
                        dataItem.set("period", dropdownlist.text())
                    });
                }
            });

            var dropDown = grid.find("#periodcombo").kendoDropDownList({
                dataTextField: "categoryName",
                dataValueField: "categoryID",
                optionLabel: "@Model.Period",
                index: 0,
                dataSource: {
                    type: "json",
                    severFiltering: true,
                    transport: {
                        read: {
                            url: "/M400Invoice/PeriodDataRead",
                            dataType: "json"
                        },
                    }
                },

                change: function () {
                    var value = this.value();
                    var d = new Date();
                    var d1 = d.getFullYear();
                    var d2 = d1 + 1;
                    var period1 = d1 + "-" + d2;
                    var period2 = this.text();

                    var studentID = $("#studentID").val();

                    var grid = $("#gridInvoice").data("kendoGrid");
                    grid.dataSource.options.transport.read.url = "/M400Invoice/InvoiceDataRead/" + this.text() + "/" + "@Model.UserID" + "/" + studentID;
                    grid.dataSource.read();
                    grid.refresh();

                    first = 0;
                },
            }).data("kendoDropDownList");

            dropDown.bind("dataBound", function () {
                this.trigger("change");
            });
        });

        function sumInvoice(e) {
            var total = 0;
            var totalr = 0;
            var $grid = $('#gridInvoice');
            var kendo = $grid.data().kendoGrid;
            var data = kendo.dataSource.data();
            var amount = 0;
            for (var i = 0; i < data.length; i++) {
                if (e == 1) amount += 1;
                if (e == 2) amount += parseFloat(data[i].dUnitPrice);
                if (e == 3) amount += parseFloat(data[i].dDiscount);
                if (e == 4) amount += parseFloat(data[i].dTax);
                if (e == 5) amount += parseFloat(data[i].dAmount);
                if (amount == NaN) {
                    amount = 0;
                }
            }
            totalr = amount;
            if (e == 1) total = totalr
            else total = totalr.toFixed(2);
            return total;
        }
    </script>
    <!--#endregion -->
    <!--#region grid Invoice unplaned -->
    <script>
        var studentID = $("#studentID").val();

        var record = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M400Invoice/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "StudentUnplannedDataRead/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },

                        create: {
                            url: function (options) {
                                var date = $("#unplanneddate").data("kendoDatePicker").value();
                                var dateString = kendo.toString(date, "dd-MM-yyyy");
                                var url = crudServiceBaseUrl + "StudentUnplannedDataCreate/" + options.models[0].id + "/" + dateString;
                                return url;
                            },
                            type: "post",
                            dataType: "json",
                            complete: function (e) {
                                $("#gridInvoice").data("kendoGrid").dataSource.read();
                                $("#gridInvoiceUnplan").data("kendoGrid").dataSource.read();
                                showPopupNotification();
                            },
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    error: function (e) {
                        alert(e.errorThrown);
                    },
                    pageSize: 20,
                    autoSync: false,
                    batch: true,
                    schema: {
                        model: {
                            id: "studentInvoiceID",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                studentInvoiceID: { editable: false, type: "number" },
                                schoolID: { editable: false, type: "number" },
                                studentID: { editable: false, type: "number" },
                                schoolFeeID: { editable: false, type: "number" },
                                period: { editable: false, type: "string" },
                                feeName: { editable: false, type: "string" },

                                amount: { editable: false, type: "number" },
                                cutInvoiceAmount: { editable: false, type: "number" },
                                uncutInvoiceAmount: { editable: false, type: "number" },
                                newInvoiceAmount: { editable: true, type: "number", validation: { min: 1, required: true }, },
                            }
                        }
                    },
                    error: function (e) {
                        alert("Search.js datasource error: " +
                            "\nthrew: " + e.errorThrown +
                            "\nstatus: " + e.status +
                            "\nurl: " + e.sender.transport.options.read.url);
                    }
                });
            var grid = $("#gridInvoiceUnplan").kendoGrid({
                dataSource: dataSource,
                autoBind: false,
                navigatable: true,
                pageable: false,
                scrollable: true,
                resizable: true,
                selectable: 'row',
                columns: [
                    { title: "#", template: "#= ++record #", width: 30, attributes: { style: "text-align:center" } },
                    { field: "feeName", title: "@ESCHOOL.Resources.Resource.FeeName", footerTemplate: "#= sumAmountsUnplan(1) #", width: "200px", },
                    { field: "amount", title: "@ESCHOOL.Resources.Resource.Amount", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmountsUnplan(2),'n') # </div>", width: "120px", attributes: { style: "text-align:right" } },
                    { field: "cutInvoiceAmount", title: "@ESCHOOL.Resources.Resource.IssuedInvoiceAmount", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmountsUnplan(3),'n') # </div>", width: "120px", attributes: { style: "text-align:right" } },
                    { field: "uncutInvoiceAmount", title: "@ESCHOOL.Resources.Resource.UnissuedInvoiceAmount", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmountsUnplan(4),'n') # </div>", width: "120px", attributes: { style: "text-align:right" } },
                    {
                        field: "newInvoiceAmount", title: "<b>@ESCHOOL.Resources.Resource.NewInvoiceAmount</b>", format: "{0:n}", width: "130px", attributes: { style: "text-align:right" },
                        editor: function (container, options) {
                            if (options.model.uncutInvoiceAmount == 0) {
                                $("#invoicesaveid").data("kendoButton").enable(false);
                                $("<strong>@ESCHOOL.Resources.Resource.UnissuedZero</strong>").appendTo(container);
                            }
                            else {
                                $('<input id="' + options.field + '" data-bind="value:' + options.field + '" class="form-control" ' + ' />')
                                    .appendTo(container);
                                $("#invoicesaveid").data("kendoButton").enable(true);
                            }
                        }
                    },
                ],
                editable: true,
                dataBinding: function () {
                    record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                },
                dataBound: function (e) {
                    var rows = e.sender.tbody.children();
                    for (var j = 0; j < rows.length; j++) {
                        var row = $(rows[j]);
                        var dataItem = e.sender.dataItem(row);

                        var units = dataItem.get("uncutInvoiceAmount");

                        var cell = row.children();
                        cell.addClass(getColorClass(units));
                    }
                }
            });
        });
        function getColorClass(units) {
            if ('@TempData["color"]' == "#222") {
                if (units == 0)
                    return "critical2";
                else
                    return "ok2";
            }
            else {
                if (units == 0)
                    return "critical";
                else
                    return "ok";
            }
        }

        function sumAmountsUnplan(e) {
            var total = 0;
            var $grid = $('#gridInvoiceUnplan');
            var kendo = $grid.data().kendoGrid;
            var data = kendo.dataSource.data();
            var amount = 0;
            for (var i = 0; i < data.length; i++) {
                if (e == 1) amount += 1;
                if (e == 2) amount += parseFloat(data[i].amount);
                if (e == 3) amount += parseFloat(data[i].cutInvoiceAmount);
                if (e == 4) amount += parseFloat(data[i].uncutInvoiceAmount);
                if (amount == NaN) {
                    amount = 0;
                }
            }
            total = amount;
            return total;
        }
    </script>
    <!--#endregion -->
    <!--#region buttons, textarea -->
    <script>
        var ID, btn, odd = 0, even = 0, result, i, j, z, tcTotal = 0;
        function myFunction(e) {
            btn = e.id;
            if (btn == "btn1") { IDT = "#id1", ID1 = "id1" }
            else
                if (btn == "btn2") { IDT = "#id2", ID1 = "id2" }
                else
                    if (btn == "btn3") { IDT = "#id3", ID1 = "id3" }
                    else
                        if (btn == "btn4") { IDT = "#id4", ID1 = "id4" }
                        else { IDT = "#id5", ID1 = "id5" }

            ID = document.querySelector(IDT);

            odd = 0, even = 0, tcTotal = 0
            for (i = 0; i < 9; i += 2) {
                odd += Number(ID.value[i]);
            }
            odd *= 7;
            for (j = 1; j < 8; j += 2) {
                even += Number(ID.value[j]);
            }
            result = Math.abs(odd - even);
            for (z = 0; z < 10; z++) {
                tcTotal += Number(ID.value[z]);
            }
            if (ID.value.length !== 11) {
                idFalse()
            }
            else
                if (result % 10 != Number(ID.value[9])) {
                    idFalse()
                } else if (tcTotal % 10 != Number(ID.value[10])) {
                    idFalse()
                } else {
                    idTrue()
                }
        };

        function idFalse() {
            document.getElementById(ID1).style.color = "white";
            document.getElementById(ID1).style.backgroundColor = "red";
        };
        function idTrue() {
            document.getElementById(ID1).style.color = "white";
            document.getElementById(ID1).style.backgroundColor = "green";
        };

        function IdChange(e) {
            document.getElementById(e.id).innerHTML = '<i class = "fa fa-spinner fa-spin"></i>@ESCHOOL.Resources.Resource.IdControl';
        };
        function IdChangeOld(e) {
            document.getElementById(e.id).innerHTML = '<i class = "fa fa-bell"></i>@ESCHOOL.Resources.Resource.IdNumber';
        };

        function IdReset(e) {
            btn = e.id;
            if (btn == "btn1") ID1 = "id1"
            else if (btn == "btn2") ID1 = "id2"
            else if (btn == "btn3") ID1 = "id3"
            else if (btn == "btn4") ID1 = "id4"
            else if (btn == "btn5") ID1 = "id5"
            document.getElementById(ID1).style.color = "black";
            document.getElementById(ID1).style.backgroundColor = "white";
        };
    </script>

    <script>
        $(document).ready(function () {
            $('body').kendoTooltip({
                filter: '[title]:not([title=""])',
                autoHide: true,
                position: "top",
                animation: {
                    open: {
                        effects: "zoom",
                        duration: 150
                    }
                }
            });
        });
    </script>
    <!--#endregion -->

</body>
</html>

<!--#region upload -->
<script>
    var previewingStudent = function (event) {
        var result = document.getElementById("imgpreviewStudent")
        result.src = URL.createObjectURL(event.tDiscountrget.files[0]);
    };

    $(document).ready(function () {
        $("#imgfileStudent").kendoUpload({
            async: {
                //saveUrl: "save",
                removeUrl: "remove",
                autoUpload: true
            },
            localization: {
                select: '<i class="fa fa-upload"></i>'
            },
            showFileList: false
        });
    });

</script>

<script>
    $(document).ready(function () {
        $('#M400Invoice').submit(function () {
            $('#M400Invoice').find("[required=\"required\"]").attr("required", false);
            $(".needValidation").attr("required", true);
        });

        var validator = $("#M400Invoice").kendoValidator().data("kendoValidator"),
            status = $(".status");
    });
</script>
<!--#endregion -->
<!--#region style -->
<style type="text/css">
    .customer-photo {
        display: inline-block;
        width: 28px;
        height: 28px;
        border-radius: 50%;
        background-size: 28px 31px;
        background-position: center center;
        vertical-align: middle;
        line-height: 28px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 0px;
    }

    .toolbar {
        float: right;
    }

    #center {
        /*        display: block;*/
        margin-left: 22px;
        /*        margin-right: auto;*/
        /*        border: 8px ridge blue;*/
    }
</style>
<!--#endregion -->
<!--#region Add/Update -->

<script>
    function newInvoicePlanShow() {
        $("#div1").show(500);
        $("#div1Hr").show(500);
        $("#newid").hide(500);
        $("#closeid1").show(500);

        $('#gridPlanFees').data('kendoGrid').dataSource.read();
        $('#gridPlanDates').data('kendoGrid').dataSource.read();
    };
    function newInvoicePlanClose() {
        $("#div1").hide(500);
        $("#div1Hr").hide(500);

        $("#newid").show(500);
        $("#closeid1").hide(500);
    };

    function invoiceDetailShow() {
        $("#Invoice").hide(500);
        $("#detailid").hide(500);
        $("#closeid2").show(500);

        $("#div2").show(500);
        //$("#div2Hr").show(500);
        $('#gridDetail').data('kendoGrid').dataSource.read();
    };
    function invoiceDetailShowClose() {
        $("#div2").hide(500);
        //$("#div2Hr").hide(500);
        $("#Invoice").show(500);
        $("#detailid").show(500);
        $("#closeid2").hide(500);

        // Gridi yeniden dolduruyor, sadece REFRESH komutu kullanıldı.
        grid.refresh();
    };

    function gridunplanned() {
        $("#InvoiceUnplan").show(500);
        $("#unplanedcloseid").show(500);
        $("#unplannedid").hide(500);
        $("#invoicesaveid").data("kendoButton").enable(false);
    };
    function buttonHide() {
        $("#InvoiceUnplan").hide(500);
        $("#unplanedcloseid").hide(500);
        $("#unplannedid").show(500);
    };

</script>

<script>
    function detailRefresh() {
        $("#startButton").data("kendoButton").enable(true);
        var isRefresh = true;
        var percent = 0;
        var isPercent = 0;
        var count = document.getElementById('count').value;

        var date = $("#transactiondate").data("kendoDatePicker").value();
        // ekrandaki tarihin bir gün gerisinden gitmesini önlemek için alttaki iki satır eklendi
        //x = (date);
        //x.setHours(x.getHours() - x.getTimezoneOffset() / 60);
        var dateString = kendo.toString(date, "dd-MM-yyyy");

        var grid = $("#gridPlanDates").data("kendoGrid");
        grid.dataSource.options.transport.read.url = "/M400Invoice/PlanDataRead/" + count + "/" + dateString + "/" + percent + "/" + isPercent + "/" + isRefresh;
        grid.dataSource.read();
        grid.refresh();
    }

    function div1Button() {
        $("#startButton").data("kendoButton").enable(true);

        var grid = $("#gridPlanFees").data("kendoGrid");
        grid.saveChanges();

        var grid = $("#gridPlanDates").data("kendoGrid");
        grid.saveChanges();
    }
</script>

<script>
    function gridunplannedSave() {
        var $grid = $('#gridInvoiceUnplan');
        var kendo = $grid.data().kendoGrid;
        var data = kendo.dataSource.data();

        var isExceed = false;
        var amount = 0;
        var cutAmount = 0;
        var newAmount = 0;
        var amountT = 0;
        var cutAmountT = 0;
        var newAmountT = 0;
        for (var i = 0; i < data.length; i++) {
            amount = parseFloat(data[i].amount);
            cutAmount = parseFloat(data[i].cutInvoiceAmount);
            newAmount = parseFloat(data[i].newInvoiceAmount);

            if (cutAmount + newAmount > amount) isExceed = true;

            amountT += amount;
            cutAmountT += cutAmount;
            newAmountT += newAmount;
        }
        $("#invoicesaveid").data("kendoButton").enable(false);
        if (cutAmountT + newAmountT > amountT || isExceed == true) {
            msg = getByCulture('@culture', 'isExceed');
            alert(msg)
        }
        else {
            var grid = $("#gridInvoiceUnplan").data("kendoGrid");
            grid.saveChanges();
            showPopupNotification();
        }
    }
</script>

<script>
    $("#startButton").on("click", function () {
        msg = getByCulture('@culture', 'startPlan');
        kendo.confirm(msg)
            .then(function () {
                $('body').addClass('waiting');
                $('html,body').css('cursor', 'wait');
                $('cancel').addClass('disabled');
                okStartPlan();
                $('body').removeClass('waiting');
                $('html,body').css('cursor', 'default');
            }, function () {
                //kendo.alert("You chose to Cancel action.");
            });
    });

    function okStartPlan() {
        waitProgress1();
        $("#startButton").data("kendoButton").enable(false);
        var isDetailed = document.getElementById('detailedId').checked;
        var isDiscount = document.getElementById('discountId').checked;
        var isSelectStudent = document.getElementById('selectStudentId').checked;
        var studentID = document.getElementById("studentID").value;

        $.ajax({
            url: '/M400Invoice/PlanDataStart/' + "@Model.UserID" + "/" + isDetailed + "/" + isDiscount + "/" + isSelectStudent + "/" + studentID,
            type: "post",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            complete: function (e) {
                $("#gridInvoice").data("kendoGrid").dataSource.read();
            },
        });
        newInvoicePlanClose();
        showPopupNotification();
    }
</script>

<script>
    function waitProgress1() {
        $('#loader-pulsing').kendoLoader({ type: 'pulsing' });
        $('#loader-infinite-spinner').kendoLoader({ type: 'infinite-spinner' });
        $('#loader-converging-spinner').kendoLoader({ type: 'converging-spinner' });
    }
</script>

<script>
    function waitProgress2() {
        var loader1 = $('#loader-pulsing').kendoLoader({ type: 'pulsing' });
        var loader2 = $('#loader-infinite-spinner').kendoLoader({ type: 'infinite-spinner' });
        var loader3 = $('#loader-converging-spinner').kendoLoader({ type: 'converging-spinner' });
        setTimeout(function () {
            loader1.hide();
        }, 2000)
        setTimeout(function () {
            loader2.hide();
        }, 3000)
        setTimeout(function () {
            loader3.hide();
        }, 4000)
    }
</script>
<div class="vertical-center">
    <span id="loader-pulsing"></span>
    <span id="loader-infinite-spinner"></span>
    <span id="loader-converging-spinner"></span>
</div>
<style>
    .vertical-center {
        margin: 0;
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }
</style>

<script>
    $("#transactiondate").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    var datepicker = $("#transactiondate").data("kendoDatePicker");
    datepicker.value(new Date());

    /*  var paste = false;*/
    $("#unplanneddate").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    var datepicker = $("#unplanneddate").data("kendoDatePicker");
    datepicker.value(new Date());

</script>
<!--#endregion -->
<!--#region grid Invoice Detail -->
<script>
    var record = 0;
    var recordSub = 0;
    var studentID = document.getElementById("studentID").value;
    $(document).ready(function () {
        var element = $("#gridDetail").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: "/M400Invoice/InvoiceDetailDataRead/" + "@Model.UserID" + "/" + studentID,
                        dataType: "json"
                    },
                },
                pageSize: 6,
                serverPaging: true,
                serverSorting: true
            },
            /* height: 300,*/
            autoBind: false,
            sortable: true,
            pageable: true,
            selectable: 'row',
            detailInit: detailInit,
            dataBound: function () {
                this.expandRow(this.tbody.find("tr.k-master-row").first());
            },
            columns: [
                { title: "#", template: "#= ++record #", width: 40 },
                { field: "invoiceDate", title: "@ESCHOOL.Resources.Resource.Date", width: "100px", format: "{0:dd.MM.yyyy}", template: '#= kendo.toString(kendo.parseDate(invoiceDate), "dd/MM/yyyy")#' },
                { field: "dUnitPrice", title: "@ESCHOOL.Resources.Resource.Amount", template: "#if(dUnitPrice === 0){#  #}else{# #=kendo.toString(dUnitPrice, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumDetail(2),'n') # </div>", width: "120px", attributes: { style: "text-align:right" } },
                { field: "dDiscount", title: "@ESCHOOL.Resources.Resource.Discount", template: "#if(dDiscount === 0){#  #}else{# #=kendo.toString(dDiscount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumDetail(3),'n') # </div>", attributes: { style: "text-align:right" } },
                { field: "dTax", title: "@ESCHOOL.Resources.Resource.Tax", template: "#if(dTax === 0){#  #}else{# #=kendo.toString(dTax, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumDetail(4),'n') # </div>", attributes: { style: "text-align:right" } },
                { field: "dAmount", title: "@ESCHOOL.Resources.Resource.Total", template: "#if(dAmount === 0){#  #}else{# #=kendo.toString(dAmount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumDetail(5),'n') # </div>", attributes: { style: "text-align:right" } },
                { field: "invoiceSerialNo", title: "@ESCHOOL.Resources.Resource.InvoiceSerialNo", width: "120px", template: "#=invoiceSerialNo#" },
                { field: "invoiceStatus", width: "100px", title: "@ESCHOOL.Resources.Resource.Status", template: "\#= invoiceStatus ? getByCulture('@culture', 'cut') : getByCulture('@culture', 'unCut') \#" },
                { field: "isActive", width: "60px", title: "@ESCHOOL.Resources.Resource.Active", template: "<input  #if (isActive) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },
            ],
            dataBinding: function () {
                record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
            },
        });
    });

    function detailInit(e) {
        $("<div/>").appendTo(e.detailCell).kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: "/M400Invoice/InvoiceDetailDataReadSub/" + e.data.studentID + "/" + e.data.studentInvoiceID,
                        dataType: "json"
                    },
                },
                aggregate: [
                    { field: "unitPrice", aggregate: "sum" },
                    { field: "discount", aggregate: "sum" },
                    { field: "tax", aggregate: "sum" },
                    { field: "amount", aggregate: "sum" },
                ],

                serverPaging: true,
                serverSorting: true,
                serverFiltering: true,
                pageSize: 10,
                filter: { field: "studentInvoiceID", operator: "eq", value: e.data.studentInvoiceID }
            },
            scrollable: false,
            sortable: true,
            pageable: true,
            selectable: 'row',
            columns: [
                { title: "#", template: "#= ++recordSub #", width: 40 },
                { field: "explanation", title: "@ESCHOOL.Resources.Resource.Name", width: "200px", editable: true, template: "#=explanation#" },
                { field: "quantity", title: "@ESCHOOL.Resources.Resource.Quantity", width: "50px", format: "?", template: "#if(quantity === 0){#  #}else{# #=quantity#  #}#", },
                { field: "unitPrice", title: "@ESCHOOL.Resources.Resource.Amount", width: "120px", editable: false, template: "#if(unitPrice === 0){#  #}else{# #=kendo.toString(unitPrice, 'n')# #}#", attributes: { style: "text-align:right" } },
                { field: "discount", title: "@ESCHOOL.Resources.Resource.Discount", width: "120px", editable: false, template: "#if(discount === 0){#  #}else{# #=kendo.toString(discount, 'n')# #}#", attributes: { style: "text-align:right" } },
                { field: "taxPercent", title: "%", width: "50px", template: "#=taxPercent#" },
                { field: "tax", title: "@ESCHOOL.Resources.Resource.TaxAmount", width: "120px", template: "#if(tax === 0){#  #}else{# #=kendo.toString(tax, 'n')# #}#", attributes: { style: "text-align:right" } },
                { field: "amount", title: "@ESCHOOL.Resources.Resource.TotalAmount", width: "120px", editable: false, template: "#if(amount === 0){#  #}else{# #=kendo.toString(amount, 'n')# #}#", attributes: { style: "text-align:right" } },
            ],
            dataBinding: function () {
                recordSub = (this.dataSource.page() - 1) * this.dataSource.pageSize();
            },
        });
    }

    function sumDetail(e) {
        var total = 0;
        var $grid = $('#gridDetail');
        var kendo = $grid.data().kendoGrid;
        var data = kendo.dataSource.data();
        var amount = 0;
        for (var i = 0; i < data.length; i++) {
            if (e == 1) amount += 1;
            if (e == 2) amount += parseFloat(data[i].dUnitPrice);
            if (e == 3) amount += parseFloat(data[i].dDiscount);
            if (e == 4) amount += parseFloat(data[i].dTax);
            if (e == 5) amount += parseFloat(data[i].dAmount);
            if (amount == NaN) {
                amount = 0;
            }
        }
        total = amount;
        return total;
    }

</script>
<!--#endregion -->
<!--#region grid Invoice call -->
<script>
    function gridInvoiceShow() {
        var grid = $("#gridInvoice").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        var studentInvoiceID = selectedItem.studentInvoiceID
        var studentID = $("#studentID").val();
        window.location.replace("/M400Invoice/Invoice?userID=@Model.UserID&studentID=" + studentID + "&studentInvoiceID=" + studentInvoiceID);
    };
</script>
<!--#endregion -->
@*Notification*@
<span id="popupNotification"></span>
<div id="appendto" class="demo-section k-content"></div>
<script>
    function showPopupNotification() {
        var popupNotification = $("#popupNotification").kendoNotification().data("kendoNotification");
        var d = new Date();
        popupNotification.show(kendo.toString(d, 'HH:MM:ss.') + kendo.toString(d.getMilliseconds(), "000"), "error");
        waitProgress2();
    };
</script>

<script>
    record = 0;
    $(document).ready(function () {
        var crudServiceBaseUrl = "/M400Invoice/",
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: crudServiceBaseUrl + "GridResultDataRead/" + "@Model.UserID",
                        dataType: "json"
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return { models: kendo.stringify(options.models) };
                        }
                    }
                },
                batch: true,
                pageSize: 10,
                schema: {
                    model: {
                        id: "ID",
                        fields: {
                            ID: { editable: false, type: "number" },
                            name: { editable: true, type: "string" },
                            taxOffice: { editable: false, type: "string" },
                            taxNumber: { editable: false, type: "string" },
                            invoiceType: { editable: false, type: "string" },
                            invoiceNumber: { editable: false, type: "string" },
                            result: { editable: false, type: "string" },
                            explanation: { editable: false, type: "string" },
                        }
                    }
                },
            });
        var grid = $("#gridResults").kendoGrid({
            dataSource: dataSource,
            autoBind: false,
            pageable: true,
            resizable: true,
            selectable: 'row',
            height: 200,
            columns: [
                { title: "#", template: "#= ++record #", width: 40 },
                { field: "name", title: "@ESCHOOL.Resources.Resource.Name", width: "200px", },
                { field: "taxOffice", title: "@ESCHOOL.Resources.Resource.TaxOffice", width: "160px", },
                { field: "taxNumber", title: "@ESCHOOL.Resources.Resource.TaxNumber", width: "130px", },
                { field: "invoiceType", title: "@ESCHOOL.Resources.Resource.InvoiceType", width: "130px", },
                { field: "invoiceNumber", title: "@ESCHOOL.Resources.Resource.InvoiceSerialNo", width: "150px", },
                { field: "result", title: "@ESCHOOL.Resources.Resource.TransactionResult", width: "110px", },
                { field: "explanation", title: "@ESCHOOL.Resources.Resource.Explanation", width: "200px", },
            ],
            dataBinding: function () {
                record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
            },
        });
    })
</script>
<script>
    $("#wrap img").hover(function () {
        kendo.fx(this).zoom("in").startValue(1).endValue(1.3).play();
    }, function () {
        kendo.fx(this).zoom("out").endValue(1).startValue(1.3).play();
    });

    $("#divheader").show(1000);
</script>
<script>
    window.history.replaceState('', '', window.location.pathname);
</script>