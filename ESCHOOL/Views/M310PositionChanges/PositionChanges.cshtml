@model ESCHOOL.ViewModels.StudentViewModel
@{
    System.Globalization.CultureInfo.CurrentCulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    System.Globalization.CultureInfo.CurrentUICulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    var culture = System.Globalization.CultureInfo.CurrentCulture.ToString();
}
@addTagHelper *, Kendo.Mvc

@{
    var messages = new Dictionary<string, string>() { { "custom", "Please choose another Start Time." } };
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
}
<!--#region head -->
<html>
<head>
    <style>
        html {
            font-size: 13px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
    <title></title>
    <link href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.common.min.css" rel="stylesheet" />
    <link rel="stylesheet" id="skin-css" href="@TempData["theme"]" />
    <link rel="stylesheet" id="skin-css" href="@TempData["themeMobile"]" />
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/kendo.all.min.js"></script>

    <script src="@Url.Content("~/telerik/2021.2.616/js//cultures/kendo.culture." + culture + ".min.js")"></script>
    <script src="@Url.Content("~/telerik/2021.2.616/js//messages/kendo.messages." + culture + ".min.js")"></script>

    <script type="text/javascript">
        kendo.culture("@culture");
    </script>
</head>
<!--#endregion -->
<body data-spy="scroll" data-target=".navbar">
    @if (ViewBag.IsSuccess == true)
    {
        <br />
        <br />
        <br />
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@ESCHOOL.Resources.Resource.Warning</strong>@ESCHOOL.Resources.Resource.ValidationError<br />
            <a asp-contoller="M310PositionChanges" asp-action="PositionChanges" asp-route-id="@Model.UserID&@Model.StudentID">@ESCHOOL.Resources.Resource.ClickToContinue</a>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    @if (@Model.IsSuccess == true)
    {
        <br />
        <br />
        <br />
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@ESCHOOL.Resources.Resource.Warning</strong>@ESCHOOL.Resources.Resource.ValidationError8<br />
            <a href="/M110SchoolInfo/index?@Model.UserID">@ESCHOOL.Resources.Resource.ClickToContinue</a>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <!--#region toolbar -->
    <style>
        #logoId img {
            width: 60px;
        }
    </style>
    <script>
        $(document).ready(function() {
            $("#toolbarMenu").kendoToolBar({
                items: [
                    {
                        template: "<img src='../Upload/Images/Logo.png' class='user-image' style='width:60px;'/>",
                        overflow: "never",
                    },
                    { template: "<h4 style='padding-left:20px;'>@ESCHOOL.Resources.Resource.PositionChange</h4>" },
                    { type: "spacer" },

                    { type: "button", id: "printer", text: "@ESCHOOL.Resources.Resource.Printer", icon: "printer" },
                    { type: "separator" },

                    { type: "button", id: "help", text: "@ESCHOOL.Resources.Resource.Help", icon: "help" },
                    { type: "separator" },

                    { type: "button", id: "back", text: "@ESCHOOL.Resources.Resource.Back", attributes: { style: "float: right" }, icon: "rewind" },
                    { type: "separator" },

                    { type: "button", id: "exit", text: "@ESCHOOL.Resources.Resource.Exit", attributes: { style: "float: right; margin-top: .4em;" }, icon: "logout" },
                    { type: "separator" },
                ],

                click: function(e) {
                    if (e.id == "exit" || e.id == "back") {
                        if (e.id == "exit")
                            window.location.replace("/Home/index?userID=" + "@Model.UserID");
                        else
                            window.location.replace("/M210Student/AddOrEditStudent?studentID=" + @Model.StudentID + "&userID=@Model.UserID");
                    }

                    if (e.id == "printer") {
                         window.location.replace("../ListPanel/List112?userID=" + @Model.UserID + "&msg=0&prg=2");
                    }

                    if (e.id == "help") {
                        var myWindow = $("#panelbarHelp").show();
                        var panelBar = $("#panelbarHelp").data("kendoPanelBar");
                        panelBar.select(panelBar.element.children("li").eq(0));
                        panelBar._selected[0].style.display = 'block';
                        var item = panelBar.select();
                        panelBar.expand(item);
                    }
                }
            });
            if (@Model.StudentID == 0) $("#back").hide();
            if ("@Model.IsPermission" == 'False') permissionsControl();
        });
    </script>
    <div id="alert"></div>
    <script>
        function permissionsControl() {
            msg = getByCulture('@culture', 'msgOk');
            showAlert(msg);
        };

        function showAlert(message) {
            msg = getByCulture('@culture', 'titleMsg');
            $("#alert").kendoAlert({
                title: msg,
                content: "<strong>@ESCHOOL.Resources.Resource.PermissionMsg</strong>",
                messages: {
                    okText: message
                },
                actions: [{
                    text: "#: messages.okText #",
                    action: function(e) {
                        window.location.replace("/Home/index?userID=@Model.UserID");
                    }
                }]
            }).data("kendoAlert").open();
        };
    </script>

    <!--#endregion -->

    <form id="M310PositionChanges" asp-controller="M310PositionChanges" asp-action="PositionChanges" asp-route-id="@Model.UserID&@Model.StudentID" enctype="multipart/form-data" method="post">
        <div class="demo-section k-content fixed-top wide">
            <div id="toolbarMenu"></div>
        </div>
        <br />
        <script id="template" type="text/x-kendo-template">
            <span class="k-textbox k-grid-search k-display-flex"  style="width:50%;">
                <input autocomplete="off" placeholder=@ESCHOOL.Resources.Resource.Search class="k-input">
                <span class="k-input-icon">
                    <span class="k-icon k-i-search" style="float:right"></span>
                </span>
            </span>

            <div class="toolbar" style="float:left"><label  for="paymentDropDown"></label> <input type="select" id="paymentDropDown" style="width: 150px" /></div >
        </script>

        @*<br /><br /><br /><br /><br /><br /><br />*@

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <!--#region hidden -->
        @*Geri dönüşlerde null olmaması için*@
        <input type="hidden" asp-for="@Model.Student.StudentID" />
        <input type="hidden" asp-for="@Model.StudentID" />
        <input type="hidden" asp-for="@Model.UserID" />
        <input type="hidden" asp-for="@Model.Period" />
        <input type="hidden" asp-for="@Model.Student.SchoolID" />
        <input type="hidden" asp-for="@Model.SchoolID" />
        <input type="hidden" asp-for="@Model.Student.SiblingID" />
        <input type="hidden" asp-for="@Model.PSerialNumber.PSerialNumberID" />

        <input type="hidden" asp-for="@TempData["studentID"]" id="studentID" />
        <input type="hidden" id="installmentID" />
        <input type="hidden" id="total" />
        <input type="hidden" id="maxTotal" />

        <input type="hidden" id="resultOnOff" value="false" />

        <!--#endregion -->
        <br /> <br />
        <!--#region panelbarHelp -->
        <ul id="panelbarHelp" style="display: none;">
            <li>
                <span class="k-link">@ESCHOOL.Resources.Resource.Help</span>
                <div class="k-card-body" style="padding-left:15px;">
                    <p><strong>@ESCHOOL.Resources.Resource.CollectionMsg</strong></p>
                    <p>@ESCHOOL.Resources.Resource.PositionChangeMsg100</p>
                    <p>@ESCHOOL.Resources.Resource.PositionChangeMsg101</p>
                    <p>@ESCHOOL.Resources.Resource.PositionChangeMsg102</p>
                    <p>@ESCHOOL.Resources.Resource.PositionChangeMsg103</p>
                    <p>@ESCHOOL.Resources.Resource.PositionChangeMsg104</p>
                    <p>@ESCHOOL.Resources.Resource.PositionChangeMsg105</p>
                    <br />
                </div>
                <style>
                    #panelbarHelp {
                        width: 100%;
                        margin: 0 auto;
                    }
                </style>

                <script>
                    $(document).ready(function() {
                        $("#panelbarHelp").kendoPanelBar({
                            animation: {
                                collapse: {
                                    duration: 500,
                                    effects: "fadeOut"
                                },
                                expand: {
                                    duration: 500,
                                    effects: "expandVertical fadeIn"
                                }
                            }
                        });
                    });
                </script>
            </li>
        </ul>
        <!--#endregion -->
        <div class="row" style="border: thin solid rgb(120,120,120); padding-top:2px; padding-bottom:5px;">
            <section class="col order-1 col-md-5">
                <h5 class="ra-well-title card-header top-left" style="padding-top: 2px; padding-bottom:2px;"> <kbd>  @ESCHOOL.Resources.Resource.Students</kbd></h5>
                <div>
                    <div id="gridStudents"></div>
                </div>
                <style>
                    #gridStudents td {
                        padding: 8px;
                    }
                </style>
            </section>

            <div class="col order-2 col-md-2 ra-well-title card-header k-content">
                <div class="col" id="center">
                    <div id="wrap" class="row" style="height:8rem; width: 8rem; position:center">
                        <div class="card">
                            <img id="imgpreviewStudent" name="imgStudent" src="@("~/Upload/Students/default.png")" asp-append-version="true" class="img-fluid img-thumbnail" />
                        </div>
                    </div>
                </div>
                <hr class="space-1" />
                <div>
                    <ul id="fieldlist">
                        <li>
                            <label>@ESCHOOL.Resources.Resource.StudentName</label>
                            <input id="name" style="text-align: center" disabled />
                        </li>
                        <li>
                            <label>@ESCHOOL.Resources.Resource.RegistrationStatus</label>
                            <input id="statuCategory" style="text-align: center" disabled />
                        </li>
                        <li>
                            <input id="registrationTypeCategory" style="text-align: center" disabled />
                        </li>
                        <li>
                            <input id="dateOfRegistration" style="text-align: center" disabled />
                        </li>

                        <li>
                            <label>@ESCHOOL.Resources.Resource.IssuedInvoice</label>
                            <input id="cutInvoiceId" style="text-align: center" disabled />
                        </li>
                        <li>
                            <label>@ESCHOOL.Resources.Resource.UnissuedInvoice</label>
                            <input id="uncutInvoiceId" style="text-align: center" disabled />
                        </li>
                    </ul>
                </div>
            </div>

            <section class="col order-3 col-md-5">
                <h5 class="ra-well-title card-header top-left" style="padding-top:2px; padding-bottom:2px;"> <kbd>@ESCHOOL.Resources.Resource.Fees</kbd></h5>
                <div id="gridFees"></div>

                <h5 class="ra-well-title card-header top-left" style="padding-top: 2px; padding-bottom: 2px;"> <kbd>@ESCHOOL.Resources.Resource.Installments</kbd></h5>
                <div id="gridInstallments1"></div>
            </section>
        </div>

        <!--#region style -->
        <style>
            #middle-pane {
                color: #000;
                background-color: #ccc;
            }

            #bottom-pane {
                color: #000;
                background-color: #aaa;
            }

            #left-pane {
                color: #000;
                background-color: #eee;
                padding: 0 0;
            }

            #right-pane {
                color: #000;
                background-color: #eee;
                padding: 0 0;
            }

            .pane-content {
                padding: 1px 1px;
            }

            .k-grid td {
                white-space: nowrap;
                text-overflow: ellipsis;
                padding: 1px;
            }

            #grid .k-grid-toolbar {
                padding: .6em 1.3em .6em .4em;
            }

            #gridFees .k-grid-content {
                height: 130px;
                max-height: 130px;
            }

            #gridInstallments1 .k-grid-content {
                height: 140px;
                max-height: 140px;
            }

            #gridInstallments2 .k-grid-content {
                height: 260px;
                max-height: 260px;
            }

            #gridStudents .k-grid-content {
                height: 270px;
                max-height: 270px;
                padding: 0;
            }

            form label {
                font-weight: bold;
                font-size: 12px;
            }

            .k-header {
                font-weight: bold !important;
                font-size: 12px;
            }

            /*Settings gridInstallment special color*/
            #gridInvoiceUnplan > table > tbody > tr:hover,
            #gridInvoiceUnplan .k-grid-content > table > tbody > tr:hover {
                color: black;
            }

            /*GRID header WRAP*/
            .gridIP .k-grid-header .k-header .k-link {
                height: auto;
            }

            .gridIP .k-grid-header .k-header {
                white-space: normal;
            }

            .critical {
                background-color: #fdd;
                color: black;
            }

            .warning {
                background-color: #fda;
                color: black;
            }

            .ok {
                background-color: #ced;
                color: black;
            }

            .critical2 {
                color: #fdd;
            }

            .warning2 {
                color: #fda;
            }

            .ok2 {
                color: #ced;
            }

            .k-upload-status {
                display: none;
            }

            .ui-datepicker.ui-datepicker-inline {
                width: 100% !important;
            }

            div.border {
                border-style: solid;
                border-color: coral;
            }

            #fieldlist {
                margin: 0 0 -2em;
                padding: 0;
            }

                #fieldlist li {
                    list-style: none;
                    padding-bottom: 0.5em;
                }

            hr.space-1 {
                background: transparent;
                color: transparent;
                margin: 0;
                border-style: none;
                height: 0.5vw;
            }
        </style>
        <!--#endregion -->

        <div class="row" id="InInstallment" style="padding-top: 5px;">
            <h5 class="ra-well-title card-header top-left" style="padding-top: 2px; padding-bottom:2px;">
                <kbd>@ESCHOOL.Resources.Resource.PositionChange</kbd>
                <kbd style="float: right;">@ESCHOOL.Resources.Resource.ProcessDate:&nbsp;@Model.Period&nbsp;</kbd>
            </h5>

            <div>
                <div id="gridInstallments2" style="max-width:1128px; padding:5px;"></div>
            </div>

        </div>
    </form>

    <!--#region dictionary -->
    <script>
        var dictionary =
        {
            'tr-TR': {
                select: 'Seç',
                selectbankName: 'Banka Seçimini Yapınız.',
                enterValidAmount: 'Geçerli Bir Tutar Giriniz.',
                selectclassroom: 'Öğrencinin Sınıfını Giriniz.',
                feetableempty: 'Ücret tablosu girilmemiş.',
                studentfeeempty: 'Öğrenci ücretleri girilmemiş.',
                aboutRefundMsg: 'Notlarınız Kaydedildi.',
                deleted: "Tahsil Kaydı Silindi.",
                delete: "Tahsil Kaydı Silinecek, Emin misiniz?",
                startPlan: "Fatura Planlaması Yapılacak, Emin misiniz?",
                maxTotal: "Dikkat; Bakiye Tutarından Büyük Bir Tutar Giremezsiniz.",
                cut: "Kesildi",
                unCut: "Kesilmedi",
                planned: "Planlı",
                unPlanned: "Plansız",
                isExceed: "Girilen Tutar Çok Büyük.",
                titleMsg: 'Kullanıcı Mesajı:',
                msgOk: 'Tamam'
            },

            'en-US': {
                select: 'Select',
                selectbankName: 'Select the bank name.',
                enterValidAmount: 'Enter Valid Amount.',
                selectclassroom: "Enter Student's Class.",
                feetableempty: 'The wage table has not been entered.',
                studentfeeempty: 'Enter student fees.',
                aboutRefundMsg: 'Your notes have been recorded.',
                deleted: "Student collections record deleted.",
                delete: "Are you sure, Collection record will be deleted?",
                startPlan: "Invoice Planning Will Be Done, Are You Sure?",
                maxTotal: "Attention; You cannot enter an amount greater than the balance amount.",
                cut: "Cut",
                unCut: "Uncut",
                planned: "Planned",
                unPlanned: "Unplanned",
                isExceed: "The amount entered is too large.",
                titleMsg: 'User message:',
                msgOk: 'OK'
            },
        }
        function getByCulture(culture, word) {
            return dictionary[culture][word]
        }
    </script>
    <!--#endregion -->
    <!--#region students -->
    <script>
        function onChange(arg) {
            var grid = $("#gridStudents").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            var filename = document.getElementById('imgpreviewStudent').value;
            filename = selectedItem.studentPicture;
            var ID = selectedItem.studentID
            if (ID == 0) var ID = $("#studentID").val();

            document.getElementById("studentID").value = ID;
            document.getElementById("imgpreviewStudent").src = '@Url.Content("~/Upload/Students/")' + filename;
            document.getElementById("name").value = selectedItem.name;

            document.getElementById("statuCategory").value = selectedItem.statuCategory;
            document.getElementById("registrationTypeCategory").value = selectedItem.registrationTypeCategory;

            var date = kendo.toString(kendo.parseDate(selectedItem.dateOfRegistration), "dd/MM/yyyy");
            document.getElementById("dateOfRegistration").value = date;

            document.getElementById("cutInvoiceId").value = selectedItem.cutInvoice.toFixed(2);
            document.getElementById("uncutInvoiceId").value = selectedItem.uncutInvoice.toFixed(2);


            $.ajax({
                type: "POST",
                //url: "/M310PositionChanges/StudentDebtDataRead/" + "@Model.UserID" + "/" + ID,
                url: "/M310Collections/SchoolDebtDataRead/" + "@Model.UserID" + "/" + "@Model.Period" + "/" + ID,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function(result) {
                    var grid = $("#gridFees").data("kendoGrid");
                    var dataSource = new kendo.data.DataSource({ data: result });
                    grid.setDataSource(dataSource);
                },
            });
            $.ajax({
                type: "POST",
                url: '/M310PositionChanges/InstallmentDataRead1/' + "@Model.UserID" + "/" + ID,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function(result) {
                    var grid = $("#gridInstallments1").data("kendoGrid");
                    var dataSource = new kendo.data.DataSource({ data: result });
                    grid.setDataSource(dataSource);
                    /*  grid.dataSource.read();*/
                },
            });

            var grid = $("#gridInstallments2").data("kendoGrid");
            grid.dataSource.options.transport.read.url = "/M310PositionChanges/InstallmentDataRead2/" + "@Model.UserID" + "/" + ID;
            grid.dataSource.read();
            grid.refresh();

        };

        var isSelect = false;
        var record1 = 0;
        $(document).ready(function() {
            var crudServiceBaseUrl = "/M310PositionChanges/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "GridStudentDataRead/" + "@Model.UserID",
                            dataType: "json"
                        },
                        parameterMap: function(options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "viewModelId",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                firstName: { editable: false, type: "string" },
                                lastName: { editable: false, type: "string" },
                                statuCategory: { editable: false, type: "string" },
                                registrationTypeCategory: { editable: false, type: "string" },
                                dateOfRegistration: { editable: false, type: "date", format: "{0:yyyy-MM-dd HH:mm:ss}" },
                                cutInvoice: { editable: false, type: "number", format: "{0:#,##}" },
                                uncutInvoice: { editable: false, type: "number", format: "{0:#,##}" },
                                studentPicture: { editable: false, type: "string" },
                            }
                        }
                    },
                });

            var first = 1;
            var grid = $("#gridStudents").kendoGrid({
                dataSource: dataSource,
                sortable: {
                    mode: "single",
                    allowUnsort: false
                },
                resizable: true,
                selectable: 'row',
                change: onChange,
                toolbar: [
                    { template: kendo.template($("#template").html()) }
                ],
                columns: [
                    {
                        template:
                            "<div class='customer-photo'" +
                            "style='background-image: url(../Upload/Students//#:studentPicture#); width: 28px'></div>",
                    },
                    { field: "name", title: "@ESCHOOL.Resources.Resource.StudentName", footerTemplate: "#= sumStudent(1) #", width: "180px", },
                    { field: "studentClassroom", title: "@ESCHOOL.Resources.Resource.Classrooms", width: "135px" },
                    { field: "studentNumber", title: "@ESCHOOL.Resources.Resource.StudentNumber", width: "65px" },
                    { field: "@Model.CategoryName2" },

                    { field: "registrationTypeCategory" },
                    { field: "cutInvoice", format: "{0:#,##}" },
                    { field: "uncutInvoice", format: "{0:#,##}" },
                    { field: "studentPicture" },
                ],
                dataBinding: function() {
                    record = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                },
                dataBound: function(e) {
                    if (isSelect == false) {
                        var selectID = ('@TempData["studentID"]');
                        if (selectID == 0) {
                            grid.select("tr:eq(0)");
                        }
                        else {
                            //Select scroll
                            gridSelectById(selectID), isSelect = true

                            //Select scroll
                            var scrollContentOffset = this.element.find("tbody").offset().top;
                            var selectContentOffset = this.select().offset().top;
                            var distance = selectContentOffset - scrollContentOffset;

                            //animate our scroll
                            this.element.find(".k-grid-content").animate({
                                scrollTop: distance
                            }, 400);
                        };
                    }
                    showLoadingOff();
                },
            });

            var dropDown = grid.find("#paymentDropDown").kendoDropDownList({
                optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
                dataTextField: "@Model.CategoryName2",
                dataValueField: "categoryID",
                dataSource: {
                    type: "json",
                    severFiltering: true,
                    transport: {
                        read: {
                            url: "/M310PositionChanges/PaymentTypeCombo",
                            dataType: "json"

                        },
                    }
                },
                change: function() {
                    showLoadingOn();
                    var value = this.value();
                    if (value == 0 || value != first) {
                        $.ajax({
                            type: "POST",
                            url: '/M310PositionChanges/GridStudentDataReadFilter/' + "@Model.UserID" + '/' + value,
                            dataType: "json",

                            success: function(result) {
                                var grid = $("#gridStudents").data("kendoGrid");
                                var dataSource = new kendo.data.DataSource({ data: result });
                                grid.setDataSource(dataSource);
                            },
                            error: function(httpRequest, textStatus, errorThrown) {
                                alert("Error: " + textStatus + " " + errorThrown + " " + httpRequest);
                            }
                        });
                        first = 0;
                    };
                },
            }).data("kendoDropDownList");
            var grid = $("#gridStudents").data("kendoGrid");
            grid.hideColumn(4);
            grid.hideColumn(5);
            grid.hideColumn(6);
            grid.hideColumn(7);
            grid.hideColumn(8);
        })

        function sumStudent(e) {
            var total = 0;
            var $grid = $('#gridStudents');
            var kendo = $grid.data().kendoGrid;
            var data = kendo.dataSource.data();
            var amount = 0;
            for (var i = 0; i < data.length; i++) {
                if (e == 1) amount += 1;
                if (amount == NaN) {
                    amount = 0;
                }
            }
            total = amount;
            return total;
        }

        function gridSelectById(id) {
            var grid = $("#gridStudents").data().kendoGrid;
            var data = grid.dataSource.data();
            for (var i = 0; i < data.length; i++) {
                if (data[i].studentID == id) {
                    var select = grid.tbody.find('tr[data-uid="' + data[i].uid + '"]');
                    grid.select(select);
                }
            }
            var selectedRow = grid.select();
            var selectedDataItem = grid.dataItem(selectedRow);
        }

    </script>
    <script>
        function showLoadingOn() {
            var myGrid = $("#gridStudents").getKendoGrid();
            kendo.ui.progress($("#gridStudents"), true);
        }
        function showLoadingOff() {
            var myGrid = $("#gridStudents").getKendoGrid();
            kendo.ui.progress($("#gridStudents"), false);
        }
    </script>
    <!--#endregion -->
    <!--#region grid fee -->
    <script>
        $(document).ready(function() {
            var crudServiceBaseUrl = "/M310PositionChanges/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "StudentDebtDataRead/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },
                        parameterMap: function(options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },

                    batch: true,
                    schema: {
                        model: {
                            id: "studentDebtID",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                studentID: { editable: false, type: "number" },
                                schoolFeeID: { editable: false, type: "number" },
                                period: { editable: false, type: "string" },
                                feeName: { editable: false, type: "string" },
                                selectFee: { type: "boolean" },
                                selectDiscount: { type: "boolean" },
                                unitPrice: { editable: true, type: "number" },
                                discount: { editable: false, type: "number" },
                                amount: { editable: false, type: "number" },
                                isList: { editable: true, type: "boolean" }
                            }
                        }
                    },
                });

            $("#gridFees").kendoGrid({
                dataSource: dataSource,
                pageable: false,
                resizable: true,
                selectable: 'row',
                columns: [
                    { field: "feeName", title: "@ESCHOOL.Resources.Resource.FeeName", footerTemplate: "#= sumAmounts(1) #", width: "125px", },
                    { field: "unitPrice", title: "@ESCHOOL.Resources.Resource.Amount", template: "#if(unitPrice === 0){#  #}else{# #=kendo.toString(unitPrice, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmounts(2),'n') # </div>", attributes: { style: "text-align:right" }, width: "80px" },
                    { field: "discount", title: "@ESCHOOL.Resources.Resource.Discount", template: "#if(discount === 0){#  #}else{# #=kendo.toString(discount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmounts(3),'n') # </div>", attributes: { style: "text-align:right" }, width: "70px" },
                    { field: "amount", title: "@ESCHOOL.Resources.Resource.RegistrationFee", template: "#if(unitPrice === 0){#  #}else{# #=kendo.toString(amount = unitPrice - discount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumAmounts(4),'n') # </div>", attributes: { style: "text-align:right" }, width: "80px" },
                    { field: "isList", width: "40px", title: "@ESCHOOL.Resources.Resource.List", template: "<input  #if (isList) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },
                ],
            });
        });

        function sumAmounts(e) {
            var total = 0;
            var $grid = $('#gridFees');
            var kendo = $grid.data().kendoGrid;
            var data = kendo.dataSource.data();
            var amount = 0;
            for (var i = 0; i < data.length; i++) {
                if (e == 1) amount += 1;
                if (e == 2) amount += parseFloat(data[i].unitPrice);
                if (e == 3) amount += parseFloat(data[i].discount);
                if (e == 4) amount += parseFloat(data[i].amount);
                if (amount == NaN) {
                    amount = 0;
                }
            }
            total = amount;
            return total;
        }
    </script>
    <!--#endregion -->
    <!--#region grid Installments -->
    <script>
        $(document).ready(function() {
            var crudServiceBaseUrl = "/M310PositionChanges/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "InstallmentDataRead1/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },
                        parameterMap: function(options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },

                    batch: true,
                    schema: {
                        model: {
                            id: "studentInstallmentID",
                            fields: {
                                studentInstallmentID: { editable: false, type: "number" },
                                schoolID: { editable: false, type: "number" },
                                studentID: { editable: false, type: "number" },
                                installmentDate: { editable: false, type: "date" },
                                installmentNo: { editable: false, type: "number" },
                                category: { editable: false, type: "string" },
                                installmentAmount: { editable: false, type: "number", format: "{0:#,##}" },
                                balance: { editable: false, type: "number", format: "{0:#,##}" },
                                status: { editable: false, type: "string" },
                            }
                        }
                    },
                });

            var grid = $("#gridInstallments1").kendoGrid({
                dataSource: dataSource,
                navigatable: true,
                pageable: false,
                resizable: true,
                selectable: 'row',
                columns: [
                    { field: "installmentDate", title: "@ESCHOOL.Resources.Resource.Date", width: "80px", format: "{0:dd.MM.yyyy}", template: '#= kendo.toString(kendo.parseDate(installmentDate), "dd/MM/yyyy")#' },
                    { field: "installmentNo", title: "@ESCHOOL.Resources.Resource.Number", width: "55px", template: "#=installmentNo#" },
                    { field: "category", title: "@ESCHOOL.Resources.Resource.Type", width: "65px", template: "#=category#" },
                    { field: "installmentAmount", title: "@ESCHOOL.Resources.Resource.Amount", width: "85px", template: "#if(installmentAmount === 0){#  #}else{# #=kendo.toString(installmentAmount, 'n')# #}#", attributes: { style: "text-align:right" } },
                    { field: "balance", title: "@ESCHOOL.Resources.Resource.BalanceAmount", width: "85px", template: "#if(balance === 0){#  #}else{# #=balance#  #}#", attributes: { style: "text-align:right" } },
                    { field: "status", title: "@ESCHOOL.Resources.Resource.Status", width: "55px", template: "#=status#" },
                ],

                dataBound: function(e) {
                    var rows = e.sender.tbody.children();
                    var refund = 0;
                    var total = 0;
                    for (var j = 0; j < rows.length; j++) {
                        var row = $(rows[j]);
                        var dataItem = e.sender.dataItem(row);

                        var amount = dataItem.get("installmentAmount");
                        var payment = dataItem.get("previousPayment");
                        total += amount;
                        var cell = row.children();
                        if ('@TempData["color"]' == "#222")
                            cell.addClass(getColorClass2(amount, payment));
                        else
                            cell.addClass(getColorClass(amount, payment));
                    }
                },

            });
        });

        function getColorClass(amount, payment) {
            if (amount == payment) {
                return "critical";
            }
            else if (payment > 0) {
                return "ok";
            }
        }

        function getColorClass2(amount, payment) {
            if (amount == payment) {
                return "critical2";
            }
            else if (payment > 0) {
                return "ok2";
            }
        }

        function getColorClassInv(sw) {
            if (sw) {
                return "critical";
            }
        }

        function getColorClassInv2(sw) {
            if (sw) {
                return "critical2";
            }
        }

    </script>

    <!--#endregion -->
    <!--#region buttons, textarea -->
    <script>
        $(document).ready(function () {
            $('body').kendoTooltip({
                filter: '[title]:not([title=""])',
                autoHide: true,
                position: "top",
                animation: {
                    open: {
                        effects: "zoom",
                        duration: 150
                    }
                }
            });
        });
    </script>
    <!--#endregion -->
    <!--#region upload -->
    <script>
        var previewingStudent = function(event) {
            var result = document.getElementById("imgpreviewStudent")
            result.src = URL.createObjectURL(event.tDiscountrget.files[0]);
        };

        $(document).ready(function() {
            $("#imgfileStudent").kendoUpload({
                async: {
                    removeUrl: "remove",
                    autoUpload: true
                },
                localization: {
                    select: '<i class="fa fa-upload"></i>'
                },
                showFileList: false
            });
        });

    </script>

    <script>
        $(document).ready(function() {
            $('#M310PositionChanges').submit(function() {
                $('#M310PositionChanges').find("[required=\"required\"]").attr("required", false);
                $(".needValidation").attr("required", true);
            });

            var validator = $("#M310PositionChanges").kendoValidator().data("kendoValidator"),
                status = $(".status");
        });
    </script>
    <!--#endregion -->
    <!--#region style -->
    <style type="text/css">
        .customer-photo {
            display: inline-block;
            width: 28px;
            height: 28px;
            border-radius: 50%;
            background-size: 28px 31px;
            background-position: center center;
            vertical-align: middle;
            line-height: 28px;
            box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
            margin-left: 0px;
        }

        .toolbar {
            float: right;
        }

        #center {
            /*        display: block;*/
            margin-left: 22px;
            /*        margin-right: auto;*/
            /*        border: 8px ridge blue;*/
        }
    </style>
    <!--#endregion -->
    <!--#region Add/Update -->
    <!--#endregion -->
    @*Notification*@
    <span id="popupNotification"></span>
    <div id="appendto" class="demo-section k-content"></div>
    <script>
        function showPopupNotification() {
            var popupNotification = $("#popupNotification").kendoNotification().data("kendoNotification");
            var d = new Date();
            popupNotification.show(kendo.toString(d, 'HH:MM:ss.') + kendo.toString(d.getMilliseconds(), "000"), "error");
        };
    </script>


    <script>
        var record = 0;
        $(document).ready(function() {
            var crudServiceBaseUrl = "/M310PositionChanges/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "InstallmentDataRead2/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },
                        update: {
                            url: function(options) {
                                var url = crudServiceBaseUrl + "InstallmentDataUpdate/" + options.models[0].id;
                                return url;
                            },
                            complete: function(e) {
                                $("#gridInstallments2").data("kendoGrid").dataSource.read();
                            },
                            type: "post",
                            dataType: "json"
                        },

                        parameterMap: function(options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,

                    schema: {
                        model: {
                            id: "studentInstallmentID",
                            fields: {
                                studentInstallment:
                                {
                                    studentInstallmentID: { editable: false, type: "number" },
                                    schoolID: { editable: false, type: "number" },
                                    studentID: { editable: false, type: "number" },
                                    period: { editable: false, type: "string" },
                                    studentName: { editable: false, type: "string" },
                                    parentName: { editable: false, type: "string" },
                                    installmentDate: { editable: false, type: "date" },
                                    installmentNo: { editable: true, type: "number" },
                                    categoryID: { editable: false, type: "number" },
                                    installmentAmount: { editable: false, type: "number", format: "{0:#,##}" },
                                    previousPayment: { editable: false, type: "number" },
                                    bankID: { editable: false, type: "number" },
                                    checkCardNo: { editable: false, type: "string" },
                                    feeName: { editable: false, type: "string" },
                                    isPrint: { editable: false, type: "boolean" },
                                    status: { editable: false, type: "string" },
                                    statusCategoryID: { editable: false, type: "number" },
                                    accountReceiptNo: { editable: false, type: "string" },
                                    paymentDate: { editable: false, type: "date" },
                                    explanation: { editable: false, type: "string" },
                                    checkBankName: { editable: false, type: "string" },
                                    checkNo: { editable: false, type: "string" },
                                    drawer: { editable: false, type: "string" },
                                    endorser: { editable: false, type: "string" },
                                },
                                parameter2:
                                {
                                    categoryID: { editable: false, type: "number" },
                                    categorySubID: { editable: false, type: "number" },
                                    categoryName: { editable: false, type: "string" },
                                    categoryLevel: { editable: false, type: "string" },
                                    sortOrder: { editable: false, type: "number" },
                                    isActive: { editable: false, type: "boolean" },
                                    nationalityCode: { editable: false, type: "string" },
                                }
                            }
                        }
                    },
                    aggregate: [
                        { field: "studentInstallment.installmentAmount", aggregate: "sum" },
                        { field: "studentInstallment.previousPayment", aggregate: "sum" }
                    ]
                });

            var first = 1;
            var grid = $("#gridInstallments2").kendoGrid({
                dataSource: dataSource,
                pageable: false,
                resizable: true,
                ajax: true,
                selectable: 'row',

                columns: [
                    { command: ["edit"], title: "&nbsp;", width: "100px" },
                    { title: "#", template: "#= ++record #", width: 35, locked: true },
                    { field: "studentName", title: "@ESCHOOL.Resources.Resource.StudentName", width: "150px", template: "#=studentName#", 'editable': function() { return false } },
                    { field: "parentName", title: "@ESCHOOL.Resources.Resource.ParentName", width: "150px", template: "#=parentName#", 'editable': function() { return false } },
                    { field: "studentInstallment.categoryID", title: "@ESCHOOL.Resources.Resource.Type", width: "100px", template: "#=parameter2.@Model.CategoryName2#", 'editable': function() { return false } },
                    { field: "studentInstallment.installmentNo", title: "@ESCHOOL.Resources.Resource.Number", width: "70px", template: "#=studentInstallment.installmentNo#", 'editable': function() { return false } },
                    { field: "studentInstallment.installmentDate", title: "@ESCHOOL.Resources.Resource.PaymentDate", width: "120px", editor: dateEdit, format: "{0:dd.MM.yyyy}", template: '#= kendo.toString(kendo.parseDate(studentInstallment.installmentDate), "dd/MM/yyyy")#', },
                    { field: "studentInstallment.installmentAmount", title: "@ESCHOOL.Resources.Resource.Amount", width: "90px", template: "#if(studentInstallment.installmentAmount === 0){#  #}else{# #=kendo.toString(studentInstallment.installmentAmount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sum,'n') # </div>", attributes: { style: "text-align:right" }, 'editable': function() { return false } },
                    { field: "studentInstallment.previousPayment", title: "@ESCHOOL.Resources.Resource.PreviousPayment", width: "90px", template: "#if(studentInstallment.previousPayment === 0){#  #}else{# #=kendo.toString(studentInstallment.previousPayment, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#= sum #</div>", attributes: { style: "text-align:right" }, 'editable': function() { return false } },
                    { field: "studentInstallment.statusCategoryID", title: "@ESCHOOL.Resources.Resource.Status", width: "80px", editor: StatusTypeDropDown, template: "#=parameter3.@Model.CategoryName2#", },
                    { field: "studentInstallment.bankID", title: "@ESCHOOL.Resources.Resource.Bank", width: "200px", editor: BankTypeDropDown, template: '# if (studentInstallment.bankID > 0) {#<div >#:bank.bankName#</div>#} else {# #}#' },
                    { field: "studentInstallment.checkBankName", title: "@ESCHOOL.Resources.Resource.CheckBank", width: "200px", template: "#=studentInstallment.checkBankName#" },
                    { field: "studentInstallment.checkCardNo", title: "@ESCHOOL.Resources.Resource.CheckNo", width: "70px", template: "#=studentInstallment.checkCardNo#" },
                    { field: "studentInstallment.drawer", title: "@ESCHOOL.Resources.Resource.Drawer", width: "200px", template: "#=studentInstallment.drawer#" },
                    { field: "studentInstallment.endorser", title: "@ESCHOOL.Resources.Resource.Endorser", width: "200px", template: "#=studentInstallment.endorser#" },
                    { field: "studentInstallment.explanation", title: "@ESCHOOL.Resources.Resource.Explanation", width: "300px", template: "#=studentInstallment.explanation#" },
                ],
                editable: "popup",

                dataBinding: function() {
                    record = 0;
                },

            });
            function dateEdit(container, options) {
                $('<input   name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDatePicker({
                        format: "dd/MM/yyyy"
                    });
            }
            dropDown.bind("dataBound", function() {
                this.trigger("change");
            });

            function StatusTypeDropDown(container, options) {
                $('<input required name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        autoBind: false,
                        valuePrimitive: true,
                        dataTextField: "@Model.CategoryName2",
                        dataValueField: "categoryID",
                        index: -1,
                        dataSource: {
                            dataType: "json",
                            transport: {
                                read: "/M310PositionChanges/StatusTypeDataRead/" + "@Model.UserID",
                            }
                        },
                    });
            };

            function BankTypeDropDown(container, options) {
                $('<input required name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        optionLabel: { bankID: 0, bankName: " " },
                        autoBind: false,
                        valuePrimitive: true,
                        dataTextField: "bankName",
                        dataValueField: "bankID",
                        index: -1,
                        dataSource: {
                            dataType: "json",
                            transport: {
                                read: "/M310PositionChanges/BankTypeDataRead/" + "@Model.UserID",
                            }
                        }
                    });
            };
        });

    </script>
    <script>
        $("#wrap img").hover(function () {
            kendo.fx(this).zoom("in").startValue(1).endValue(1.3).play();
        }, function () {
            kendo.fx(this).zoom("out").endValue(1).startValue(1.3).play();
        });

        $("#divheader").show(1000);
    </script>
    <script>
        window.history.replaceState('', '', window.location.pathname);
    </script>
</body>
</html>

