@model ESCHOOL.ViewModels.StudentViewModel
@{
    System.Globalization.CultureInfo.CurrentCulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    System.Globalization.CultureInfo.CurrentUICulture = System.Globalization.CultureInfo.CreateSpecificCulture(@Model.SelectedCulture);
    var culture = System.Globalization.CultureInfo.CurrentCulture.ToString();
}
@addTagHelper *, Kendo.Mvc

@{
    var messages = new Dictionary<string, string>() { { "custom", "Please choose another Start Time." } };
    var rules = new Dictionary<string, string>() { { "custom", "customFunction" } };
}
<meta charset="UTF-8">
<!--#region head -->
<head>
    <style>
        html {
            font-size: 13px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
    <title></title>
    <link href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.common.min.css" rel="stylesheet" />
    <link rel="stylesheet" id="skin-css" href="@TempData["theme"]" />
    <link rel="stylesheet" id="skin-css" href="@TempData["themeMobile"]" />
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2021.2.616/js/kendo.all.min.js"></script>
    <script src="~/telerik/2021.2.616/js/jszip.min.js"></script>
    <script src="@Url.Content("~/telerik/2021.2.616/js//cultures/kendo.culture." + culture + ".min.js")"></script>
    <script src="@Url.Content("~/telerik/2021.2.616/js//messages/kendo.messages." + culture + ".min.js")"></script>

    <script type="text/javascript">
        kendo.culture("@culture");
    </script>

</head>
<!--#endregion -->
<body data-spy="scroll" data-target=".navbar" onload="refundDivLoad()">
    <!--#region alert -->
    @if (ViewBag.IsSuccess == true)
    {
        <br />
        <br />
        <br />
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@ESCHOOL.Resources.Resource.Warning</strong>@ESCHOOL.Resources.Resource.ValidationError<br />
            <a asp-contoller="M210Student" asp-action="AddOrEditStudent" asp-route-id="@Model.SchoolID">@ESCHOOL.Resources.Resource.ClickToContinue</a>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @{
        var total = @Model.StudentTemp.RefundAmount1 + @Model.StudentTemp.RefundAmount2 + @Model.StudentTemp.RefundAmount3;
    }

    @if (@total > 0 && @Model.StudentTemp.RefundSW == "N")
    {
        <br />
        <br />
        <br />
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@ESCHOOL.Resources.Resource.Warning</strong>@ESCHOOL.Resources.Resource.RefundMsg100&emsp;@total.ToString("0.##")&emsp;@ESCHOOL.Resources.Resource.RefundMsg101&emsp;@ESCHOOL.Resources.Resource.RefundMsg103<br />
        </div>
    }

    @if (@total > 0 && @Model.StudentTemp.RefundSW == "D")
    {
        <br />
        <br />
        <br />
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@ESCHOOL.Resources.Resource.Warning</strong>@ESCHOOL.Resources.Resource.RefundMsg100&emsp;@total.ToString("0.##")&emsp;@ESCHOOL.Resources.Resource.RefundMsg101&emsp;@Model.StudentTemp.RefundedDueDate.Value.ToShortDateString()&emsp;@ESCHOOL.Resources.Resource.RefundMsg102<br />
        </div>
    }

    @if (@Model.StudentTemp.StatuCategoryName == "İptal" || @Model.StudentTemp.StatuCategoryName == "Takipte (İptal)")
    {
        <br />
        <br />
        <br />
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@ESCHOOL.Resources.Resource.Warning</strong>@ESCHOOL.Resources.Resource.CancelMsg100, @ESCHOOL.Resources.Resource.CancelMsg101<br />
            <hr />
            @Model.StudentTemp.AboutCancellation<br />
        </div>

    }
    <!--#endregion -->

    <form id="M210StudentID" asp-controller="M210Student" asp-action="AddOrEditStudent" asp-route-id="@Model.UserID" enctype="multipart/form-data" method="post">
        <div class="demo-section k-content fixed-top">
            <div id="toolbarMenu"></div>
        </div>
        <br />
        <div id="windowSiblingNew" style="display: none;">
            <div class="row k-form-hint">
                @ESCHOOL.Resources.Resource.StudentCopy1
            </div>

            <div id="gridStudents2"></div>
            <style>
                #gridStudents2 td {
                    padding: 3px;
                }
            </style>
        </div>

        <div id="windowSibling" style="display: none;">
            <ul id="panelbarSibling">
                <li class="k-state-active" id="panelbarSibling1">
                    <span class="k-link k-state-selected">
                        <a>
                            <strong>@Model.StudentName;&emsp;</strong>
                            @ESCHOOL.Resources.Resource.Siblings:&emsp;
                        </a>
                    </span>
                    <div id="gridSibling1"></div>
                    <style>
                        .k-grid-toolbar a {
                            float: right;
                        }
                    </style>
                </li>

                <li class="k-state-active" id="panelbarSibling2">
                    <span class="k-link k-state-selected">@ESCHOOL.Resources.Resource.SelectSibling</span>
                    <div id="gridSibling2"></div>
                    <script>
                        var panelBar = $("#panelbarSibling").kendoPanelBar().data("kendoPanelBar");
                        panelBar.bind("select", function () {
                            displayLoading("#gridSibling2");
                            gridSibling2Read();
                        });
                        function displayLoading(target) {
                            var element = $(target);
                            kendo.ui.progress(element, true);
                            setTimeout(function () {
                                kendo.ui.progress(element, false);
                            }, 1000);
                        }
                    </script>
                    <style>
                        #gridSibling2 td {
                            padding: 3px;
                        }
                    </style>
                </li>
            </ul>
            <script>
                $(document).ready(function () {
                    $("#panelbarSibling").kendoPanelBar({
                        expandMode: "multiple"
                    });
                });
            </script>
        </div>
        @*gridSibling1 Using*@
        <script id="template1" type="text/x-kendo-template">
            <span class="k-textbox k-grid-search k-display-flex"  style="width:240px;">
                <input autocomplete="off" placeholder=@ESCHOOL.Resources.Resource.Search class="k-input" >
                <span class="k-input-icon">
                    <span class="k-icon k-i-search"></span>
                </span>
            </span>
            <a class="k-button" href="\#" onclick="return toolbar_click1()"> <i class="k-icon k-i-logout"></i>&nbsp;&nbsp;@ESCHOOL.Resources.Resource.Close</a>
        </script>

        @*gridSibling2 Using*@
        <script id="template2" type="text/x-kendo-template">
            <span class="k-textbox k-grid-search k-display-flex"  style="width:240px;">
                <input autocomplete="off" placeholder=@ESCHOOL.Resources.Resource.Search class="k-input" >
                <span class="k-input-icon">
                    <span class="k-icon k-i-search"></span>
                </span>
            </span>
            <a class="k-button" href="\#" onclick="return toolbar_click2()"> <i class="k-icon k-i-check"></i>&nbsp;&nbsp;@ESCHOOL.Resources.Resource.Submit</a>
        </script>
        @*gridStudents Using*@
        <script id="template3" type="text/x-kendo-template">
            <span class="k-textbox k-grid-search k-display-flex"  style="width:240px;">
                <input autocomplete="off" placeholder=@ESCHOOL.Resources.Resource.Search class="k-input" >
                <span class="k-input-icon">
                    <span class="k-icon k-i-search"></span>
                </span>
            </span>
            <a class="k-button" href="\#" onclick="return toolbar_click3()"> <i class="k-icon k-i-logout"></i>&nbsp;&nbsp;@ESCHOOL.Resources.Resource.Close</a>
        </script>
        <script id="template33" type="text/x-kendo-template">
            <span class="k-textbox k-grid-search k-display-flex"  style="width:240px;">
                <input autocomplete="off" placeholder=@ESCHOOL.Resources.Resource.Search class="k-input" >
                <span class="k-input-icon">
                    <span class="k-icon k-i-search"></span>
                </span>
            </span>
            <a class="k-button" href="\#" onclick="return toolbar_click33()"> <i class="k-icon k-i-logout"></i>&nbsp;&nbsp;@ESCHOOL.Resources.Resource.Close</a>
        </script>
        <script id="template4" type="text/x-kendo-template">
            <a class="k-button" href="\#" onclick="return toolbar_click4()"> <i class="k-icon k-i-set-column-position"></i>&nbsp;&nbsp;@ESCHOOL.Resources.Resource.Amount2</a>
        </script>
        <script id="template5" type="text/x-kendo-template">
            <button id="okId" class="k-button" type="submit" onclick="return toolbar_gridInstallmentSave()" style="width:109px;"  disabled><i class="k-icon k-i-check"></i>@ESCHOOL.Resources.Resource.Okey</button>
            <a class="k-button" href="\#" onclick="return toolbar_click5()" style="width:109px;"> <i class="k-icon k-i-logout"></i>&nbsp;&nbsp;@ESCHOOL.Resources.Resource.Close</a>
        </script>

        <div id="windowStudents" style="display: none;">
            <div id="gridStudents"></div>
            <style>
                #gridStudents td {
                    padding: 3px;
                }
            </style>
        </div>

        <div id="windowInstallment" style="display: none; width:360px; height:auto;">
            <div class="row">
                <div class="custom-control custom-radio">
                    <input type="radio" asp-for="SchoolInfo.NameOnReceipt" class="k-radio" id="CustomR1" value="true" />
                    <label class="k-radio-label" for="CustomR1">@ESCHOOL.Resources.Resource.Amount</label>
                    <input asp-for="StudentInstallment.InstallmentAmount" id="installmentAmountId" class="k-textbox" type="number" min="0" style="width: 80px;" value="0" />&nbsp;
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" asp-for="SchoolInfo.NameOnReceipt" class="k-radio" id="CustomR2" value="false" />
                    <label class="k-radio-label" for="CustomR2">@ESCHOOL.Resources.Resource.Balance</label>
                    <input id="balanceId" class="k-textbox" type="number" style="width: 80px;" />
                </div>
            </div>

            <hr />
            <div class="row" id="gridWindowInstallment" style="margin: 1px 1px 1px 1px;"></div>
            <div class="row k-form-hint">
                @ESCHOOL.Resources.Resource.Message01<br />
                @ESCHOOL.Resources.Resource.Message02<br />
                @ESCHOOL.Resources.Resource.Message03<br />
                @ESCHOOL.Resources.Resource.Message04
            </div>
            <style>
                #gridWindowInstallment td {
                    width: 100%;
                }
            </style>
        </div>

        <script>
            $(function () {
                $("#select-period").kendoButtonGroup({
                    index: 0
                });
            });
        </script>

        @*<br /><br />*@

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @*Geri dönüşlerde null olmaması için*@
        <input type="hidden" asp-for="@Model.Student.StudentID" />
        <input type="hidden" asp-for="@Model.UserID" />
        <input type="hidden" asp-for="@Model.Period" />
        <input type="hidden" asp-for="@TempData["NewPeriod"]" />


        <input id="schoolID" type="hidden" asp-for="@Model.SchoolID" />
        @*        <input id="studentID"  asp-for="@Model.StudentID" />*@
        <input type="hidden" asp-for="@Model.Student.SiblingID" />
        <input type="hidden" asp-for="@Model.PSerialNumber.PSerialNumberID" />
        <input type="hidden" asp-for="@Model.StudentClassroom" />
        <input type="hidden" asp-for="@Model.SelectedCulture" />
        <input type="hidden" id="isMenu" asp-for="@Model.IsMenu" />
        <input type="hidden" id="classroomID" />
        <input type="hidden" asp-for="@TempData["studentID"]" id="studentID" />
        <input type="checkbox" style="display:none" asp-for="@Model.ViewIsNew" id="viewIsNew" />
        <input type="checkbox" style="display:none" asp-for="@Model.ViewIsFirst" />

        <input type="hidden" id="resultAmount" />
        <input type="hidden" id="resultID" />
        <input type="hidden" id="resultOnOff" value="false" />
        <input type="hidden" id="totalins" />
        <input type="hidden" id="cashID" asp-for="@Model.StudentTemp.CashPayment" />
        <input type="hidden" id="SortmsgSchool" asp-for="@ESCHOOL.Resources.Resource.SortmsgSchool" />
        <input type="hidden" id="SortMsg" asp-for="@ESCHOOL.Resources.Resource.SortMsg" />
        <input type="hidden" id="SortMsgClassroom" asp-for="@ESCHOOL.Resources.Resource.SortMsgClassroom" />
        <input type="hidden" id="SortMessage" asp-for="@ESCHOOL.Resources.Resource.SortMessage" />
        <input type="hidden" id="selectedID" />
        <input type="hidden" id="colInx" />

        <br /> <br />
        <input type="hidden" id="feeNameID" />
        <input type="hidden" id="schoolFeeID" />
        <input type="hidden" id="schoolFeeIDMore" />
        <input type="hidden" id="studentDebtID" />

        <input type="hidden" id="classroomTypeID" />

        <ul id="panelbarHelp" style="display: none;">
            <li>
                <span class="k-link">@ESCHOOL.Resources.Resource.Help</span>
                <div class="k-card-body" style="padding-left:15px;">
                    <br />
                    <p><strong>@ESCHOOL.Resources.Resource.StudentMsg01</strong></p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg02</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg03</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg04</p>
                    <p><strong>@ESCHOOL.Resources.Resource.StudentMsg041</strong></p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg042</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg043</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg044</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg045</p>

                    <p>@ESCHOOL.Resources.Resource.StudentMsg05</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg06</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg07</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg08</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg09</p>
                    <p><strong>@ESCHOOL.Resources.Resource.StudentMsg091</strong></p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg10</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg11</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg12</p>
                    <p>@ESCHOOL.Resources.Resource.StudentMsg13</p>
                    <p><strong>@ESCHOOL.Resources.Resource.ChangeInStudentMsg11</strong></p>
                    <p>@ESCHOOL.Resources.Resource.ChangeInStudentMsg12</p>
                    <p>@ESCHOOL.Resources.Resource.ChangeInStudentMsg13</p>
                    <p>@ESCHOOL.Resources.Resource.ChangeInStudentMsg14</p>
                    <p>@ESCHOOL.Resources.Resource.ChangeInStudentMsg15</p>
                    <br />
                </div>
                <style>
                    #panelbarHelp {
                        width: 100%;
                        /*     max-width: none;*/
                        margin: 0 auto;
                    }
                </style>

                <script>
                    $(document).ready(function () {
                        $("#panelbarHelp").kendoPanelBar({
                            animation: {
                                collapse: {
                                    duration: 500,
                                    effects: "fadeOut"
                                },
                                expand: {
                                    duration: 500,
                                    effects: "expandVertical fadeIn"
                                }
                            }
                        });
                    });
                </script>
            </li>
        </ul>

        <!--#region student info image name -->
        <div style="padding-left:22px;padding-right:15px;">
            <div class="k-content  row" style="padding-left:2px; padding-top: 0; border: thin solid rgb(120,120,120);">
                <div class="col order-1 col-md-1 card-header">
                    <div style="height:8rem; width: 9rem;">
                        <img id="imgpreviewStudent" name="imgStudent" src="@("~/Upload/Students/"+Model.Student.StudentPicture)" asp-append-version="true" class="img-fluid img-thumbnail" />
                        <div class="demo-section k-content" style="height:16px;">
                            <input type="file" name="imgfileStudent" id="imgfileStudent" onchange="previewingStudent(event)">
                            <input asp-for="Student.StudentPicture" id="studentPicture" class="k-textbox" style="width: 100%;" hidden />
                        </div>

                    </div>
                </div>

                <div class="col order-2 col-md-3 ra-well-title card-header top-left verticalLine" style="padding-left:60px;">
                    <h5 class="ra-well-title top-left"> <kbd>@ESCHOOL.Resources.Resource.Studentss</kbd><a id="siblingNone" style="float: right; display: none;"><i class="k-icon k-i-tell-a-friend"></i></a></h5>
                    <div class="row">
                        <div class="col">
                            <label class="card-title">@ESCHOOL.Resources.Resource.FirstName<a id="firstNameNone" style="float: right; display: none;"><i class="k-icon k-i-filter"></i></a></label>
                            <input asp-for="Student.FirstName" id="firstName" class="k-textbox" style="font-weight: bold; width: 100%;" maxlength="30" required validationMessage=@ESCHOOL.Resources.Resource.RequiredField tabindex="1" autofocus />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col" style="padding-top:15px;">
                            <label class="card-title">@ESCHOOL.Resources.Resource.LastName<a id="lastNameNone" style="float: right; display: none;"><i class="k-icon k-i-filter"></i></a></label>
                            <input asp-for="Student.LastName" id="lastName" class="k-textbox" style="font-weight: bold; width: 100%;" maxlength="30" required validationMessage=@ESCHOOL.Resources.Resource.RequiredField tabindex="2" />
                        </div>
                    </div>
                </div>
                <section class="col order-3 col-md-auto  card-header top-left verticalLine" style="width: 200px;">
                    <div class="ra-well-title top-left" style="padding-left:0; padding-right:0;">
                        <h5 class="ra-well-title top-left" style="height: 30px; padding-top: 0;"> <kbd>  @ESCHOOL.Resources.Resource.Periods</kbd></h5>
                        <div id="gridStudentPeriods"></div>
                    </div>
                </section>

                <section class="col order-4 col-md-auto verticalLine" style="width: 320px;">
                    <div class="col  ra-well-title card-header top-left" style="max-height: 200px; overflow: auto">
                        <h5 class="ra-well-title card-header top-left" style="height: 30px; padding-top: 0;"> <kbd>@ESCHOOL.Resources.Resource.Schools&nbsp;@ESCHOOL.Resources.Resource.Period:&nbsp;@Model.Period </kbd></h5>

                        <div class="row">
                            <div class="col">
                                <label asp-for="SchoolInfo.SchoolYearStart" class="control-label"></label>
                                <input asp-for="SchoolInfo.SchoolYearStart" class="form-control" id="schoolyearstart" style="width: 110px; height:22px;" tabindex="-1" readonly />
                            </div>
                            <div class="col">
                                <label asp-for="SchoolInfo.SchoolYearEnd" class="control-label"></label>
                                <input asp-for="SchoolInfo.SchoolYearEnd" class="form-control" id="schoolyearend" style="width: 110px; height:22px;" tabindex="-1" readonly />
                            </div>
                        </div>
                        <div class="row" style="padding-top:15px;">
                            <div class="col">
                                <label asp-for="SchoolInfo.FinancialYearStart" class="control-label"></label>
                                <input asp-for="SchoolInfo.FinancialYearStart" class="form-control" id="financialyearstart" style="width: 110px; height:22px;" tabindex="-1" readonly />
                            </div>
                            <div class="col">
                                <label asp-for="SchoolInfo.FinancialYearEnd" class="control-label"></label>
                                <input asp-for="SchoolInfo.FinancialYearEnd" class="form-control" id="financialyearend" style="width: 110px; height:22px;" tabindex="-1" readonly />
                            </div>
                        </div>
                    </div>

                </section>

                <section class="col order-5 col-md-auto card-header top-left" style="width: 205px;">
                    <div class="ra-well-title top-left" style="padding-left:0; padding-right:0;">
                        <h5 class="ra-well-title card-header top-left" style="height: 30px; padding-top: 0;"> <kbd>  @ESCHOOL.Resources.Resource.SerialNumbers #:@Model.StudentID</kbd></h5>
                        <div>
                            <div id="gridSerialNumbers"></div>

                        </div>
                    </div>
                </section>
            </div>
        </div>
        <style>
            .verticalLine {
                /* border-right-width: 5px; solid black;*/
                border-right: 1px solid gray;
            }
        </style>

        <!--#endregion -->
        <hr />
        <div id="vertical">
            <div id="top-pane" style="height: 100%; width: 100%">
                <div id="horizontal" style="height: 100%;">
                    <div id="left-pane">
                        <div class="pane-content">
                            <div class="k-content">
                                <div id="tabstrip" style="font-weight:bold">
                                    <ul>
                                        @*<li class="k-state-active">*@
                                        <li>
                                            @ESCHOOL.Resources.Resource.General
                                        </li>
                                        <li>
                                            @ESCHOOL.Resources.Resource.Address
                                        </li>
                                        <li>
                                            @ESCHOOL.Resources.Resource.Parent
                                        </li>
                                        <li>
                                            @ESCHOOL.Resources.Resource.MailOrder
                                        </li>
                                        <li>
                                            @ESCHOOL.Resources.Resource.FamilyInfo1
                                        </li>
                                        <li>
                                            @ESCHOOL.Resources.Resource.InvoiceAddress
                                        </li>
                                        <li>
                                            @ESCHOOL.Resources.Resource.Note
                                        </li>
                                        <li>
                                            @ESCHOOL.Resources.Resource.Agenda
                                        </li>
                                    </ul>

                                    <!--#region general panel -->
                                    <div id="General">
                                        <h5 class="ra-well-title card-header top-left" style="padding-top: 0px;"> <kbd>@ESCHOOL.Resources.Resource.Studentss </kbd></h5>
                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="Student.StudentNumber" class="control-label"></label>
                                                <input asp-for="Student.StudentNumber" class="k-textbox" style="width: 100%;" maxlength="15" tabindex="3" />
                                            </div>
                                            <div class="col">

                                                <button type="button" id="btn1" onmouseover="IdChange(this)" style="width: 100%;" onmouseout="IdChangeOld(this)" onclick="myFunction(this)">@ESCHOOL.Resources.Resource.IdNumber</button>
                                                <input asp-for="Student.IdNumber" id="studentID" class="k-textbox" style="width: 100%;" maxlength="15" onfocus="IdReset(this)" title="@ESCHOOL.Resources.Resource.TooltipId" tabindex="4" />

                                            </div>

                                            <div class="col">
                                                <label asp-for="Student.StudentSerialNumber" class="control-label"></label>
                                                <input asp-for="Student.StudentSerialNumber" class="k-textbox" style="width: 100%;" tabindex="5" title="@ESCHOOL.Resources.Resource.TooltipStudentSerialNumber1" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="Student.FirstDateOfRegistration" class="control-label"></label>
                                                <input asp-for="Student.FirstDateOfRegistration" class="form-control" id="firstdate" style="width: 120px;" readonly />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col" id="gendertype">
                                                <label asp-for="Student.GenderTypeCategoryID" class="control-label"></label>
                                                <input asp-for="Student.GenderTypeCategoryID" id="genderTypeDropDown" class="text-section k-content" style="width: 100%;" tabindex="9" />
                                            </div>
                                            <div class="col" id="bloodGroup">
                                                <label asp-for="Student.BloodGroupCategoryID" class="control-label"></label>
                                                <input asp-for="Student.BloodGroupCategoryID" id="bloodGroupDropDown" class="text-section k-content" style="width: 100%;" tabindex="12" />
                                            </div>
                                            <div class="col" id="nationality">
                                                <label asp-for="Student.NationalityID" class="control-label"></label>
                                                <input asp-for="Student.NationalityID" id="nationalityTypeDropDown" class="text-section k-content" style="width: 100%;" tabindex="13" />
                                            </div>
                                            <div class="col" id="religious">
                                                <label asp-for="Student.ReligiousID" class="control-label"></label>
                                                <input asp-for="Student.ReligiousID" id="religiousTypeDropDown" class="text-section k-content" style="width: 120px;" tabindex="14" />
                                            </div>
                                        </div>
                                        <hr style="margin:5px" />
                                        <div class="row">
                                            <div class="col" id="classroom">
                                                <label asp-for="Student.ClassroomID" class="control-label"></label>
                                                <div class="text-section k-content">
                                                    <input asp-for="Student.ClassroomID" id="classroomDropDown" style="width: 200px;" tabindex="6" />
                                                </div>
                                            </div>

                                            <div class="col" id="statu">
                                                <label asp-for="Student.StatuCategoryID" class="control-label"></label>
                                                <input asp-for="Student.StatuCategoryID" id="statusDropDown" class="text-section k-content" style="width: 178px;" tabindex="7" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="Student.DateOfRegistration" class="control-label"></label>
                                                <input asp-for="Student.DateOfRegistration" class="form-control" id="dateOfRegistration" style="width: 120px;" tabindex="8" />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col" id="school">
                                                <label asp-for="Student.SchoolID" class="control-label"></label>
                                                <div class="text-section k-content">
                                                    <input asp-for="Student.SchoolID" id="schoolDropDown" style="width: 200px;" disabled="disabled" />
                                                </div>
                                            </div>
                                            <div class="col" id="registrationtype">
                                                <label asp-for="Student.RegistrationTypeCategoryID" class="control-label"></label>
                                                <input asp-for="Student.RegistrationTypeCategoryID" id="registrationTypeDropDown" class="text-section k-content" style="width: 178px;" tabindex="10" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="Student.DateOfBird" class="control-label"></label>
                                                <input asp-for="Student.DateOfBird" class="form-control" id="dateofbird" style="width: 120px;" tabindex="11" />
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col md=auto">
                                                <label asp-for="StudentAddress.IsEMail" for="isEMail" class="required"></label>
                                                <input asp-for="StudentAddress.IsEMail" id="isEMail" class="ax-unselectable k-checkbox" type="checkbox" tabindex="15">

                                                <label asp-for="StudentAddress.EMail" class="required"></label>
                                                <input asp-for="StudentAddress.EMail" class="k-textbox" style="width: 100%;" type="email" maxlength="50" data-email-msg=@ESCHOOL.Resources.Resource.ValidEmail tabindex="16" />
                                            </div>
                                            <div class="col col-md-4">
                                                <label asp-for="StudentAddress.IsSms" for="isSms" class="required"></label>
                                                <input asp-for="StudentAddress.IsSms" id="isSms" class="ax-unselectable k-checkbox" type="checkbox" tabindex="17">

                                                <label asp-for="StudentAddress.MobilePhone" class="required"></label>
                                                <input asp-for="StudentAddress.MobilePhone" class="k-textbox" style="width: 100%;" maxlength="15" tabindex="18" />
                                            </div>
                                        </div>
                                        <div id="General1" style="padding-top:5px;">
                                            <ul id="panelbar1">
                                                <li id="panelbarfee" class="k-state-active">
                                                    @ESCHOOL.Resources.Resource.Fees
                                                    <div id="fee">
                                                        <div id="gridFees"></div>
                                                    </div>
                                                </li>

                                                <li id="panelbardetailfee">
                                                    &nbsp
                                                    @ESCHOOL.Resources.Resource.DetailedFeeEntry
                                                    <div>
                                                        <div id="gridFeesDetail"></div>
                                                    </div>
                                                    <script>
                                                        var panelBar = $("#panelbar1").kendoPanelBar().data("kendoPanelBar");
                                                        //mehmet
                                                        panelBar.bind("select", function () {
                                                            $('#gridFeesDetail').data('kendoGrid').dataSource.read()
                                                        });
                                                    </script>
                                                </li>
                                                <li id="panelbardiscount" disabled="disabled">
                                                    <label type="text" id="discountNameId"></label>&nbsp
                                                    @ESCHOOL.Resources.Resource.Discounts1
                                                    <div>
                                                        <div id="gridDiscount"></div>
                                                    </div>
                                                </li>
                                            </ul>
                                            <style>
                                                #panelbar1 {
                                                    width: 100%;
                                                    max-width: none;
                                                    margin: 0 auto;
                                                }
                                            </style>

                                            <script>
                                                $(document).ready(function () {
                                                    $("#panelbar1").kendoPanelBar({
                                                        expandMode: "multiple"
                                                    });
                                                });
                                            </script>
                                        </div>
                                    </div>
                                    <!--#endregion -->
                                    <!--#region address panel -->
                                    <div id="Address">
                                        <h5 class="ra-well-title card-header top-left" style="padding-top: 0px;"> <kbd>@ESCHOOL.Resources.Resource.Address1 </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col target" id="studentAddress1Target">
                                                <input asp-for="StudentAddress.StudentAddressID" hidden />
                                                <input asp-for="StudentAddress.StudentID" hidden />

                                                <label asp-for="StudentAddress.Address1" class="control-label"></label>
                                                <textarea asp-for="StudentAddress.Address1" id="studentAddress1" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col" id="city">
                                                <label asp-for="StudentAddress.CityParameterID1" class="control-label"></label>
                                                <input asp-for="StudentAddress.CityParameterID1" id="studentCityDropDown1" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="town">
                                                <label asp-for="StudentAddress.TownParameterID1" class="control-label"></label>
                                                <input asp-for="StudentAddress.TownParameterID1" id="studentTownDropDown1" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="zip">
                                                <label asp-for="StudentAddress.ZipCode1" class="control-label"></label>
                                                <input asp-for="StudentAddress.ZipCode1" id="studentZip1" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.Address2 </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col target" id="studentAddress2Target">
                                                <label asp-for="StudentAddress.Address2" class="control-label"></label>
                                                <textarea asp-for="StudentAddress.Address2" id="studentAddress2" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col" id="city">
                                                <label asp-for="StudentAddress.CityParameterID2" class="control-label"></label>
                                                <input asp-for="StudentAddress.CityParameterID2" id="studentCityDropDown2" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="town">
                                                <label asp-for="StudentAddress.TownParameterID2" class="control-label"></label>
                                                <input asp-for="StudentAddress.TownParameterID2" id="studentTownDropDown2" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="zip">
                                                <label asp-for="StudentAddress.ZipCode2" class="control-label"></label>
                                                <input asp-for="StudentAddress.ZipCode2" id="studentZip2" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.StudentBusServicesInformation </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col col-md-7" id="d">
                                                <label asp-for="Student.SchoolBusDepartureID" class="control-label"></label>
                                                <input asp-for="Student.SchoolBusDepartureID" id="shuttleDepartureDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>
                                            <div class="col col-md-3" id="driver1">
                                                <label asp-for="Student.SchoolBusDepartureDriverID" class="control-label"></label>
                                                <input asp-for="Student.SchoolBusDepartureDriverID" id="shuttleDepartureDriverDropDownID" class="text-section k-content shuttleDriverDropDown" style="width: 100%;" />
                                            </div>

                                        </div>

                                        <div class="row">
                                            <div class="col col-md-7" id="return">
                                                <label asp-for="Student.SchoolBusReturnID" class="control-label"></label>
                                                <input asp-for="Student.SchoolBusReturnID" id="shuttleReturnDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>
                                            <div class="col col-md-3" id="driver1">
                                                <label asp-for="Student.SchoolBusReturnDriverID" class="control-label"></label>
                                                <input asp-for="Student.SchoolBusReturnDriverID" id="shuttleReturnDriverDropDownID" class="text-section k-content shuttleDriverDropDown" style="width: 100%;" />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col" id="statu">
                                                <label asp-for="Student.SchoolBusStatuID" class="control-label"></label>
                                                <input asp-for="Student.SchoolBusStatuID" id="serviceStatusDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>
                                        </div>
                                    </div>
                                    <!--#endregion -->
                                    <!--#region parent panel -->
                                    <div id="Parent">
                                        <h5 class="ra-well-title card-header top-left" style="padding-top: 0px;"> <kbd>@ESCHOOL.Resources.Resource.ParentInformation </kbd></h5>
                                        &nbsp;
                                        <div class="row" style="padding-left:5px">
                                            <div class="row col-md-9">
                                                <div class="row">
                                                    <div class="col">
                                                        <label asp-for="Student.ParentName" class="control-label"></label>
                                                        <input asp-for="Student.ParentName" id="parentName" class="k-textbox" style="width: 100%; " maxlength="50" title="@ESCHOOL.Resources.Resource.CopyPastMsg" />
                                                    </div>

                                                    <div class="col">
                                                        <button type="button" id="btn2" onmouseover="IdChange(this)" onmouseout="IdChangeOld(this)" onclick="myFunction(this)">@ESCHOOL.Resources.Resource.IdNumber</button>
                                                        <input asp-for="StudentParentAddress.IdNumber" id="parentID" class="k-textbox" style="width: 100%;" maxlength="15" onfocus="IdReset(this)" />
                                                    </div>

                                                    <div class="col">
                                                        <label asp-for="StudentParentAddress.HomePhone" class="control-label"></label>
                                                        <input asp-for="StudentParentAddress.HomePhone" id="parentHomePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col">
                                                        <label asp-for="StudentParentAddress.ParentGenderTypeCategoryID" class="control-label"></label>
                                                        <input asp-for="StudentParentAddress.ParentGenderTypeCategoryID" id="parentGenderTypeDropDown" class="text-section k-content" style="width: 100%;" />
                                                    </div>
                                                    <div class="col">
                                                        <input asp-for="StudentParentAddress.IsSMS" id="isSmsStudent" class="ax-unselectable k-checkbox" type="checkbox">

                                                        <label asp-for="StudentParentAddress.MobilePhone" for="isSmsStudent" class="control-label"></label>
                                                        <input asp-for="StudentParentAddress.MobilePhone" id="parentMobilePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                                    </div>

                                                    <div class="col">
                                                        <label asp-for="StudentParentAddress.WorkPhone" class="control-label"></label>
                                                        <input asp-for="StudentParentAddress.WorkPhone" id="parentWorkPhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col">
                                                        <label asp-for="StudentParentAddress.KinshipCategoryID" class="control-label"></label>
                                                        <input asp-for="StudentParentAddress.KinshipCategoryID" id="parentKinshipDropDown" class="text-section k-content" style="width: 100%;" />
                                                    </div>
                                                    <div class="col">
                                                        <label asp-for="StudentParentAddress.ProfessionCategoryID" class="control-label"></label>
                                                        <input asp-for="StudentParentAddress.ProfessionCategoryID" id="parentProfessionDropDown" class="text-section k-content" style="width: 100%;" />
                                                    </div>

                                                    <div class="col">
                                                        <input asp-for="StudentParentAddress.IsEmail" id="isEMailParent" class="ax-unselectable k-checkbox" type="checkbox">

                                                        <label asp-for="StudentParentAddress.EMail" for="isEMailParent" class="control-label"></label>
                                                        <input asp-for="StudentParentAddress.EMail" id="parentEMail" class="k-textbox" style="width: 100%;" type="email" maxlength="50" data-email-msg=@ESCHOOL.Resources.Resource.ValidEmail />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col order-1 col-md-2 top-left">
                                                <div>
                                                    <div class="card" style="height:8rem; width: 9rem;">
                                                        <img id="imgpreviewParent" name="imgParent" src="@("~/Upload/Parents/"+Model.StudentParentAddress.ParentPicture)" asp-append-version="true" class="img-fluid img-thumbnail" />
                                                        <div class="demo-section k-content">
                                                            <input type="file" name="imgfileParent" id="imgfileParent" onchange="previewingParent(event)">
                                                            <input asp-for="StudentParentAddress.ParentPicture" class="k-textbox" style="width: 100%;" hidden />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.Home </kbd></h5>
                                        <div class="row">
                                                <input asp-for="StudentParentAddress.StudentParentAddressID" hidden />
                                                <input asp-for="StudentParentAddress.StudentID" hidden />
                                        </div>
                                        <div class="row target" style="padding-left:0px" id="parentHomeAddressTarget">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.HomeAddress" class="control-label"></label>
                                                <textarea asp-for="StudentParentAddress.HomeAddress" id="parentHomeAddress" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>

                                        <div class="row" style="padding-left:0px">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.HomeCityParameterID" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.HomeCityParameterID" id="parentHomeCityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.HomeTownParameterID" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.HomeTownParameterID" id="parentHomeTownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.HomeZipCode" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.HomeZipCode" id="parentHomeZip" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.Work </kbd></h5>
                                        <div class="row target" style="padding-left:0px" id="parentWorkAddressTarget">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.WorkAddress" class="control-label"></label>
                                                <textarea asp-for="StudentParentAddress.WorkAddress" id="parentWorkAddress" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-left:0px">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.WorkCityParameterID" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.WorkCityParameterID" id="parentWorkCityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.WorkTownParameterID" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.WorkTownParameterID" id="parentWorkTownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.WorkZipCode" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.WorkZipCode" id="parentWorkZip" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>
                                        &nbsp;

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.ThirtPerson </kbd></h5>
                                        &nbsp;

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.Name3" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.Name3" id="parentName3" class="k-textbox" style="width: 50%;" maxlength="50" />
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col">
                                                <button type="button" id="btn3" style="width: 100%;" onmouseover="IdChange(this)" onmouseout="IdChangeOld(this)" onclick="myFunction(this)">@ESCHOOL.Resources.Resource.IdNumber</button>
                                                <input asp-for="StudentParentAddress.IdNumber3" type="text" id="parentID3" class="k-textbox" style="width: 100%;" maxlength="15" onfocus="IdReset(this)" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.HomePhone3" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.HomePhone3" id="parentHomePhone3" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.WorkPhone3" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.WorkPhone3" id="parentWorkPhone3" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.MobilePhone3" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.MobilePhone3" id="parentMobilePhone3" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                        </div>

                                        <div class="row target" style="padding-left:0px" id="parent3AddressTarget">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.Address3" class="control-label"></label>
                                                <textarea asp-for="StudentParentAddress.Address3" id="parent3Address" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>
                                        <div class="row" style="padding-left:0px">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CityParameterID3" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.CityParameterID3" id="parent3CityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.TownParameterID3" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.TownParameterID3" id="parent3TownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.ZipCode3" class="control-label"></label>
                                                <input asp-for="StudentParentAddress.ZipCode3" id="parent3Zip" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>
                                        &nbsp;

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.Note </kbd></h5>
                                        &nbsp;
                                        <div class="row" style="padding-left:0px">
                                            <div class="col">
                                                <textarea asp-for="StudentParentAddress.Note" class="k-textbox" style="width: 100%; height:100px;" text-wrap="normal" type="text" maxlength="250"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <!--#endregion -->
                                    <!--#region Debt panel -->
                                    <div id="Debtor">
                                        <h5 class="ra-well-title card-header top-left" style="padding-top: 0px;"> <kbd>@ESCHOOL.Resources.Resource.Debtor</kbd></h5>
                                        <br />
                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorName" class="control-label">@ESCHOOL.Resources.Resource.DebtorName</label>
                                                <input asp-for="StudentParentAddress.DebtorName" id="debtorName" class="k-textbox" style="width: 100%;" maxlength="50" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorPlaceOfBirth" class="control-label">@ESCHOOL.Resources.Resource.DebtorPlaceOfBirth</label>
                                                <input asp-for="StudentParentAddress.DebtorPlaceOfBirth" id="debtorPlaceOfBirth" class="k-textbox" style="width: 100%;" maxlength="20" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorDOB" class="control-label">@ESCHOOL.Resources.Resource.DebtorDOB</label>
                                                <input asp-for="StudentParentAddress.DebtorDOB" class="k-textbox" id="debtorDOB" style="width: 120px;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorFatherName" class="control-label">@ESCHOOL.Resources.Resource.DebtorFatherName</label>
                                                <input asp-for="StudentParentAddress.DebtorFatherName" id="debtorFatherName" class="k-textbox" style="width: 100%;" maxlength="50" />
                                            </div>
                                        </div>

                                        <div class="row target" id="debtorHomeAddressTarget">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorAddress" class="control-label">@ESCHOOL.Resources.Resource.Address</label>
                                                <textarea asp-for="StudentParentAddress.DebtorAddress" id="debtorHomeAddress" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorCityID" class="control-label">@ESCHOOL.Resources.Resource.City</label>
                                                <input asp-for="StudentParentAddress.DebtorCityID" id="debtorHomeCityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorTownID" class="control-label">@ESCHOOL.Resources.Resource.Town</label>
                                                <input asp-for="StudentParentAddress.DebtorTownID" id="debtorHomeTownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorZipCode" class="control-label">@ESCHOOL.Resources.Resource.ZipCode</label>
                                                <input asp-for="StudentParentAddress.DebtorZipCode" id="debtorHomeZipCode" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorMobilePhone" class="control-label">@ESCHOOL.Resources.Resource.MobilePhone</label>
                                                <input asp-for="StudentParentAddress.DebtorMobilePhone" id="debtorMobilePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorHomePhone" class="control-label">@ESCHOOL.Resources.Resource.HomePhone</label>
                                                <input asp-for="StudentParentAddress.DebtorHomePhone" id="debtorHomePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.DebtorWorkPhone" class="control-label">@ESCHOOL.Resources.Resource.WorkPhone</label>
                                                <input asp-for="StudentParentAddress.DebtorWorkPhone" id="debtorWorkPhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                        </div>
                                        &nbsp;

                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.CreditCard I </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            <div class="custom-control custom-radio">
                                                <input type="radio" asp-for="StudentParentAddress.CardType1" class="k-radio" id="CustomR31" value="true" checked />
                                                <label class="k-radio-label" for="CustomR31">@ESCHOOL.Resources.Resource.Visa</label>
                                            </div>
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            <div class="custom-control custom-radio">
                                                <input type="radio" asp-for="StudentParentAddress.CardType1" class="k-radio" id="Custom32" value="false" />
                                                <label class="k-radio-label" for="CustomR32">@ESCHOOL.Resources.Resource.Master</label>
                                            </div>
                                        </div>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardNameOnCard1" class="control-label">@ESCHOOL.Resources.Resource.CardNameOnCard</label>
                                                <input asp-for="StudentParentAddress.CardNameOnCard1" class="k-textbox" style="width: 100%; " maxlength="50" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardBankName1" class="control-label">@ESCHOOL.Resources.Resource.BankName</label>
                                                <input asp-for="StudentParentAddress.CardBankName1" class="k-textbox" style="width: 100%; " maxlength="30" />
                                            </div>

                                            <div class="col" id="fieldlist">
                                                <label asp-for="StudentParentAddress.CardNumber1" class="control-label">@ESCHOOL.Resources.Resource.CreditCardNumber</label>
                                                <input asp-for="StudentParentAddress.CardNumber1" class="k-textbox credit_card" style="width: 100%; background-color:black; color:white" maxlength="30" />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardExpiryMonth1" class="control-label">@ESCHOOL.Resources.Resource.ExpiryMonth</label>
                                                <input asp-for="StudentParentAddress.CardExpiryMonth1" class="k-textbox" style="width: 100%;" maxlength="2" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardExpiryYear1" class="control-label">@ESCHOOL.Resources.Resource.ExpiryYear</label>
                                                <input asp-for="StudentParentAddress.CardExpiryYear1" class="k-textbox" style="width: 100%;" maxlength="4" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardAccountCuttingDay1" class="control-label">@ESCHOOL.Resources.Resource.AccountCuttingDay</label>
                                                <input asp-for="StudentParentAddress.CardAccountCuttingDay1" class="k-textbox" style="width: 100%;" maxlength="2" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardExpiryCVC1" class="control-label">@ESCHOOL.Resources.Resource.CardCvc</label>
                                                <input asp-for="StudentParentAddress.CardExpiryCVC1" class="k-textbox" style="width: 100%; background-color:black; color:white" maxlength="4" />
                                            </div>
                                        </div>

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.CreditCard II </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            <div class="custom-control custom-radio">
                                                <input type="radio" asp-for="StudentParentAddress.CardType2" class="k-radio" id="CustomR41" value="true" />
                                                <label class="k-radio-label" for="CustomR41">@ESCHOOL.Resources.Resource.Visa</label>
                                            </div>
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            <div class="custom-control custom-radio">
                                                <input type="radio" asp-for="StudentParentAddress.CardType2" class="k-radio" id="CustomR42" value="false" />
                                                <label class="k-radio-label" for="CustomR42">@ESCHOOL.Resources.Resource.Master</label>
                                            </div>
                                        </div>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardNameOnCard2" class="control-label">@ESCHOOL.Resources.Resource.CardNameOnCard</label>
                                                <input asp-for="StudentParentAddress.CardNameOnCard2" class="k-textbox" style="width: 100%; " maxlength="50" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardBankName2" class="control-label">@ESCHOOL.Resources.Resource.BankName</label>
                                                <input asp-for="StudentParentAddress.CardBankName2" class="k-textbox" style="width: 100%; " maxlength="30" />
                                            </div>

                                            <div class="col" id="fieldlist">
                                                <label asp-for="StudentParentAddress.CardNumber2" class="control-label">@ESCHOOL.Resources.Resource.CreditCardNumber</label>
                                                <input asp-for="StudentParentAddress.CardNumber2" class="k-textbox credit_card" style="width: 100%; background-color:black; color:white" maxlength="30" />
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardExpiryMonth2" class="control-label">@ESCHOOL.Resources.Resource.ExpiryMonth</label>
                                                <input asp-for="StudentParentAddress.CardExpiryMonth2" class="k-textbox" style="width: 100%;" maxlength="2" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardExpiryYear2" class="control-label">@ESCHOOL.Resources.Resource.ExpiryYear</label>
                                                <input asp-for="StudentParentAddress.CardExpiryYear2" class="k-textbox" style="width: 100%;" maxlength="4" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardAccountCuttingDay2" class="control-label">@ESCHOOL.Resources.Resource.AccountCuttingDay</label>
                                                <input asp-for="StudentParentAddress.CardAccountCuttingDay2" class="k-textbox" style="width: 100%;" maxlength="2" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentParentAddress.CardExpiryCVC2" class="control-label">@ESCHOOL.Resources.Resource.CardCvc</label>
                                                <input asp-for="StudentParentAddress.CardExpiryCVC2" class="k-textbox" style="width: 100%; background-color:black; color:white" maxlength="4" />
                                            </div>
                                        </div>

                                    </div>
                                    <!--#endregion -->
                                    <!--#region family panel -->
                                    <div id="Family">
                                        <h5 class="ra-well-title card-header top-left" style="padding-top: 0px;"> <kbd>@ESCHOOL.Resources.Resource.Fathers </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col">
                                                <input asp-for="StudentFamilyAddress.StudentFamilyAddressID" hidden />
                                                <input asp-for="StudentFamilyAddress.StudentID" hidden />

                                                <label asp-for="StudentFamilyAddress.FatherName" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherName" id="fatherName" class="k-textbox" style="width: 100%;" maxlength="50" title="@ESCHOOL.Resources.Resource.CopyPastMsg" />
                                            </div>
                                            <div class="col">
                                                <button type="button" id="btn4" style="width: 100%;" onmouseover="IdChange(this)" onmouseout="IdChangeOld(this)" onclick="myFunction(this)">@ESCHOOL.Resources.Resource.IdNumber</button>
                                                <input asp-for="StudentFamilyAddress.FatherIdNumber" id="fatherID" type="text" id="id4" class="k-textbox" style="width: 100%;" maxlength="15" onfocus="IdReset(this)" title="@ESCHOOL.Resources.Resource.TooltipId" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentFamilyAddress.FatherHomePhone" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherHomePhone" id="fatherHomePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentFamilyAddress.FatherWorkPhone" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherWorkPhone" id="fatherWorkPhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentFamilyAddress.FatherProfessionCategoryID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherProfessionCategoryID" id="fatherProfessionDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <input asp-for="StudentFamilyAddress.FatherIsEmail" id="IsEMailFather" class="ax-unselectable k-checkbox" type="checkbox">

                                                <label asp-for="StudentFamilyAddress.FatherEMail" for="IsEMailFather" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherEMail" id="fatherEMail" class="k-textbox" style="width: 100%;" type="email" maxlength="50" data-email-msg=@ESCHOOL.Resources.Resource.ValidEmail />
                                            </div>

                                            <div class="col">
                                                <input asp-for="StudentFamilyAddress.FatherIsSMS" id="isSmsFather" class="ax-unselectable k-checkbox" type="checkbox">

                                                <label asp-for="StudentFamilyAddress.FatherMobilePhone" for="IsSmsFather" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherMobilePhone" id="fatherMobilePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                        </div>
                                        <hr />
                                        <kbd>@ESCHOOL.Resources.Resource.HomeAddress </kbd>

                                        <div class="row target" style="padding-left:2px" id="fatherHomeAddressTarget">
                                            <div class="col">
                                                <textarea asp-for="StudentFamilyAddress.FatherHomeAddress" id="fatherHomeAddress" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col" id="city">
                                                <label asp-for="StudentFamilyAddress.FatherHomeCityParameterID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherHomeCityParameterID" id="fatherHomeCityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="town">
                                                <label asp-for="StudentFamilyAddress.FatherHomeTownParameterID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherHomeTownParameterID" id="fatherHomeTownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="zip">
                                                <label asp-for="StudentFamilyAddress.FatherHomeZipCode" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherHomeZipCode" id="fatherHomeZip" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>

                                        <hr />
                                        <kbd>@ESCHOOL.Resources.Resource.WorkAddress</kbd>
                                        <div class="row target" style="padding-left:2px" id="fatherWorkAddressTarget">
                                            <div class="col">
                                                <textarea asp-for="StudentFamilyAddress.FatherWorkAddress" id="fatherWorkAddress" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col" id="city">
                                                <label asp-for="StudentFamilyAddress.FatherWorkCityParameterID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherWorkCityParameterID" id="fatherWorkCityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="town">
                                                <label asp-for="StudentFamilyAddress.FatherWorkTownParameterID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherWorkTownParameterID" id="fatherWorkTownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="zip">
                                                <label asp-for="StudentFamilyAddress.FatherWorkZipCode" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.FatherWorkZipCode" id="fatherWorkZip" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>
                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.Mothers </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentFamilyAddress.MotherName" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherName" id="motherName" class="k-textbox" style="width: 100%; " maxlength="50" title="@ESCHOOL.Resources.Resource.CopyPastMsg" />
                                            </div>
                                            <div class="col">
                                                <div class="col">
                                                    <button type="button" id="btn5" onmouseover="IdChange(this)" onmouseout="IdChangeOld(this)" onclick="myFunction(this)">@ESCHOOL.Resources.Resource.IdNumber</button>
                                                    <input asp-for="StudentFamilyAddress.MotherIdNumber" type="text" id="motherID" class="k-textbox" style="width: 100%; " onfocus="IdReset(this)" title="@ESCHOOL.Resources.Resource.TooltipId" />
                                                </div>
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentFamilyAddress.MotherHomePhone" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherHomePhone" id="motherHomePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="StudentFamilyAddress.MotherWorkPhone" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherWorkPhone" id="motherWorkPhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentFamilyAddress.MotherProfessionCategoryID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherProfessionCategoryID" id="motherProfessionDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <input asp-for="StudentFamilyAddress.MotherIsEmail" id="IsEMailMother" class="ax-unselectable k-checkbox" type="checkbox">

                                                <label asp-for="StudentFamilyAddress.MotherEMail" for="IsEMailMother" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherEMail" class="k-textbox" id="motherEMail" style="width: 100%;" type="email" maxlength="50" data-email-msg=@ESCHOOL.Resources.Resource.ValidEmail />
                                            </div>

                                            <div class="col">
                                                <input asp-for="StudentFamilyAddress.MotherIsSMS" id="isSmsMother" class="ax-unselectable k-checkbox" type="checkbox">

                                                <label asp-for="StudentFamilyAddress.MotherMobilePhone" for="IsSmsMother" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherMobilePhone" id="motherMobilePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                        </div>
                                        <hr />
                                        <kbd>@ESCHOOL.Resources.Resource.HomeAddress </kbd>

                                        <div class="row target" style="padding-left:2px" id="motherHomeAddressTarget">
                                            <div class="col">
                                                <textarea asp-for="StudentFamilyAddress.MotherHomeAddress" id="motherHomeAddress" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap=":normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col" id="city">
                                                <label asp-for="StudentFamilyAddress.MotherHomeCityParameterID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherHomeCityParameterID" id="motherHomeCityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="town">
                                                <label asp-for="StudentFamilyAddress.MotherHomeTownParameterID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherHomeTownParameterID" id="motherHomeTownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="zip">
                                                <label asp-for="StudentFamilyAddress.MotherHomeZipCode" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherHomeZipCode" id="motherHomeZip" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>

                                        <hr />
                                        <kbd>@ESCHOOL.Resources.Resource.WorkAddress</kbd>
                                        <div class="row target" style="padding-left:2px" id="motherWorkAddressTarget">
                                            <div class="col">
                                                <textarea asp-for="StudentFamilyAddress.MotherWorkAddress" id="motherWorkAddress" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:50px;" text-wrap="normal" type="text" maxlength="100"></textarea>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col" id="city">
                                                <label asp-for="StudentFamilyAddress.MotherWorkCityParameterID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherWorkCityParameterID" id="motherWorkCityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="town">
                                                <label asp-for="StudentFamilyAddress.MotherWorkTownParameterID" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherWorkTownParameterID" id="motherWorkTownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="zip">
                                                <label asp-for="StudentFamilyAddress.MotherWorkZipCode" class="control-label"></label>
                                                <input asp-for="StudentFamilyAddress.MotherWorkZipCode" id="motherWorkZip" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.Note </kbd></h5>
                                        &nbsp;
                                        <div class="row" style="padding-left:2px">
                                            <div class="col">
                                                <textarea asp-for="StudentFamilyAddress.Note" class="k-textbox" style="width: 100%; height:45px;" text-wrap="normal" type="text" maxlength="250"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <!--#endregion -->
                                    <!--#region invoice panel -->
                                    <div id="InvoiceAddress">
                                        <h5 class="ra-well-title card-header top-left" style="padding-top: 0px;"> <kbd>@ESCHOOL.Resources.Resource.InvoiceAddress </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col">
                                                <input asp-for="StudentInvoiceAddress.StudentInvoiceAddressID" hidden />
                                                <input asp-for="StudentInvoiceAddress.StudentID" hidden />

                                                <label asp-for="StudentInvoiceAddress.InvoiceTitle" class="control-label"></label>
                                                <textarea asp-for="StudentInvoiceAddress.InvoiceTitle" id="invoiceTitle" class="k-textbox" style="width: 100%; height:80px;" text-wrap="normal" type="text" maxlength="250"></textarea>
                                            </div>
                                        </div>
                                        <div class="row target" id="invoiceAddressTarget">
                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.InvoiceAddress" class="control-label"></label>
                                                <textarea asp-for="StudentInvoiceAddress.InvoiceAddress" id="invoiceAddress" title="@ESCHOOL.Resources.Resource.CopyPastMsg" class="k-textbox" style="width: 100%; height:80px;" text-wrap=":normal" type="text" maxlength="250"></textarea>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.InvoiceCityParameterID" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.InvoiceCityParameterID" id="invoiceCityDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.InvoiceTownParameterID" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.InvoiceTownParameterID" id="invoiceTownDropDown" class="text-section k-content" disabled="disabled" style="width: 100%;" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.InvoiceCountry" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.InvoiceCountry" id="invoiceCountry" class="k-textbox" style="width: 100%; " />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.InvoiceZipCode" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.InvoiceZipCode" id="invoiceZip" class="k-textbox" style="width: 100%;" maxlength="10" />
                                            </div>
                                        </div>

                                        <hr />

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.InvoiceTaxOffice" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.InvoiceTaxOffice" id="invoiceTaxOffice" class="k-textbox" style="width: 100%; " maxlength="50" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.InvoiceTaxNumber" class="control-label">@ESCHOOL.Resources.Resource.TaxNumberOrId</label>
                                                <input asp-for="StudentInvoiceAddress.InvoiceTaxNumber" id="invoiceTaxNumber" class="k-textbox" style="width: 100%;" maxlength="20" title="@ESCHOOL.Resources.Resource.InvoiceTaxNumberOrId" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.Phone" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.Phone" id="invoicePhone" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.Fax" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.Fax" id="invoiceFax" class="k-textbox" style="width: 100%;" maxlength="15" />
                                            </div>
                                        </div>

                                        <hr />

                                        <hr />

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.EMail" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.EMail" id="invoiceEMail" class="k-textbox" style="width: 100%;" maxlength="50" />
                                            </div>

                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.WebAddress" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.WebAddress" id="invoiceWebAddress" class="k-textbox" style="width: 100%;" maxlength="50" />
                                            </div>
                                        </div>
                                        <hr />

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.Notes" class="control-label"></label>
                                                <textarea asp-for="StudentInvoiceAddress.Notes" class="k-textbox" style="width: 100%; height:80px;" text-wrap="normal" type="text" maxlength="250"></textarea>
                                            </div>
                                        </div>

                                        <hr />

                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="StudentInvoiceAddress.AccountCode" class="control-label"></label>
                                                <input asp-for="StudentInvoiceAddress.AccountCode" class="k-textbox" style="width: 100%;" maxlength="50" />
                                            </div>
                                        </div>

                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"> <kbd>@ESCHOOL.Resources.Resource.EInvoiceInformation </kbd></h5>
                                        &nbsp;

                                        <div class="form-group">
                                            <label asp-for="StudentInvoiceAddress.InvoiceProfile" class="control-label"></label>
                                            <div class="row">
                                                &nbsp; &nbsp;
                                                <div class="custom-control custom-radio">
                                                    <input type="radio" asp-for="StudentInvoiceAddress.InvoiceProfile" class="k-radio" id="Prf1" value="true" onclick="hideit()" />
                                                    <label class="k-radio-label" for="Prf1">@ESCHOOL.Resources.Resource.EArchive</label>
                                                </div>
                                                &nbsp;&nbsp;&nbsp;&nbsp;
                                                <div class="custom-control custom-radio">
                                                    <input type="radio" asp-for="StudentInvoiceAddress.InvoiceProfile" class="k-radio" id="Prf2" value="false" onclick="showit()" />
                                                    <label class="k-radio-label" for="Prf2">@ESCHOOL.Resources.Resource.EInvoice</label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label asp-for="StudentInvoiceAddress.InvoiceTypeParameter" class="control-label"></label>
                                            <div class="row">
                                                &nbsp; &nbsp;
                                                <div class="custom-control custom-radio">
                                                    <input type="radio" asp-for="StudentInvoiceAddress.InvoiceTypeParameter" class="k-radio" id="Ssl1" value="0" />
                                                    <label class="k-radio-label" for="Ssl1">@ESCHOOL.Resources.Resource.BasicInvoice</label>
                                                </div>
                                                &nbsp;&nbsp;
                                                <div class="custom-control custom-radio">
                                                    <input type="radio" asp-for="StudentInvoiceAddress.InvoiceTypeParameter" class="k-radio" id="Ssl2" value="1" />
                                                    <label class="k-radio-label" for="Ssl2">@ESCHOOL.Resources.Resource.CommercialInvoice</label>
                                                </div>
                                                &nbsp; &nbsp;
                                                <div class="custom-control custom-radio">
                                                    <input type="radio" asp-for="StudentInvoiceAddress.InvoiceTypeParameter" class="k-radio" id="Ssl3" value="2" />
                                                    <label class="k-radio-label" for="Ssl3">@ESCHOOL.Resources.Resource.ExceptionInvoice</label>
                                                </div>
                                                &nbsp;&nbsp;
                                                <div class="custom-control custom-radio">
                                                    <input type="radio" asp-for="StudentInvoiceAddress.InvoiceTypeParameter" class="k-radio" id="Ssl4" value="3" />
                                                    <label class="k-radio-label" for="Ssl4">@ESCHOOL.Resources.Resource.SalesInvoice</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!--#endregion -->
                                    <!--#region note panel -->
                                    <div id="Note">
                                        <h5 class="ra-well-title card-header top-left" style="padding-top: 0px;"><kbd> 1.</kbd> <kbd>@ESCHOOL.Resources.Resource.Note1 </kbd></h5>
                                        &nbsp;
                                        <div class="row" style="padding-left:2px">
                                            <div class="col">
                                                <input asp-for="StudentNote.StudentNoteID" hidden />
                                                <input asp-for="StudentNote.StudentID" hidden />

                                                <textarea asp-for="StudentNote.Note1" class="k-textbox" style="width: 100%; height:60px;" text-wrap="normal" type="text" maxlength="300"></textarea>
                                            </div>
                                        </div>
                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"><kbd> 2.</kbd> <kbd>@ESCHOOL.Resources.Resource.Note2 </kbd></h5>
                                        &nbsp;
                                        <div class="row" style="padding-left:2px">
                                            <div class="col">
                                                <textarea asp-for="StudentNote.Note2" class="k-textbox" style="width: 100%; height:80px;" text-wrap="normal" type="text" maxlength="300"></textarea>
                                            </div>
                                        </div>
                                        &nbsp;

                                        <h5 class="ra-well-title card-header top-left"><kbd> 3.</kbd> <kbd>@ESCHOOL.Resources.Resource.Note3 </kbd></h5>
                                        &nbsp;
                                        <div class="row" style="padding-left:2px">
                                            <div class="col">
                                                <textarea asp-for="StudentNote.Note3" class="k-textbox" style="width: 100%; height:100px;" text-wrap="normal" type="text" maxlength="500"></textarea>
                                            </div>
                                        </div>
                                        &nbsp;

                                        <h5 class="ra-well-title card-header top-left"><kbd>@ESCHOOL.Resources.Resource.Note4 </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col" id="PreviousSchool">
                                                <label asp-for="Student.PreviousSchoolID" class="control-label"></label>
                                                <input asp-for="Student.PreviousSchoolID" id="previousSchoolDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>

                                            <div class="col" id="PreviousBranch">
                                                <label asp-for="Student.PreviousBranchID" class="control-label"></label>
                                                <input asp-for="Student.PreviousBranchID" id="previousBranchDropDown" class="text-section k-content" style="width: 100%;" />
                                            </div>
                                        </div>
                                        &nbsp;
                                        <h5 class="ra-well-title card-header top-left"><kbd>@ESCHOOL.Resources.Resource.ScholarshipStudent </kbd></h5>
                                        &nbsp;
                                        <div class="row">
                                            <div class="col">
                                                <label asp-for="Student.ScholarshipStartDate" class="control-label"></label>
                                                <input asp-for="Student.ScholarshipStartDate" class="form-control" id="scholarshipstartdate" style="width: 100%;" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="Student.ScholarshipEndDate" class="control-label"></label>
                                                <input asp-for="Student.ScholarshipEndDate" class="form-control" id="scholarshipenddate" style="width: 100%;" />
                                            </div>
                                            <div class="col">
                                                <label asp-for="Student.ScholarshipRate" class="control-label"></label>
                                                <input asp-for="Student.ScholarshipRate" class="k-textbox" style="width: 80px;" type="number" max="999" validationMessage=@ESCHOOL.Resources.Resource.ValidNumber />
                                            </div>

                                            <div class="col">
                                                <label asp-for="Student.IsExplanationShow" class="control-label"></label>
                                                <br />
                                                <label class="k-checkbox-label" for="explanationshow">@ESCHOOL.Resources.Resource.Show</label>
                                                <input asp-for="Student.IsExplanationShow" id="explanationshow" type='checkbox' class="k-checkbox" />
                                            </div>
                                        </div>
                                        &nbsp;
                                    </div>
                                    <!--#endregion -->
                                    <div id="Agenda">
                                        <iframe name="theFrame" type="text/html" style='height: 860px; width: 100%;' frameborder="0" scrolling="no" id="iframe" allowfullscreen></iframe>

                                        @*info: *@
                                        @*$("#tabstrip") select: onSelect*@
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <!--#region right pane -->
                    <div id="right-pane">
                        <div class="pane-content">
                            <div id="General2">
                                <ul id="panelbar2">
                                    <li id="panelbartransactions" class="k-state-active">
                                        @ESCHOOL.Resources.Resource.InstallmentTransactions
                                        <div class=" ra-well-title card-header top-left">
                                            <div class="row rightAlign" style="float: right; padding-right:20px;">
                                                <p>
                                                    <button type="button" id="calculator" onclick="window.open('Calculator:///', '_blank', 'noreferrer')">@ESCHOOL.Resources.Resource.Calculator</button>
                                                </p>
                                                <div class="demo-section k-content">
                                                    <div id="InstallmentButtons">
                                                        &nbsp;&nbsp;
                                                        <span id="showButton" data-icon="gears" onclick="byAmountShow()">
                                                            @ESCHOOL.Resources.Resource.ByAmount
                                                        </span>
                                                        <span data-icon="detail-section" onclick="detailedShow()">
                                                            @ESCHOOL.Resources.Resource.Detailed
                                                        </span>
                                                        <span data-icon="track-changes-accept-all" onclick="standardShow()">
                                                            @ESCHOOL.Resources.Resource.Standard
                                                        </span>
                                                        &nbsp;&nbsp;
                                                    </div>
                                                </div>
                                                <p>
                                                    <button type="button" id="okButton" onclick="okClick()">@ESCHOOL.Resources.Resource.Okey</button>
                                                </p>
                                                <script>
                                                    $(document).ready(function () {
                                                        $("#okButton").kendoButton({
                                                            icon: "check"
                                                        });
                                                        $("#calculator").kendoButton({
                                                            icon: "calculator"
                                                        });
                                                        $("#btn1").kendoButton({
                                                            icon: "notification"
                                                        });
                                                        $("#btn2").kendoButton({
                                                            icon: "notification"
                                                        });
                                                        $("#btn3").kendoButton({
                                                            icon: "notification"
                                                        });
                                                        $("#btn4").kendoButton({
                                                            icon: "notification"
                                                        });
                                                        $("#btn5").kendoButton({
                                                            icon: "notification"
                                                        });
                                                    });
                                                </script>
                                            </div>
                                            <br />  <hr />

                                            <div class="row" style="padding-left:20px;">
                                                <div id="paymentDate">
                                                    <label asp-for="StudentTemp.TransactionDate" class="control-label"></label>
                                                    <div class="text-section k-content">
                                                        <input asp-for="StudentTemp.TransactionDate" type="date" id="transactiondate" class="form-control" style="width: 130px;" />
                                                    </div>
                                                </div>
                                                &nbsp;
                                                <div id="paymentCategory">
                                                    <label asp-for="StudentTemp.PaymentTypeCategoryID" class="control-label"></label>
                                                    <div class="text-section k-content">
                                                        <input id="paymentDropDown" style="width: 110px;" />
                                                    </div>
                                                </div>
                                                &nbsp;
                                                <div id="bankName" style="padding-right:5px;">
                                                    <label asp-for="StudentTemp.BankID" class="control-label"></label>
                                                    <div class="text-section k-content">
                                                        <input asp-for="StudentTemp.BankID" id="bankNameDropDown" style="width: 245px; padding-bottom: 10px;" />
                                                    </div>
                                                </div>
                                            </div>

                                            @*ByAmount*@
                                            <div class="row" id="div1" style="display: none; border: thin solid rgb(120,120,120); padding-left: 2px; padding-right: 2px;">
                                                <div class="col">
                                                    <label class="control-label">@ESCHOOL.Resources.Resource.InstallmentAmount</label>
                                                    <div>
                                                        <input asp-for="StudentInstallment.InstallmentAmount" id="installmentAmount1" class="k-textbox" type="number" min="0" style="width: 100px;" value="0" oninput="installmentcalculate1(event.key)" />
                                                    </div>
                                                </div>
                                                <div>
                                                    <label class="control-label">@ESCHOOL.Resources.Resource.Installment</label>
                                                    <div>
                                                        <input asp-for="StudentTemp.Installment" id="installment1" class="k-textbox" style='width: 50px;' disabled />
                                                    </div>
                                                </div>
                                                <div class="col">
                                                    <label class="control-label">@ESCHOOL.Resources.Resource.Amount</label>
                                                    <div>
                                                        <input id="installmentTotal1" style="width: 90px;" disabled />
                                                    </div>
                                                </div>
                                                <div class="col" style="width: 30px;">
                                                    <label class="control-label">@ESCHOOL.Resources.Resource.Bond2</label>
                                                    <br />
                                                    <div>
                                                        <input asp-for="StudentTemp.IsSingleNamePaper" id="singlepaper1" type='checkbox' class="k-checkbox" />
                                                    </div>
                                                </div>
                                                <div class="col">
                                                    <label class="control-label">@ESCHOOL.Resources.Resource.Cash</label>
                                                    <div>
                                                        <input asp-for="StudentTemp.CashPayment" id="cashPayment1" class="k-textbox" style="width: 100px;" min="0" oninput="installmentcalculate11(event.key)" onClick="this.select();" />
                                                    </div>
                                                </div>
                                            </div>
                                            <hr id="divline" style="display: none;" />

                                            <div class="row" id="div2" style="display: none; border: thin solid rgb(120,120,120);">
                                                <div class="col">
                                                    <label class="control-label">@ESCHOOL.Resources.Resource.Amount</label>
                                                    <input id="installmentTotal2" style="width: 120px;" disabled />
                                                </div>

                                                <div class="col">
                                                    <label asp-for="StudentTemp.IsSingleNamePaper" class="control-label"></label>
                                                    <br />
                                                    <label class="k-checkbox-label" for="singlepaper2" style='width:30px;'>@ESCHOOL.Resources.Resource.Bond</label>
                                                    <input asp-for="StudentTemp.IsSingleNamePaper" id="singlepaper2" type='checkbox' class="k-checkbox" />
                                                </div>

                                                <div class="col">
                                                    <label asp-for="StudentTemp.CashPayment" class="control-label"></label>
                                                    <input asp-for="StudentTemp.CashPayment" id="cashPayment2" class="k-textbox" style='width:110px;' min="0" oninput="installmentcalculate2(event.key)" onClick="this.select();" />
                                                </div>
                                            </div>

                                            @*Standard*@
                                            <div class="row" id="div3" style="border: thin solid rgb(120,120,120); padding-left: 10px; padding-right: 10px;">
                                                <div class="col">
                                                    <label asp-for="StudentTemp.Installment" class="control-label"></label>
                                                    <input asp-for="StudentTemp.Installment" id="installment3" class="k-textbox" style='width:50px;' min="0" max="99" />
                                                </div>

                                                <div class="col">
                                                    <label class="control-label">@ESCHOOL.Resources.Resource.Amount</label>
                                                    <input id="installmentTotal3" style="width: 120px;" disabled />
                                                </div>

                                                <div class="col">
                                                    <label asp-for="StudentTemp.IsSingleNamePaper" class="control-label"></label>
                                                    <br />
                                                    <label class="k-checkbox-label" for="singlepaper3" style='width:30px;'>@ESCHOOL.Resources.Resource.Bond</label>
                                                    <input asp-for="StudentTemp.IsSingleNamePaper" id="singlepaper3" type='checkbox' class="k-checkbox" />
                                                </div>

                                                <div class="col">
                                                    <label asp-for="StudentTemp.CashPayment" class="control-label"></label>
                                                    <input asp-for="StudentTemp.CashPayment" id="cashPayment3" class="k-textbox" style='width:110px;' min="0" oninput="installmentcalculate3(event.key)" onClick="this.select();" />
                                                </div>
                                            </div>

                                        </div>
                                    </li>

                                    <li id="panelbarinstallment" class="k-state-active">
                                        <span class="k-link k-state-selected"> @ESCHOOL.Resources.Resource.InstallmentStatus</span>
                                        <div style="padding-left:5px;padding-right:5px;">
                                            <div id="gridInstallment"></div>

                                            <div id="refundDiv" class="row" style="display: none; padding-left: 5px;">
                                                <div class="col col-md-1">
                                                    <label class="control-label" style="font-weight: bold; width: 90px;"> @ESCHOOL.Resources.Resource.RefundAmount:</label>
                                                </div>
                                                <div class="col">
                                                    <input id="refund" asp-for="@total" style="font-weight:bold; width: 80px;" disabled />
                                                </div>
                                                <div class="col"></div>
                                                <div class="col"></div>
                                            </div>
                                            <div class="row" style="padding-left:5px;">
                                                <div class="col col-md-1">
                                                    <label asp-for="StudentTemp.SubTotal" class="control-label" style="font-weight:bold; width:90px;"></label>
                                                </div>
                                                <div class="col">
                                                    <input id="subTotal" style="font-weight:bold; width:90px;" disabled />
                                                </div>
                                                <div class="col">
                                                    <img src="@("~/Upload/Menu/Paid.png")" asp-append-version="true" class="img-fluid" />&nbsp;@ESCHOOL.Resources.Resource.Payed&nbsp;&nbsp;&nbsp;
                                                </div>
                                                <div class="col">
                                                    <img src="@("~/Upload/Menu/Partialpayment.png")" asp-append-version="true" />&nbsp;@ESCHOOL.Resources.Resource.PartialPayment
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                    <li id="panelbardetailedinstallment">
                                        <span class="k-link k-state-selected"> @ESCHOOL.Resources.Resource.DetailedInstallments</span>
                                        <div id="DetailedInstallment">
                                            <div id="gridDetailed"></div>
                                            <script>
                                                var panelBar = $("#panelbar2").kendoPanelBar().data("kendoPanelBar");
                                                panelBar.bind("select", function () {
                                                    $('#gridDetailed').data('kendoGrid').dataSource.read()
                                                });
                                            </script>

                                        </div>
                                    </li>
                                </ul>

                                <style>
                                    #panelbar2 {
                                        width: 100%;
                                        max-width: none;
                                        margin: 0 auto;
                                    }
                                </style>
                                <script>
                                    $(document).ready(function () {
                                        $("#panelbar2").kendoPanelBar({
                                            expandMode: "multiple",
                                        });
                                    });
                                </script>

                                <script>
                                    function refundDivLoad() {
                                        checkParameter();
                                        var refund = parseFloat(@total);
                                        if (refund > 0)
                                            $("#refundDiv").show(500);
                                    };

                                    function okClick() {
                                        var grid = $("#gridDetailed").data("kendoGrid");
                                        grid.saveChanges();
                                        var pressbuttonindex = $("#InstallmentButtons").data("kendoButtonGroup").current().index();
                                        CollepsDetailed();
                                        ExpandInstallment();
                                        if (pressbuttonindex == 0) {
                                            var byamount = document.getElementById('installmentAmount1').value;
                                            var installment = parseInt(document.getElementById('installment1').value);
                                            var singlepaper = document.querySelector('#singlepaper1');
                                            if ("@culture" == "tr-TR") cashpayment = parseFloat(document.getElementById("cashPayment1").value.replace(/\./g, "").replace(",", "."));
                                            else cashpayment = document.getElementById("cashPayment1").value;
                                            if (isNaN(cashpayment)) cashpayment = 0;
                                        };

                                        if (pressbuttonindex == 1) {
                                            var gridtotal = document.getElementById('installmentTotal2').value;
                                            var singlepaper = document.querySelector('#singlepaper2');
                                            if ("@culture" == "tr-TR") cashpayment = parseFloat(document.getElementById("cashPayment2").value.replace(/\./g, "").replace(",", "."));
                                            else cashpayment = parseFloat(document.getElementById("cashPayment2").value);
                                            if (isNaN(cashpayment)) cashpayment = 0;
                                        };

                                        if (pressbuttonindex == 2) {
                                            var installment = parseInt(document.getElementById('installment3').value);
                                            var byamount = document.getElementById('installmentTotal3').value;
                                            var singlepaper = document.querySelector('#singlepaper3');
                                            if ("@culture" == "tr-TR") cashpayment = parseFloat(document.getElementById("cashPayment3").value.replace(/\./g, "").replace(",", "."));
                                            else cashpayment = parseFloat(document.getElementById("cashPayment3").value);
                                            if (isNaN(cashpayment)) cashpayment = 0;
                                        };
                                        document.getElementById("cashID").value = cashpayment;

                                        var date = $("#transactiondate").data("kendoDatePicker").value();
                                        var dateString = kendo.toString(date, "dd-MM-yyyy");

                                        var paymenttypecomboBox = document.getElementById('paymentDropDown').value;
                                        var paymentType = $("#paymentDropDown").data("kendoDropDownList");
                                        var typeText = paymentType.text();
                                        var banknamecomboBox = document.getElementById('bankNameDropDown').value;

                                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                        var gridtotal = unitPrice - discount;

                                        if (pressbuttonindex != 0) byamount = 0;

                                        if (gridtotal == 0) {
                                            msg = getByCulture('@culture', 'studentfeeempty');
                                            alert(msg);
                                            return;
                                        }
                                        else
                                            if ((banknamecomboBox == null || banknamecomboBox == 0) && typeText != "Elden" && typeText != "Çek") {
                                                msg = getByCulture('@culture', 'selectbankName');
                                                alert(msg);
                                                return;
                                            }
                                            else {
                                                $.ajax({
                                                    type: "POST",
                                                    url: '/M210Student/CalculateInstallment/' + installment + "/" + singlepaper.checked + "/" + cashpayment + "/" + gridtotal + "/" + dateString + "/" + paymenttypecomboBox + "/" + banknamecomboBox + "/" + "@Model.StudentID" + "/" + "@Model.UserID" + "/" + byamount + "/" + pressbuttonindex,
                                                    dataType: "json",
                                                    success: function (result) {
                                                        $("#gridInstallment").data("kendoGrid").dataSource.read()
                                                        $('#gridSerialNumbers').data('kendoGrid').dataSource.read();
                                                    },
                                                    type: "post",
                                                    dataType: "json"
                                                });
                                            }
                                    }

                                    function byAmountShow() {
                                        CollepsInstallment()
                                        CollepsDetailed()
                                        $("#div1").show(500);
                                        $("#div2").hide(500);
                                        $("#div3").hide(500);
                                        var cashpayment = parseFloat(document.getElementById("cashPayment1").value);
                                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                        var gridtotal = unitPrice - discount;
                                        var subtotal = gridtotal - cashpayment;
                                        document.getElementById('installment1').value = 1;
                                    };

                                    function detailedShow() {
                                        var grid = $("#gridFees").data("kendoGrid");
                                        grid.saveChanges();
                                        ExpandDetailed();
                                        var cashpayment = parseFloat(document.getElementById("cashPayment1").value);

                                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                        var total = unitPrice - discount;

                                        if (total == 0) {
                                            msg = getByCulture('@culture', 'studentfeeempty');
                                            alert(msg);
                                            return;
                                        }
                                        else {
                                            var total = $("#gridDetailed").data().kendoGrid.dataSource.aggregates().amountTable.sum;
                                            if (total > 0) {
                                                $("#div1").hide(500);
                                                $("#div2").show(500);
                                                $("#div3").hide(500);
                                                CollepsInstallment();
                                                ExpandDetailed();
                                            }
                                            else {
                                                $("#div1").hide(500);
                                                $("#div2").show(500);
                                                $("#div3").hide(500);
                                                CollepsInstallment();
                                                ExpandDetailed();
                                            }
                                        };

                                        setTimeout(function () {
                                            detailRefresh();
                                        }, 100);
                                    }

                                    function standardShow() {
                                        CollepsDetailed()
                                        ExpandInstallment()
                                        $("#div1").hide(500);
                                        $("#div2").hide(500);
                                        $("#div3").show(500);

                                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                        var total = unitPrice - discount;

                                        $("#gridInstallment").data("kendoGrid").dataSource.read();
                                    };

                                    function installmentcalculate1(key) {
                                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                        var total = unitPrice - discount;

                                        if (total == 0) {
                                            msg = getByCulture('@culture', 'enterFee');
                                            alert(msg);
                                        }

                                        if (key == 'Backspace' || key == "Delete" || key == "ArrowLeft") {
                                            document.getElementById('installmentAmount1').value = 0;
                                            document.getElementById('installment1').value = 1;
                                        }
                                        var total = parseFloat(document.getElementById('installmentTotal1').value);
                                        var amount = parseFloat(document.getElementById('installmentAmount1').value);

                                        if (amount > 0) {
                                            installment = parseInt(total / amount);

                                            if (amount > total) {
                                                msg = getByCulture('@culture', 'enterValidAmount');
                                                alert(msg);
                                                document.getElementById('installmentAmount1').value = '';
                                                document.getElementById('installment1').value = 1;
                                            }
                                            else {
                                                document.getElementById('installment1').value = installment;
                                            }
                                        }
                                    }

                                    function installmentcalculate11(key) {
                                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                        var total = unitPrice - discount;

                                        if (total == 0) {
                                            msg = getByCulture('@culture', 'enterFee');
                                            alert(msg);
                                        }

                                        var cashpayment = parseFloat(document.getElementById("cashPayment1").value);
                                        if (isNaN(cashpayment)) cashpayment = 0;

                                        installmentAmount = parseInt((total - cashpayment));
                                        document.getElementById('installmentTotal1').value = installmentAmount.toFixed(2);
                                        if (cashpayment > total || installmentAmount < 1) {
                                            msg = getByCulture('@culture', 'enterValidAmount');
                                            alert(msg);
                                            document.getElementById('cashPayment1').value = '';
                                            var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                            var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                            var total = unitPrice - discount;
                                            document.getElementById('installmentTotal1').value = total.toFixed(2);
                                        }
                                    }

                                    function installmentcalculate2(key) {
                                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                        var total = unitPrice - discount;
                                        if (total == 0) {
                                            msg = getByCulture('@culture', 'enterFee');
                                            alert(msg);
                                        }

                                        document.getElementById('installmentTotal2').value = total;

                                        var cashpayment = parseFloat(document.getElementById("cashPayment2").value);
                                        if (isNaN(cashpayment)) cashpayment = 0;

                                        installmentAmount = parseInt((total - cashpayment));
                                        document.getElementById('installmentTotal2').value = installmentAmount;
                                        if (cashpayment > total || installmentAmount < 1) {
                                            msg = getByCulture('@culture', 'enterValidAmount');
                                            alert(msg);
                                            document.getElementById('cashPayment2').value = '';
                                            var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                            var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                            var total = unitPrice - discount;
                                            document.getElementById('installmentTotal2').value = total;
                                        }
                                    }

                                    function installmentcalculate3(key) {
                                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                        var total = unitPrice - discount;
                                        if (total == 0) {
                                            msg = getByCulture('@culture', 'enterFee');
                                            alert(msg);
                                        }
                                        document.getElementById('installmentTotal3').value = total;
                                        var cashpayment = parseFloat(document.getElementById("cashPayment3").value);
                                        if (isNaN(cashpayment)) cashpayment = 0;

                                        installmentAmount = parseInt((total - cashpayment));
                                        document.getElementById('installmentTotal3').value = installmentAmount;
                                        if (cashpayment > total || installmentAmount < 1) {
                                            msg = getByCulture('@culture', 'enterValidAmount');
                                            alert(msg);
                                            document.getElementById('cashPayment3').value = '';
                                            var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                                            var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                                            var total = unitPrice - discount;
                                            document.getElementById('installmentTotal3').value = total;
                                        }
                                    }

                                    function detailRefresh() {
                                        var grid = $("#gridFees").data("kendoGrid");
                                        grid.saveChanges();
                                        $.ajax({
                                            type: "POST",
                                            url: '/M210Student/DetailedRefreshDataRead/' + "@Model.UserID" + "/" + "@Model.StudentID",
                                            dataType: "json",
                                            complete: function (e) {
                                                $("#gridDetailed").data("kendoGrid").dataSource.read();
                                            },
                                            type: "post",
                                            dataType: "json"
                                        });
                                    }
                                </script>

                                <style>
                                    .text-section {
                                        text-align: left;
                                    }
                                </style>
                            </div>
                        </div>
                    </div>
                    <!--#endregion -->
                </div>
            </div>
        </div>
        <style>
            .k-tabstrip > .k-content {
                padding: 15px;
            }
        </style>

        <!--#region script -->


        <script>
            $(function () {
                $("#InstallmentButtons").kendoButtonGroup({
                    index: 2,
                });
            });
        </script>

        <script>
            $(document).ready(function () {
                $("#vertical").kendoSplitter({
                    orientation: "vertical",
                    panes: [
                        { collapsible: false },
                        { collapsible: false, size: "100px" },
                        { collapsible: false, resizable: false, size: "100px" }
                    ]
                });

                $("#horizontal").kendoSplitter({
                    panes: [
                        { collapsible: true, size: "600px" },
                        { collapsible: true },
                        { collapsible: true }
                    ]
                });
            });

        </script>
        <!--#endregion -->
        <!--#region  style -->
        <!--#region  style -->
        <style>
            #vertical {
                height: 1000px;
                margin: 0 auto;
            }

            .critical {
                background-color: #fdd;
                color: black;
            }

            .warning {
                background-color: #fda;
                color: black;
            }

            .ok {
                background-color: #ced;
                color: black;
            }

            .critical2 {
                color: #fdd;
            }

            .warning2 {
                color: #fda;
            }

            .ok2 {
                color: #ced;
            }

            .siblingColor {
                font-weight: bold;
                font-style: italic;
            }

            .k-upload-status {
                display: none;
            }

            .ui-datepicker.ui-datepicker-inline {
                width: 100% !important;
            }

            .toolbar {
                float: right;
            }

            .customer-name {
                display: inline-block;
                vertical-align: middle;
                line-height: 32px;
                padding-left: 3px;
            }


            #gridStudents .k-grid-content {
                max-height: 750px;
            }

            #gridStudents2 .k-grid-content {
                max-height: 750px;
            }

            #gridSibling1 .k-grid-content {
                max-height: 200px;
            }

            #gridSibling2 .k-grid-content {
                max-height: 600px;
            }

            #gridFees.k-grid tbody tr {
                line-height: 32px;
            }

            #gridFees.k-grid tbody td {
                padding: 0;
            }
            /*            .k-tooltip.k-popup{
visibility: hidden;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }

            #gridInstallment.k-grid tbody tr {
                line-height: 62px;
            }

            #gridInstallment.k-grid tbody td {
                white-space: nowrap;
                text-overflow: ellipsis;
                padding: 0;
            }

            #gridInstallment .k-grid-content {
                height: 440px;
                max-height: 440px;
            }

            #gridFeesDetail.k-grid tbody tr {
                line-height: 10px;
            }

            #gridFeesDetail.k-grid tbody td {
                white-space: nowrap;
                text-overflow: ellipsis;
                padding: 0;
            }

            #gridDiscount.k-grid tbody tr {
                line-height: 10px;
            }

            #gridDiscount.k-grid tbody td {
                white-space: nowrap;
                text-overflow: ellipsis;
                padding: 0;
            }

            #gridDiscount .k-grid-content {
                max-height: 250px;
            }

            #gridStudentPeriods.k-grid tbody tr {
                line-height: 6px;
            }

            #gridStudentPeriods.k-grid tbody td {
                padding: 0;
            }

            #gridSerialNumbers.k-grid tbody tr {
                line-height: 6px;
            }

            #gridSerialNumbers.k-grid tbody td {
                padding: 0;
            }

            #gridSerialNumbers.grid-container > div {
                padding: 1px 1px;
            }


            gridDetailed.k-grid tbody tr {
                line-height: 10px;
            }

            gridDetailed.k-grid tbody td {
                padding: 0;
            }

            .k-window div.k-window-content {
                overflow: hidden;
            }

            #right-pane {
                overflow: hidden; /* Hide scrollbars */
            }

            /*Scheduler*/
            .color01 {
                background-color: #f8a398;
            }

            .color02 {
                background-color: #2572c0;
            }

            .color03 {
                background-color: #118640;
            }

            .color04 {
                background-color: #6eb3fa;
            }

            .color05 {
                background-color: #f58a8a;
            }

            .color06 {
                background-color: #2c0eca;
            }

            .color07 {
                background-color: #ed8312;
            }

            .color08 {
                background-color: #2cdeca;
            }

            .color09 {
                background-color: #21d187;
            }

            .color10 {
                background-color: #5371a0;
            }

            form label {
                font-weight: bold;
                font-size: 12px;
            }

            .k-header {
                font-weight: bold !important;
                font-size: 12px;
            }

            /*Scheduler*/

        </style>
        <!--#endregion -->
        <!--#endregion -->

    </form>
    <script>
        function checkParameter(e) {
            var chk = document.getElementById("Prf1").checked;
            if (chk) hideit();
            else showit();
            if ("@Model.SortType" == 2) $("#firstNameNone").show();
            if ("@Model.SortType" == 3) $("#lastNameNone").show();
            if ("@Model.Student.SiblingID" != 0) $("#siblingNone").show();
        }

        function hideit() {
            document.getElementById("Ssl1").disabled = true;
            document.getElementById("Ssl2").disabled = true;
            document.getElementById("Ssl3").disabled = true;
            document.getElementById("Ssl4").disabled = true;
        }
        function showit() {
            document.getElementById("Ssl1").disabled = false;
            document.getElementById("Ssl2").disabled = false;
            document.getElementById("Ssl3").disabled = false;
            document.getElementById("Ssl4").disabled = false;
        }
    </script>
    <!--#region context menu -->

    <ul id="context-menuPaste1" class="k-widget k-context-menu" data-role="contextmenuPaste1">
        <li>
            <img src="~/Upload/Menu/family.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.FamilyInfo
            <ul>
                <li id="FathersName"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.FathersInformation</li>
                <li id="MothersName"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.MothersInformation</li>
            </ul>
        </li>

    </ul>
    <script>
        $("#context-menuPaste1").kendoContextMenu({
            target: "#parentName",
            animation: {
                open: { effects: "fadeIn" },
                duration: 500
            },
            select: function (e) {
                var node = $(e.target);
                if (e.item.id == 'FathersName') {
                    FatherNameControl(e)
                };

                if (e.item.id == 'MothersName') {
                    MotherNameControl(e)
                };
            },
        });
    </script>
    <script>
        function FatherNameControl(e) {
            document.getElementById("parentName").value = document.getElementById("fatherName").value;
            document.getElementById("parentID").value = document.getElementById("fatherID").value;
            document.getElementById("parentHomePhone").value = document.getElementById("fatherHomePhone").value;
            document.getElementById("parentMobilePhone").value = document.getElementById("fatherMobilePhone").value;
            document.getElementById("parentWorkPhone").value = document.getElementById("fatherWorkPhone").value;
            var dropdownlist1 = $("#fatherProfessionDropDown").data("kendoDropDownList");
            var dropdownlist2 = $("#parentProfessionDropDown").data("kendoDropDownList");
            dropdownlist2.value(dropdownlist1.value());
            document.getElementById("parentEMail").value = document.getElementById("fatherEMail").value;
        };
        function MotherNameControl(e) {
            document.getElementById("parentName").value = document.getElementById("motherName").value;
            document.getElementById("parentID").value = document.getElementById("motherID").value;
            document.getElementById("parentHomePhone").value = document.getElementById("motherHomePhone").value;
            document.getElementById("parentMobilePhone").value = document.getElementById("motherMobilePhone").value;
            document.getElementById("parentWorkPhone").value = document.getElementById("motherWorkPhone").value;
            var dropdownlist1 = $("#motherProfessionDropDown").data("kendoDropDownList");
            var dropdownlist2 = $("#parentProfessionDropDown").data("kendoDropDownList");
            dropdownlist2.value(dropdownlist1.value());
            document.getElementById("parentEMail").value = document.getElementById("motherEMail").value;
        };
    </script>

    <ul id="context-menuPaste2" class="k-widget k-context-menu" data-role="contextmenuPaste2">
        <li id="ParentName2"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.ParentsInformation</li>
    </ul>
    <script>
        $("#context-menuPaste2").kendoContextMenu({
            target: "#fatherName",
            animation: {
                open: { effects: "fadeIn" },
                duration: 500
            },
            select: function (e) {
                var node = $(e.target);
                if (e.item.id == 'ParentName2') {
                    FatherNameControl2(e)
                };
            },
        });
    </script>
    <script>
        function FatherNameControl2(e) {
            document.getElementById("fatherName").value = document.getElementById("parentName").value;
            document.getElementById("fatherIID").value = document.getElementById("parentID").value;
            document.getElementById("fatherHomePhone").value = document.getElementById("parentHomePhone").value;
            document.getElementById("fatherMobilePhone").value = document.getElementById("parentMobilePhone").value;
            document.getElementById("fatherWorkPhone").value = document.getElementById("parentWorkPhone").value;
            var dropdownlist1 = $("#parentProfessionDropDown").data("kendoDropDownList");
            var dropdownlist2 = $("#fatherProfessionDropDown").data("kendoDropDownList");
            dropdownlist2.value(dropdownlist1.value());
            document.getElementById("fatherEMail").value = document.getElementById("parentEMail").value;
        };
    </script>

    <ul id="context-menuPaste3" class="k-widget k-context-menu" data-role="contextmenuPaste3">
        <li id="ParentName3"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.ParentsInformation</li>
    </ul>
    <script>
        $("#context-menuPaste3").kendoContextMenu({
            target: "#motherName",
            animation: {
                open: { effects: "fadeIn" },
                duration: 500
            },
            select: function (e) {
                var node = $(e.target);
                if (e.item.id == 'ParentName3') {
                    MatherNameControl3(e)
                };
            },
        });
    </script>
    <script>
        function MatherNameControl3(e) {
            document.getElementById("motherName").value = document.getElementById("parentName").value;
            document.getElementById("motherID").value = document.getElementById("parentID").value;
            document.getElementById("motherHomePhone").value = document.getElementById("parentHomePhone").value;
            document.getElementById("motherWorkPhone").value = document.getElementById("parentWorkPhone").value;
            document.getElementById("motherMobilePhone").value = document.getElementById("parentMobilePhone").value;
            var dropdownlist1 = $("#parentProfessionDropDown").data("kendoDropDownList");
            var dropdownlist2 = $("#motherProfessionDropDown").data("kendoDropDownList");
            dropdownlist2.value(dropdownlist1.value());
            document.getElementById("motherEMail").value = document.getElementById("parentEMail").value;
        };
    </script>


    <ul id="context-menu" class="k-widget k-context-menu" data-role="contextmenu">
        <li>
            <img src="~/Upload/Menu/student-male.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.Student
            <ul>
                <li id="Student1"> <img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.StudentAddressI</li>
                <li id="Student2"> <img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.StudentAddressII</li>
            </ul>
        </li>
        <li class="k-separator"></li>

        <li>
            <img src="~/Upload/Menu/parent.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.Parent
            <ul>
                <li id="ParentHome"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.ParentHomeAddress</li>
                <li id="ParentWork"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.ParentWorkAddress</li>
            </ul>
        </li>
        <li class="k-separator"></li>
        <li>
            <img src="~/Upload/Menu/CreditCard.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.MailOrder
            <ul>
                <li id="DebtorHome"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.MailOrderAddress</li>
            </ul>
        </li>
        <li class="k-separator"></li>
        <li>
            <img src="~/Upload/Menu/family.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.Family
            <ul>
                <li id="FatherHome"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.FatherHomeAddress</li>
                <li id="FatherWork"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.FatherWorkAddress</li>
                <li class="k-separator"></li>
                <li id="MotherHome"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.MotherHomeAddress</li>
                <li id="MotherWork"><img src="~/Upload/Menu/arrow.png" style="width:16px; height:16px" />@ESCHOOL.Resources.Resource.MotherWorkAddress</li>
            </ul>
        </li>
    </ul>
    <script>
        var name = $("#context-menu").kendoContextMenu({
            target: ".target",
            animation: {
                open: { effects: "fadeIn" },
                duration: 500
            },

            select: function (e) {
                $.ajax({
                    type: "POST",
                    url: '/M210Student/GetAddress/' + "@Model.StudentID" + "/" + e.item.id,
                    dataType: "json",

                    success: function (result) {
                        var node = $(e.target);

                        /////////////////////// Copy Yapılacak Path Oluşturuluyor /////////////////////////////
                        if (e.item.id == 'Student1') {
                            addressCopyPath = 'studentAddress1'
                            zipCopyPath = 'studentZip1'
                            cityCopyPath = 'studentCityDropDown1'
                            townCopyPath = 'studentTownDropDown1'
                        };
                        if (e.item.id == 'Student2') {
                            addressCopyPath = 'studentAddress2'
                            zipCopyPath = 'studentZip2'
                            cityCopyPath = 'studentCityDropDown2'
                            townCopyPath = 'studentTownDropDown2'
                        };

                        if (e.item.id == 'ParentHome') {
                            addressCopyPath = 'parentHomeAddress'
                            zipCopyPath = 'parentHomeZip'
                            cityCopyPath = 'parentHomeCityDropDown'
                            townCopyPath = 'parentHomeTownDropDown'

                            parentNameCopyPath = 'parentName'
                            parentIDCopyPath = 'parentID'
                            parentHomePhoneCopyPath = 'parentHomePhone'
                            parentGenderTypeDropDownCopyPath = 'parentGenderTypeDropDown'
                            parentMobilePhoneCopyPath = 'parentMobilePhone'
                            parentWorkPhoneCopyPath = 'parentWorkPhone'
                            parentKinshipDropDownCopyPath = 'parentKinshipDropDown'
                            parentProfessionDropDownCopyPath = 'parentProfessionDropDown'
                            parentEMailCopyPath = 'parentEMail'
                        };
                        if (e.item.id == 'ParentWork') {
                            addressCopyPath = 'parentWorkAddress'
                            zipCopyPath = 'parentWorkZip'
                            cityCopyPath = 'parentWorkCityDropDown'
                            townCopyPath = 'parentWorkTownDropDown'
                        };

                        if (e.item.id == 'Parent3Address') {
                            addressCopyPath = 'parent3Address'
                            zipCopyPath = 'parent3Zip'
                            cityCopyPath = 'parent3CityDropDown'
                            townCopyPath = 'parent3TownDropDown'

                            parentNameCopyPath = 'parentName3'
                            parentIDCopyPath = 'parentID3'
                            parentHomePhoneCopyPath = 'parentHomePhone3'
                            parentWorkPhoneCopyPath = 'parentWorkPhone3'
                            parentMobilePhoneCopyPath = 'parentMobilePhone3'
                            addressCopyPath = 'parent3Address'
                        };

                        if (e.item.id == 'DebtorHome') {
                            debtorNameCopyPath = 'debtorName'
                            debtorPlaceOfBirthCopyPath = 'debtorPlaceOfBirth'
                            debtorDOBCopyPath = 'debtorDOB'
                            debtorFatherNameCopyPath = 'debtorFatherName'

                            addressCopyPath = 'debtorHomeAddress'
                            zipCopyPath = 'debtorHomeZipCode'
                            cityCopyPath = 'debtorHomeCityDropDown'
                            townCopyPath = 'debtorHomeTownDropDown'

                            debtorHomePhoneCopyPath = 'debtorHomePhone'
                            debtortMobilePhoneCopyPath = 'debtorMobilePhone'
                            debtorWorkPhoneCopyPath = 'debtorWorkPhone'
                        };

                        if (e.item.id == 'FatherHome') {
                            fatherNameCopyPath = 'fatherName'
                            fatherIDCopyPath = 'fatherID'
                            fatherHomePhoneCopyPath = 'fatherHomePhone'
                            fatherWorkPhoneCopyPath = 'fatherWorkPhone'
                            fatherMobilePhoneCopyPath = 'fatherMobilePhone'
                            fatherEMailCopyPath = 'fatherEMail'
                            fatherProfessionDropDownCopyPath = 'fatherProfessionDropDown'

                            addressCopyPath = 'fatherHomeAddress'
                            zipCopyPath = 'fatherHomeZip'
                            cityCopyPath = 'fatherHomeCityDropDown'
                            townCopyPath = 'fatherHomeTownDropDown'
                        };
                        if (e.item.id == 'FatherWork') {
                            addressCopyPath = 'fatherWorkAddress'
                            zipCopyPath = 'fatherWorkZip'
                            cityCopyPath = 'fatherWorkCityDropDown'
                            townCopyPath = 'fatherWorkTownDropDown'
                        };

                        if (e.item.id == 'MotherHome') {
                            motherNameCopyPath = 'motherName'
                            motherIDCopyPath = 'motherID'
                            motherHomePhoneCopyPath = 'motherHomePhone'
                            motherWorkPhoneCopyPath = 'motherWorkPhone'
                            motherMobilePhoneCopyPath = 'motherMobilePhone'
                            motherEMailCopyPath = 'motherEMail'
                            motherProfessionDropDownCopyPath = 'motherProfessionDropDown'

                            addressCopyPath = 'motherHomeAddress'
                            zipCopyPath = 'motherHomeZip'
                            cityCopyPath = 'motherHomeCityDropDown'
                            townCopyPath = 'motherHomeTownDropDown'
                        };
                        if (e.item.id == 'MotherWork') {
                            addressCopyPath = 'motherWorkAddress'
                            zipCopyPath = 'motherWorkZip'
                            cityCopyPath = 'motherWorkCityDropDown'
                            townCopyPath = 'motherWorkTownDropDown'
                        };

                        /////////////////////// Past Yapılacak Path Oluşturuluyor /////////////////////////////
                        if (node.context.id == 'studentAddress1Target') {
                            addressPastePath = 'studentAddress1'
                            zipPastePath = 'studentZip1'
                            cityPastePathx = '#studentCityDropDown1'
                            townPastePathx = '#studentTownDropDown1'
                        };

                        if (node.context.id == 'studentAddress2Target') {
                            addressPastePath = 'studentAddress2'
                            zipPastePath = 'studentZip2'
                            cityPastePathx = '#studentCityDropDown2'
                            townPastePathx = '#studentTownDropDown2'
                        };

                        if (node.context.id == 'parentHomeAddressTarget') {
                            addressPastePath = 'parentHomeAddress'
                            zipPastePath = 'parentHomeZip'
                            cityPastePathx = '#parentHomeCityDropDown'
                            townPastePathx = '#parentHomeTownDropDown'

                            //parentNamePastePath = 'parentName'
                            //parentIDPastePath = 'parentID'
                            //parentHomePhonePastePath = 'parentHomePhone'
                            //parentMobilePhonePastePath = 'parentMobilePhone'
                            //parentWorkPhonePastePath = 'parentWorkPhone'
                            //parentEMailPastePath = 'parentEMail'
                            //parentGenderTypeDropDownPastePathx = '#parentGenderTypeDropDown'
                            //parentKinshipDropDownPastePathx = '#parentKinshipDropDown'
                            //parentProfessionDropDownPastePathx = '#parentProfessionDropDown'
                        };
                        if (node.context.id == 'parentWorkAddressTarget') {
                            addressPastePath = 'parentWorkAddress'
                            zipPastePath = 'parentWorkZip'
                            cityPastePathx = '#parentWorkCityDropDown'
                            townPastePathx = '#parentWorkTownDropDown'
                        };
                        if (node.context.id == 'parent3AddressTarget') {
                            addressPastePath = 'parent3Address'
                            zipPastePath = 'parent3Zip'
                            cityPastePathx = '#parent3CityDropDown'
                            townPastePathx = '#parent3TownDropDown'
                        };

                        if (node.context.id == 'debtorHomeAddressTarget') {
                            debtorNamePastePath = 'debtorName'
                            debtorPlaceOfBirthPastePath = 'debtorPlaceOfBirth'
                            debtorDOBPastePath = 'debtorDOB'
                            debtorFatherNamePastePath = 'debtorFatherName'

                            addressPastePath = 'debtorHomeAddress'
                            zipPastePath = 'debtorHomeZipCode'
                            cityPastePathx = '#debtorHomeCityDropDown'
                            townPastePathx = '#debtorHomeTownDropDown'

                            debtorHomePhonePastePath = 'debtorHomePhone'
                            debtortMobilePhonePastePath = 'debtorMobilePhone'
                            debtorWorkPhonePastePath = 'debtorWorkPhone'
                        };

                        if (node.context.id == 'fatherHomeAddressTarget') {
                            fatherNamePastePath = 'fatherName'
                            fatherIDPastePath = 'fatherID'
                            fatherHomePhonePastePath = 'fatherHomePhone'
                            fatherWorkPhonePastePath = 'fatherWorkPhone'
                            fatherMobilePhonePastePath = 'fatherMobilePhone'
                            fatherEMailPastePath = 'fatherEMail'
                            fatherProfessionDropDownPastePathx = '#fatherProfessionDropDown'

                            addressPastePath = 'fatherHomeAddress'
                            zipPastePath = 'fatherHomeZip'
                            cityPastePathx = '#fatherHomeCityDropDown'
                            townPastePathx = '#fatherHomeTownDropDown'
                        };
                        if (node.context.id == 'fatherWorkAddressTarget') {
                            addressPastePath = 'fatherWorkAddress'
                            zipPastePath = 'fatherWorkZip'
                            cityPastePathx = '#fatherWorkCityDropDown'
                            townPastePathx = '#fatherWorkTownDropDown'
                        };
                        if (node.context.id == 'motherHomeAddressTarget') {
                            motherNamePastePath = 'motherName'
                            motherIDPastePath = 'motherID'
                            motherHomePhonePastePath = 'motherHomePhone'
                            motherWorkPhonePastePath = 'motherWorkPhone'
                            motherMobilePhonePastePath = 'motherMobilePhone'
                            motherEMailPastePath = 'motherEMail'
                            motherProfessionDropDownPastePathx = '#motherProfessionDropDown'

                            addressPastePath = 'motherHomeAddress'
                            zipPastePath = 'motherHomeZip'
                            cityPastePathx = '#motherHomeCityDropDown'
                            townPastePathx = '#motherHomeTownDropDown'
                        };
                        if (node.context.id == 'motherWorkAddressTarget') {
                            addressPastePath = 'motherWorkAddress'
                            zipPastePath = 'motherWorkZip'
                            cityPastePathx = '#motherWorkCityDropDown'
                            townPastePathx = '#motherWorkTownDropDown'
                        };
                        if (node.context.id == 'invoiceAddressTarget') {
                            addressPastePath = 'invoiceAddress'
                            zipPastePath = 'invoiceZip'
                            cityPastePathx = '#invoiceCityDropDown'
                            townPastePathx = '#invoiceTownDropDown'

                            invoiceCountryPastePath = 'invoiceCountry'
                            invoiceTitlePastePath = 'invoiceTitle'
                            invoiceTaxOfficePastePath = 'invoiceTaxOffice'
                            invoiceTaxNumberPastePath = 'invoiceTaxNumber'
                            invoicePhonePastePath = 'invoicePhone'
                            invoiceFaxPastePath = 'invoiceFax'
                            invoiceEMailPastePath = 'invoiceEMail'
                            invoiceWebAddressPastePath = 'invoiceWebAddress'
                        };

                        if (result.address == '' && result.zip == '' && result.city == 0 && result.town == 0) {
                            document.getElementById(addressPastePath).value = document.getElementById(addressCopyPath).value;
                            document.getElementById(zipPastePath).value = document.getElementById(zipCopyPath).value;
                            $(cityPastePathx).data().kendoDropDownList.value(document.getElementById(cityCopyPath).value);
                            $(townPastePathx).data().kendoDropDownList.value(document.getElementById(townCopyPath).value);

                            document.getElementById(parentNamePastePath).value = document.getElementById(parentNameCopyPath).value;
                            document.getElementById(parentIDPastePath).value = document.getElementById(parentIDCopyPath).value;
                            document.getElementById(parentHomePhonePastePath).value = document.getElementById(parentHomePhoneCopyPath).value;
                            document.getElementById(parentMobilePhonePastePath).value = document.getElementById(parentMobilePhoneCopyPath).value;
                            document.getElementById(parentWorkPhonePastePath).value = document.getElementById(parentWorkPhoneCopyPath).value;
                            document.getElementById(parentEMailPastePath).value = document.getElementById(parentEMailCopyPath).value;
                            $(parentGenderTypeDropDownPastePathx).data().kendoDropDownList.value(document.getElementById(parentGenderTypeDropDownCopyPath).value);
                            $(parentProfessionDropDownPastePathx).data().kendoDropDownList.value(document.getElementById(parentProfessionDropDownCopyPath).value);
                            $(parentKinshipDropDownPastePathx).data().kendoDropDownList.value(document.getElementById(parentKinshipDropDownCopyPath).value);
                        }
                        else {
                            document.getElementById(addressPastePath).value = result.address;
                            document.getElementById(zipPastePath).value = result.zip;
                            $(cityPastePathx).data().kendoDropDownList.value(result.city);
                            $(townPastePathx).data().kendoDropDownList.value(result.town);
                
                            document.getElementById(parentNamePastePath).value = result.name;
                            document.getElementById(parentIDPastePath).value = result.id;
                            document.getElementById(parentHomePhonePastePath).value = result.homePhone;
                            document.getElementById(parentMobilePhonePastePath).value = result.mobilePhone;
                            document.getElementById(parentWorkPhonePastePath).value = result.workPhone;
                            document.getElementById(parentEMailPastePath).value = result.eMail;
                            $(parentGenderTypeDropDownPastePathx).data().kendoDropDownList.value(result.genderType);
                            $(parentProfessionDropDownPastePathx).data().kendoDropDownList.value(result.profession);
                            $(parentKinshipDropDownPastePathx).data().kendoDropDownList.value(result.kinship);
                        }
                    },
                });
            },

            open: function (e) {
                var menu = $("#context-menu").data("kendoContextMenu");
                menu.enable("#Student1", true);
                menu.enable("#Student2", true);
                menu.enable("#ParentHome", true);
                menu.enable("#ParentWork", true);
                menu.enable("#Parent3Address", true);
                menu.enable("#DebtorHome", true);
                menu.enable("#FatherHome", true);
                menu.enable("#FatherWork", true);
                menu.enable("#MotherHome", true);
                menu.enable("#MotherWork", true);

                var node1 = $(e.target);
                if (node1.context.id == 'studentAddress1Target') { menu.enable("#Student1", false); }
                if (node1.context.id == 'studentAddress2Target') { menu.enable("#Student2", false); }
                if (node1.context.id == 'parentHomeAddressTarget') { menu.enable("#ParentHome", false); }
                if (node1.context.id == 'parentWorkAddressTarget') { menu.enable("#ParentWork", false); }
                if (node1.context.id == 'parent3AddressTarget') { menu.enable("#Parent3Address", false); }
                if (node1.context.id == 'debtorHomeAddressTarget') { menu.enable("#DebtorHome", false); }
                if (node1.context.id == 'fatherHomeAddressTarget') { menu.enable("#FatherHome", false); }
                if (node1.context.id == 'fatherWorkAddressTarget') { menu.enable("#FatherWork", false); }
                if (node1.context.id == 'motherHomeAddressTarget') { menu.enable("#MotherHome", false); }
                if (node1.context.id == 'motherWorkAddressTarget') { menu.enable("#MotherWork", false); }
            }
        });

    </script>



    <!--#endregion -->
    <!--#region dictionary -->
    <script>
        var dictionary =
        {
            'tr-TR': {
                select: 'Seç',
                selectbankName: 'Banka Seçimini Yapınız.',
                enterFee: 'Önce Öğrencinin Ücret Girişini Yapınız.',
                enterValidAmount: 'Geçerli Bir Tutar Giriniz.',
                selectclassroom: 'Öğrencinin Sınıfını Giriniz.',
                feetableempty: 'Ücret tablosu girilmemiş.',
                studentfeeempty: 'Öğrenci ücretleri girilmemiş.',
                installmentControl: 'Taksit Toplamı Genel Toplama Eşit Olmalıdır.',
                installmentControl1: 'Genel Toplam   :',
                installmentControl2: 'Taksit Toplamı :',
                exceeded1: 'Dikkat; Girilen Sınıfın Kontenjanı (',
                exceeded11: ') ile Sınırlandırılmıştır',
                exceeded2: 'Bu Sınıfta Mevcut (',
                exceeded22: ') Öğrenci Bulunmaktadır.',
                exceeded3: 'Sınıfın Kontenjanı Dolmuştur, Lütfen Başka Bir Sınıfa Kayıt Yapınız.',
                titleMsg: 'Kullanıcı Mesajı:',
                nameRequiredField: 'Ad ve Soyad girilmesi zorunlu alanlardır.',
                studentselection: 'Öğrenci Seçimi',
                siblingselection: 'Kardeş/Grup Seçimi',
                studentInfoCopy: 'Öğrenci Adres Bilgileri Kopyalama İşlemleri',
                msgOk: 'Tamam',
                exit: 'Çıkış',
                schoolChange: 'Bu Öğrenci İçin Okul Değişliği Yapılacak...',
                exitProgram: 'Kayıt Yapmadan Programdan Çıkıyorsunuz?',
                schoolChangeCancel: 'Bu Öğrenci İçin Okul Değişliği İptal Edildi.',
                schoolChangeClassroom1: 'Yeni Dönem:',
                schoolChangeClassroom2: 'Sınıf Değişikliğini Yeni Dönemde Yapabilirsiniz.',

                marker: 'İşaretleyici',
                title: 'Başlık giriniz.',
                color01: 'Renk-01',
                color02: 'Renk-02',
                color03: 'Renk-03',
                color04: 'Renk-04',
                color05: 'Renk-05',
                color06: 'Renk-06',
                color07: 'Renk-07',
                color08: 'Renk-08',
                color09: 'Renk-09',
                color10: 'Renk-10',
            },

            'en-US': {
                select: 'Select',
                selectbankName: 'Select the bank name.',
                enterFee: "'First Enter the Student's Fee",
                enterValidAmount: 'Enter Valid Amount.',
                selectclassroom: "Enter Student's Class.",
                feetableempty: 'The wage table has not been entered.',
                studentfeeempty: 'Enter student fees.',
                installmentControl: 'Total Installment, Grand Total Should Be Equal.',
                installmentControl1: 'Grand Total       :',
                installmentControl2: 'Installment Total :',
                exceeded1: 'Attention; Quota of the entered Classroom (',
                exceeded11: ') ',
                exceeded2: 'There are (',
                exceeded22: ') Students İn the Classroom.',
                exceeded3: 'Class has been filled, Please Register for Another Classroom.',
                titleMsg: 'User message:',
                nameRequiredField: 'First Name and Last Name are required fields.',
                studentselection: 'Student Selection',
                siblingselection: 'Sibling/Group Selection',
                studentInfoCopy: 'Student Address Information Copy Procedures',
                msgOk: 'OK',
                exit: 'Exit',
                schoolChange: 'A School Change will be made for this Student...',
                exitProgram: 'You are Exiting the Program Without Saving??',
                schoolChangeCancel: 'School Change Has Been Canceled For This Student.',
                schoolChangeClassroom1: 'New Period: ',
                schoolChangeClassroom2: 'You Can Change Your Class in the New Term.',
                marker: 'Marker',
                title: 'Enter title.',
                color01: 'Color-01',
                color02: 'Color-02',
                color03: 'Color-03',
                color04: 'Color-04',
                color05: 'Color-05',
                color06: 'Color-06',
                color07: 'Color-07',
                color08: 'Color-08',
                color09: 'Color-09',
                color10: 'Color-10',
            },
        }
        function getByCulture(culture, word) {
            return dictionary[culture][word]
        }
    </script>
    <!--#endregion -->
    <!--#region greed fees -->
    <script>
        function onChange(e) {
            var classroom = document.getElementById('classroomDropDown').value;
            var grid = $("#gridFees").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());

            var period = "@Model.Period";

            var selectedRows = selectedItem.studentDebtID;
            var selection = grid.select();
            var rowData = grid.dataItem(selection);
            var ID = rowData.viewModelId;
            var feeID = rowData.schoolFeeID;
            document.getElementById('schoolFeeID').value = feeID;
            document.getElementById('schoolFeeIDMore').value = feeID;
            document.getElementById('feeNameID').value = rowData.feeName;

            var dataItem = grid.dataSource.get(selectedRows);
            var unitPrice = dataItem.get("unitPrice");

            dataItem.set("unitPrice", 0);

            var row = grid.dataSource.indexOf(dataItem);
            document.getElementById('colInx').value = row;

            var chk = dataItem.get("selectDiscount");

            if (classroom == 0) {
                msg = getByCulture('@culture', 'selectclassroom');
                alert(msg)
            }
            else {
                $.ajax({
                    type: "POST",
                    url: '/M210Student/SchoolFeeDataTableRead/' + period + "/" + "@Model.UserID" + "/" + classroom + "/" + feeID + "/" + ID + "/" + unitPrice,
                    dataType: "json",
                    success: function (result) {
                        var dataItem = grid.dataSource.get(selectedRows);

                        var msg = 0;
                        if (result.unitPrice > 0) {
                            result.schoolFeeTypeAmount = 0;
                            msg = 1;
                        }

                        if (result.schoolFeeTypeAmount == 0 && msg == 0) {
                            msg = getByCulture('@culture', 'feetableempty');
                            alert(msg)
                        }
                        else {
                            dataItem.set("unitPrice", result.schoolFeeTypeAmount);
                            var amount1 = (result.schoolFeeTypeAmount - selectedItem.discount);

                            dataItem.set("amount", amount1);
                         
                            var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                            var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                            var gridtotal = unitPrice - discount;

                            document.getElementById('installmentTotal1').value = gridtotal;
                            document.getElementById('installmentTotal2').value = gridtotal;
                            document.getElementById('installmentTotal3').value = gridtotal;

                            document.getElementById('classroomTypeID').value = result.classroomTypeID;

                            dataItem.dirty = true;
                            if (result.isExpand) {
                                ExpandFeeDetail();
                                $.ajax({
                                    type: "POST",
                                    url: "/M210Student/SchoolFeeDetailRead/" + "@Model.UserID" + "/" + parseInt(document.getElementById('schoolFeeID').value) + "/" + parseInt(document.getElementById('classroomTypeID').value) + "/" + "L1",
                                    dataType: "json",
                                    success: function (result) {
                                        $("#gridFeesDetail").data("kendoGrid").dataSource.read()
                                        var grid = $("#gridFeesDetail").data("kendoGrid");
                                        grid.refresh();
                                    },
                                    type: "post",
                                    dataType: "json"
                                });
                            }
                            else {
                                CollepsFeeDetail();
                            }
                            grid.saveChanges();
                        }
                    },
                    error: function (httpRequest, textStatus, errorThrown) {
                        alert("Error: " + textStatus + " " + errorThrown + " " + httpRequest);
                    }
                });
            };
        };

        var record = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "SchoolDebtDataRead/" + "@Model.Period" + "/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },

                        update: {
                            url: function (options) {
                                var classroomID = document.getElementById('classroomID').value;
                                if (classroomID == 0 || classroomID == "") var classroomID = @Model.ClassroomID;

                                var url = crudServiceBaseUrl + "SchoolDebtDataUpdate/" + options.models[0].id + "/" + "@Model.UserID" + "/" + "@Model.StudentID" + "/" + classroomID;
                                return url;
                            },
                            complete: function (e) {
                                $("#gridFees").data("kendoGrid").dataSource.read();
                            },
                            type: "post",
                            dataType: "json"
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },

                    batch: true,
                    schema: {
                        model: {
                            id: "studentDebtID",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                studentID: { editable: false, type: "number" },
                                schoolFeeID: { editable: false, type: "number" },
                                period: { editable: false, type: "string" },
                                feeName: { editable: false, type: "string" },
                                selectFee: { type: "boolean" },
                                classroomTypeID: { type: "boolean" },
                                selectDiscount: { type: "boolean" },
                                unitPrice: { editable: isNew, type: "number", validation: { required: true, min: 0 } },
                                discount: { editable: false, type: "number" },
                                amount: { editable: false, type: "number" },
                                isList: { editable: isNew, type: "boolean" }
                            }
                        }
                    },

                    aggregate: [{ field: "feeName", aggregate: "count" },
                    { field: "unitPrice", aggregate: "sum" },
                    { field: "discount", aggregate: "sum" },
                    { field: "amount", aggregate: "sum" }]

                });
            var first = 1;
            var grid = $("#gridFees").kendoGrid({
                dataSource: dataSource,
                pageable: false,
                resizable: true,
                ajax: true,
                multiselect: true,
                //selectable: "multiple, row",
                persistSelection: false,
                change: onChange,

                edit: function (e) {
                    let container = e.container;
                    container.find("input").removeAttr("title");
                },

                columns: [
                    { field: "feeName", title: "@ESCHOOL.Resources.Resource.FeeName", width: "135px", aggregates: ["count"], footerTemplate: "#=count#", template: "#=feeName#" },
                    { selectable: true, width: "40px", title: "@ESCHOOL.Resources.Resource.Select", name: "selectable1", id: "selectable1", headerTemplate: "@ESCHOOL.Resources.Resource.Select", attributes: { style: "text-align:center" } },
                    { field: "unitPrice", title: "@ESCHOOL.Resources.Resource.Amount", template: "#if(unitPrice === 0){#  #}else{# #=kendo.toString(unitPrice, 'n')# #}#", aggregates: ["sum"], footerTemplate: "<div style='text-align: right'>#= kendo.toString(data.unitPrice.sum,'n') # </div>", width: "90px", attributes: { style: "text-align:right" }, editor: editNumber },
                    { field: "selectDiscount", title: "@ESCHOOL.Resources.Resource.Select", width: "52px", height: "50px", template: "<input class='customClass' #if (selectDiscount) { # checked='checked' # } # type='checkbox' />" },

                    { field: "discount", title: "@ESCHOOL.Resources.Resource.Discount", template: "#if(discount === 0){#  #}else{# #=kendo.toString(discount, 'n')#  #}#", aggregates: ["sum"], footerTemplate: "<div style='text-align: right'>#= kendo.toString(data.discount.sum,'n') # </div>", width: "80px", attributes: { style: "text-align:right" } },
                    { field: "amount", title: "@ESCHOOL.Resources.Resource.RegistrationFee", aggregates: ["sum"], template: "#if(unitPrice === 0){#  #}else{# #=kendo.toString(unitPrice - discount, 'n')#  #}#", footerTemplate: "<div style='text-align: right'>#= kendo.toString(data.unitPrice.sum - data.discount.sum,'n') # </div>", width: "90px", attributes: { style: "text-align:right" } },
                    { field: "isList", width: "10%", title: "@ESCHOOL.Resources.Resource.List", editor: customBoolEditor3, template: "<input  #if (isList) { # checked='checked' # } # type='checkbox' disabled />", attributes: { style: "text-align:center" } },
                    { field: "studentDebtID", width: "0px", hidden: true, },

                ],

                save: function (e) {
                    if (e.model.hasOwnProperty("unitPrice") == true && isNew == true) {
                        var item = e.values;
                        var u = item.unitPrice;
                        var d = item.discount;
                        var l = item.isList;

                        var isPriceUpdate = false;
                        var isListUpdate = false;
                        if (item.unitPrice != undefined) isPriceUpdate = true;
                        if (item.isList != undefined) isListUpdate = true;

                        var classroomID = document.getElementById('classroomID').value;
                        if (classroomID == 0 || classroomID == "") var classroomID = @Model.ClassroomID;
                        if (classroomID == 0) {
                            msg = getByCulture('@culture', 'selectclassroom');
                            alert(msg)
                        }
                        else {
                            $.ajax({
                                type: "POST",
                                url: "/M210Student/GridFeesUpdate/" + "@Model.UserID" + "/" + "@Model.StudentID" + "/" + classroomID + "/" + e.model.schoolFeeID + "/" + u + "/" + d + "/" + l + "/" + isPriceUpdate + "/" + isListUpdate,
                                dataType: "json",
                                complete: function (e) {
                                    $("#gridFees").data("kendoGrid").dataSource.read();
                                },
                            });
                        }
                    }
                    editModeFalse();
                },

                dataBound: function (e) {
                    createSwitch(this.tbody.find(".customClass"));

                    var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                    var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                    total = unitPrice - discount;

                    if (total == 0) total = @Model.StudentTemp.SubTotal;
                    document.getElementById('totalins').value = total;

                    var cashpayment = parseFloat(document.getElementById("cashPayment1").value);
                    if (isNaN(cashpayment)) cashpayment = 0;
                    installmentAmount = parseInt((total - cashpayment));
                    document.getElementById('installmentTotal1').value = installmentAmount.toFixed(2);
                    var cashpayment = parseFloat(document.getElementById("cashPayment2").value);

                    if (isNaN(cashpayment)) cashpayment = 0;
                    installmentAmount = parseInt((total - cashpayment));
                    document.getElementById('installmentTotal2').value = installmentAmount.toFixed(2);

                    var cashpayment = parseFloat(document.getElementById("cashPayment3").value);
                    if (isNaN(cashpayment)) cashpayment = 0;
                    installmentAmount = parseInt((total - cashpayment));
                    document.getElementById('installmentTotal3').value = installmentAmount.toFixed(2);

                    if (unitPrice == 0) {
                        let grid = this;
                        var data = grid.dataSource.at(0);
                        data.fields["unitPrice"].editable = true;
                        isNew = true;
                    };

                }
            });

            function editNumber(container, options) {
                $('<input data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoNumericTextBox({
                        spinners: false
                    });
            }

            function createSwitch(element) {
                element.kendoMobileSwitch({
                    onLabel: '<i class="fas fa-check"></i>',
                    offLabel: '<i class="fas fa-toggle-off"></i>',
                    change: onClickA
                });
            }

            function onClickA(e) {
                if ("@Model.IsPermissionDiscount" == 'False')
                    permissionsControlDiscount();
                else {
                    var checked = e.checked;
                    if (checked) {
                        ExpandDiscount();
                        $("#gridDiscount").data("kendoGrid").dataSource.read();
                        document.getElementById("discountNameId").innerHTML = document.getElementById('feeNameID').value;
                    }
                    else {
                        CollepsDiscount();
                        document.getElementById('discountNameId').innerHTML = "";
                    }
                }
            }
        });
        $("#gridFees").on("dblclick", "tbody td", function (e) {
            if (isNew == true) {
                editModeTrue();
            }
        });

        $("#gridFees").on("click", "tbody td", function (e) {
            var cell = $(e.currentTarget);
            var grid = $("#gridFees").data("kendoGrid");

            var cellIndex = 2;
            var column = grid.columns[cellIndex];
            var dataItem = grid.dataItem(cell.closest("tr"));
            document.getElementById('resultAmount').value = dataItem[column.field];

            var cellIndex = 7;
            var column = grid.columns[cellIndex];
            var dataItem = grid.dataItem(cell.closest("tr"));
            document.getElementById('resultID').value = dataItem[column.field];
        });

        function customBoolEditor3(container, options) {
            $('<input class="k-checkbox" type="checkbox" name="isList" data-type="boolean" data-bind="checked:isList">').appendTo(container);
        };

        function editModeTrue() {
            var grid = $("#gridFees").data("kendoGrid");
            grid.setOptions({
                editable: true
            });
        };
        function editModeFalse() {
            var grid = $("#gridFees").data("kendoGrid");
            grid.setOptions({
                editable: false
            });
        };
    </script>

    <style>
        .k-grid-content td {
            position: relative;
        }
    </style>

    <script>
        var record = 0;
        var recordMore = 0;

        $(document).ready(function () {
            var element = $("#gridFeesDetail").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: function (options) {
                                var url = "/M210Student/SchoolFeeDetailRead/" + "@Model.UserID" + "/" + parseInt(document.getElementById('schoolFeeID').value) + "/" + parseInt(document.getElementById('classroomTypeID').value) + "/" + "L1";
                                return url;
                            },
                            type: "post",
                            dataType: "json"
                        },
                    },
                    pageSize: 6,
                    serverPaging: true,
                    serverSorting: true
                },
                autoBind: false,
                selectable: 'row',
                //height: 600,
                sortable: true,
                pageable: true,
                detailInit: detailInit,
                dataBound: function () {
                    this.expandRow(this.tbody.find("tr.k-master-row").first());
                },
                detailExpand: function (e) {
                    e.sender.tbody.find('.k-detail-row').each(function (idx, item) {
                        if (item !== e.detailRow[0]) {
                            e.sender.collapseRow($(item).prev());
                        }
                    })
                },
                columns: [
                    { title: "#", template: "#= ++record #", width: 40 },
                    { field: "schoolFeeName", title: "@ESCHOOL.Resources.Resource.Name", width: "200px", editable: true },
                    { field: "schoolFeeTypeAmount", title: "@ESCHOOL.Resources.Resource.Amount", width: "120px", editable: false, format: '{0:#,##}', template: "#=schoolFeeTypeAmount#" },
                ],
            });
        });

        function detailInit(e) {
            grid = this;
            grid.bind("detailExpand", function (e) {
                id = this.dataItem(e.masterRow).categoryID;
                viewModelID = this.dataItem(e.masterRow).viewModelID;
                expanded[id] = true;
            });
            $("<div/>").appendTo(e.detailCell).kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: "/M210Student/SchoolFeeMoreDetailRead1/" + "@Model.UserID" + "/" + parseInt(document.getElementById('schoolFeeID').value) + "/" + parseInt(document.getElementById('classroomTypeID').value) + "/" + "L2",
                            //url: "/M210Student/SchoolFeeMoreDetailRead1/" + "@Model.UserID" + "/" + 1390 + "/" + 101 + "/" + "L2",


                            dataType: "json"
                        },
                        update: {
                            url: function (options) {
                                var url = "/M210Student/SchoolFeeMoreDetailUpdate/" + options.models[0].id + "/" + "@Model.UserID" + "/" + "L2" + "/" + parseInt(document.getElementById('schoolFeeID').value) + "/" + 0 + "/" + parseInt(document.getElementById('classroomTypeID').value) + "/" + "@Model.StudentID";
                                return url;
                            },
                            complete: function (e) {
                                $("#gridFees").data("kendoGrid").dataSource.read();
                                CollepsFeeDetail();
                            },
                            type: "post",
                            dataType: "json",
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        },
                    },
                    serverPaging: true,
                    serverSorting: true,
                    serverFiltering: true,
                    pageSize: 10,
                    batch: true,
                    schema: {
                        model: {
                            id: "viewModelID",
                            fields: {
                                viewModelID: { type: "number" },
                                schoolFeeID: { type: "number" },
                                schoolFeeName: { editable: false, nullable: true },
                                schoolFeeTypeAmount: { type: "number", validation: { min: 0, required: true, format: '{0:#,##}' } },
                                stockQuantity: { type: "number", validation: { min: 0, required: true, format: '{0:n}' } },
                                isSelect: { type: "boolean" },
                            }
                        }
                    },
                },
                selectable: "multiple, row",
                scrollable: false,
                sortable: true,
                pageable: true,
                detailInit: moreDetail,
                detailExpand: function (e) {
                    e.sender.tbody.find('.k-detail-row').each(function (idx, item) {
                        if (item !== e.detailRow[0]) {
                            e.sender.collapseRow($(item).prev());
                        }
                    })
                },
                toolbar: ["cancel", "save"],
                columns: [
                    { field: "isSelect", title: "@ESCHOOL.Resources.Resource.Select", width: "60px", template: "<input  #if (isSelect) { # checked='checked' # } # type='checkbox' />", attributes: { style: "text-align:center;" } },
                    { title: "#", template: "#= ++recordMore #", width: 40 },
                    { field: "schoolFeeName", title: "@ESCHOOL.Resources.Resource.Name", width: "180px", editable: true },
                    { field: "schoolFeeTypeAmount", title: "@ESCHOOL.Resources.Resource.Amount", width: "120px", editable: true, format: '{0:#,##}', template: "#=schoolFeeTypeAmount#" },
                    { field: "stockQuantity", title: "@ESCHOOL.Resources.Resource.Quantity", width: "100px", format: '{0:n}', template: "#=stockQuantity#" },
                ],

                dataBinding: function () {
                    recordMore = 0;
                },
                editable: true,
            });
        }

        function moreDetail(e) {
            grid = this;
            grid.bind("detailExpand", function (e) {
                document.getElementById('schoolFeeID').value = this.dataItem(e.masterRow).schoolFeeID;
                document.getElementById('studentDebtID').value = this.dataItem(e.masterRow).studentDebtID;
            });

            setTimeout(function () {
                $("<div/>").appendTo(e.detailCell).kendoGrid({
                    dataSource: {
                        transport: {
                            read: {
                                url: function (options) {
                                    var url = "/M210Student/SchoolFeeMoreDetailRead2/" + "@Model.UserID" + "/" + parseInt(document.getElementById('schoolFeeID').value) + "/" + parseInt(document.getElementById('classroomTypeID').value) + "/" + "L3";
                                    //var url = "/M210Student/SchoolFeeMoreDetailRead2/" + "@Model.UserID" + "/" + "@Model.StudentID" + "/" + parseInt(document.getElementById('schoolFeeID').value) + "/" + parseInt(document.getElementById('studentDebtID').value) + "/" + "L3";
                                    return url;
                                },
                                type: "post",
                                dataType: "json"
                            },

                            update: {
                                url: function (options) {
                                    var url = "/M210Student/SchoolFeeMoreDetailUpdate/" + options.models[0].id + "/" + "@Model.UserID" + "/" + "L3" + "/" + parseInt(document.getElementById('schoolFeeID').value) + "/" + parseInt(document.getElementById('schoolFeeIDMore').value) + "/" + parseInt(document.getElementById('classroomTypeID').value) + "/" + "@Model.StudentID";
                                    return url;
                                },
                                complete: function (e) {
                                    $("#gridFees").data("kendoGrid").dataSource.read();
                                    CollepsFeeDetail();
                                },
                                type: "post",
                                dataType: "json",
                            },
                            parameterMap: function (options, operation) {
                                if (operation !== "read" && options.models) {
                                    return { models: kendo.stringify(options.models) };
                                }
                            },
                        },
                        serverPaging: true,
                        serverSorting: true,
                        serverFiltering: true,
                        pageSize: 10,
                        batch: true,
                        schema: {
                            model: {
                                id: "viewModelID",
                                fields: {
                                    viewModelID: { type: "number" },
                                    schoolFeeID: { type: "number" },
                                    schoolFeeName: { editable: false, nullable: true },
                                    schoolFeeTypeAmount: { type: "number", validation: { min: 0, required: true, format: '{0:#,##}' } },
                                    stockQuantity: { type: "number", validation: { min: 1, required: true, format: '{0:n}' }, defaultValue: 1 },
                                    isSelect: { type: "boolean" },
                                }
                            }
                        },
                    },
                    selectable: "multiple, row",
                    scrollable: false,
                    sortable: true,
                    pageable: true,
                    detailExpand: function (e) {
                        e.sender.tbody.find('.k-detail-row').each(function (idx, item) {
                            if (item !== e.detailRow[0]) {
                                e.sender.collapseRow($(item).prev());
                            }
                        })
                    },
                    change: onChange,
                    toolbar: ["cancel", "save"],
                    columns: [
                        { field: "isSelect", title: "@ESCHOOL.Resources.Resource.Select", width: "60px", template: "<input  #if (isSelect) { # checked='checked' # } # type='checkbox' />", attributes: { style: "text-align:center;" } },
                        { title: "#", template: "#= ++recordMore #", width: 40 },
                        { field: "schoolFeeName", title: "@ESCHOOL.Resources.Resource.Name", width: "180px", editable: true },
                        { field: "schoolFeeTypeAmount", title: "@ESCHOOL.Resources.Resource.Amount", width: "120px", editable: true, format: '{0:#,##}', template: "#=schoolFeeTypeAmount#" },
                        { field: "stockQuantity", title: "@ESCHOOL.Resources.Resource.Quantity", width: "100px", format: '{0:n}', template: "#=stockQuantity#" },
                    ],

                    dataBinding: function () {
                        recordMore = 0;
                    },

                    editable: true,


                });

                //$("#gridFeesDetail").on("change", "tbody td", function (e) {
                //    //alert("change");
                //    var grid = $("#gridFeesDetail").data("kendoGrid");
                //    //var dataItem = grid.dataItem($(this).closest('tr'));
                //    dataItem.set("schoolFeeTypeAmount", 123);
                //    dataItem.set("stockQuantity", 1)
                //});

            }, 1);
        };
    </script>

    <div id="alert"></div>
    <script>
        function permissionsControlDiscount() {
            msg = getByCulture('@culture', 'msgOk');
            showAlert(msg);
        };

        function showAlert(message) {
            msg = getByCulture('@culture', 'titleMsg');
            $("#alert").kendoAlert({
                title: msg,
                content: "<strong>@ESCHOOL.Resources.Resource.PermissionMsg</strong>",
                messages: {
                    okText: message
                },
                actions: [{
                    text: "#: messages.okText #",
                    action: function (e) {
                    }
                }]
            }).data("kendoAlert").open();
        };


        function permissionsControlFee() {
            CollepsFee();
            CollepsInstallment();
            var panelBar = $("#panelbar1").data("kendoPanelBar");
            panelBar.enable($("#panelbarfee"), false);
            panelBar.enable($("#panelbardetailfee"), false);
            panelBar.enable($("#panelbardiscount"), false);

            var panelBar = $("#panelbar2").data("kendoPanelBar");
            panelBar.enable($("#panelbartransactions"), false);
            panelBar.enable($("#panelbarinstallment"), false);
            panelBar.enable($("#panelbardetailedinstallment"), false);
        };

    </script>

    <!--#endregion -->
    <!--#region grid discount -->
    <script>
        var record1 = 0;
        var discount = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "DiscountDataRead/" + parseInt(document.getElementById('resultID').value) + "/" + "@Model.UserID" + "/" + "@Model.StudentID";
                                return url;
                            },
                            type: "post",
                            dataType: "json"
                        },

                        update: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "DiscountDataUpdate/" + options.models[0].id + "/" + document.getElementById('resultAmount').value;
                                return url;
                            },
                            complete: function (e) {
                                $("#gridDiscount").data("kendoGrid").dataSource.read();
                                CollepsDiscount();
                                $("#gridFees").data("kendoGrid").dataSource.read();
                            },
                            type: "post",
                            dataType: "json"
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    //pageSize: 20,
                    batch: true,
                    schema: {
                        model: {
                            id: "discountTableID",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                discountTableID: { editable: false, nullable: true },
                                studentID: { editable: false, type: "number" },
                                schoolID: { editable: false, type: "number" },
                                schoolFeeID: { editable: false, type: "number" },
                                studentDebtID: { editable: true, type: "number" },

                                period: { editable: false, type: "string" },
                                discountName: { editable: false, type: "string" },
                                discountFeeName: { editable: false, type: "string" },
                                discountPercent: { type: "number" },
                                discountAmount: { editable: false, type: "number", validation: { required: true, min: 0 } },
                                discountTotal: { editable: true, type: "number" },
                                discountApplied: { editable: true, type: "number" },
                                isPasswordRequired: { type: "boolean" },
                                sortOrder: { type: "number", validation: { required: true, min: 0 } },
                                isActive: { type: "boolean" }
                            }
                        }
                    },

                    aggregate: [
                        { field: "discountName", aggregate: "count" },
                        { field: "discountAmount", aggregate: "sum" },
                        { field: "discountTotal", aggregate: "sum" },
                        { field: "discountApplied", aggregate: "sum" }
                    ]
                });

            $("#gridDiscount").kendoGrid({
                dataSource: dataSource,
                pageable: true,
                resizable: true,
                ajax: true,
                selectable: 'row',
                persistSelection: false,
                change: onChange,

                toolbar: ["cancel", "save", {
                    template: '<div class="toolbar"> <label class="switch-label" for="switch">@ESCHOOL.Resources.Resource.GradualDiscount&emsp;</label><input  type="checkbox"  class="kendo-switch" id="switch" aria-label="switch" data-change="onChange"/> </div>',
                },],

                columns: [
                    { title: "#", template: "#= ++record1 #", width: 25 },
                    { selectable: true, width: "40px", name: "selectable", id: "selectable", headerTemplate: "@ESCHOOL.Resources.Resource.Select", attributes: { style: "text-align:center;" } },
                    { field: "discountName", title: "@ESCHOOL.Resources.Resource.DiscountName", width: "160px", aggregates: ["count"], footerTemplate: "#=count#", template: "#=discountName#", editable: true },
                    { field: "discountPercent", width: "40px", title: "%", aggregates: ["sum"], template: "#if(discountPercent === 0){#  #}else{# #=kendo.toString(discountPercent, 'n0')# #}#", format: "# \%", editable: true, attributes: { style: "text-align:center" } },
                    { field: "discountAmount", title: "@ESCHOOL.Resources.Resource.Amount", aggregates: ["sum"], template: "#if(discountAmount === 0){#  #}else{# #=kendo.toString(discountAmount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#= kendo.toString(data.discountAmount.sum,'n') # </div>", width: "85px", attributes: { style: "text-align:right" } },
                    { field: "discountTotal", title: "@ESCHOOL.Resources.Resource.Total", aggregates: ["sum"], template: "#if(discountTotal === 0){#  #}else{# #=kendo.toString(discountTotal, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#= kendo.toString(data.discountTotal.sum,'n') # </div>", width: "85px", attributes: { style: "text-align:right" }, editable: true },
                    { field: "discountApplied", title: "@ESCHOOL.Resources.Resource.Applied", aggregates: ["sum"], template: "#if(data.discountApplied === 0){#  #}else{# #=kendo.toString(data.discountApplied, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#= kendo.toString(data.discountApplied.sum,'n') # </div>", width: "85px", attributes: { style: "text-align:right" } },
                    { field: "discountTableID", width: "1px" },
                    { field: "studentDebtID", width: "1px" },
                ],

                save: function (data) {
                    if (data.values.discountTotal || data.values.discountApplied) {
                        dataSource.fetch();
                    }
                },
                editable: true,
                dataBinding: function () {
                    //record1 = (this.dataSource.page() - 1) * this.dataSource.pageSize();
                    record1 = 0;
                },
            });
            $("#gridDiscount").on("change", "tbody td", function (e) {
                var grid = $("#gridDiscount").data("kendoGrid");
                var dataItem = grid.dataItem($(this).closest('tr'));
                var total = $("#gridDiscount").data().kendoGrid.dataSource.aggregates().discountApplied.sum;

                var percent = dataItem[grid.columns[3].field];
                var amount = dataItem[grid.columns[4].field];
                var discountTotal = dataItem[grid.columns[5].field];
                var discountApplied = dataItem[grid.columns[6].field];

                var feeAmount = parseFloat(document.getElementById('resultAmount').value);
                var isGradual = document.getElementById('resultOnOff').value;
                var ID = parseInt(document.getElementById('resultID').value);

                if (isGradual == "true")
                    discountAmount = feeAmount - total;
                else discountAmount = feeAmount;
                if (percent > 0)
                    discount = + ((discountAmount * percent) / 100);
                else discount = + amount;

                if (discountApplied > 0) {
                    dataItem.set("discountTotal", 0);
                    dataItem.set("discountApplied", 0);
                    dataItem.set("studentDebtID", ID);
                }
                else {
                    dataItem.set("discountTotal", discount);
                    dataItem.set("discountApplied", discount);
                    dataItem.set("studentDebtID", ID);
                }
            });
        });
    </script>
    <!--#endregion -->
    <!--#region Installment -->
    <script>
        var record = 0;
        var isNew = document.getElementById('viewIsNew').checked;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "InstallmentDataRead/" + "@Model.Period" + "/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },
                        update: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "InstallmentDataUpdate/" + options.models[0].id;
                                return url;
                            },
                            complete: function (e) {
                                $("#gridInstallment").data("kendoGrid").dataSource.read();
                                $('#gridSerialNumbers').data('kendoGrid').dataSource.read();
                            },
                            type: "post",
                            dataType: "json"
                        },
                        create: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "InstallmentDataCreate/" + options.models[0].id;;
                                return url;
                            },
                            type: "post",
                            dataType: "json"
                        },

                        error: function (e) {
                            //TODO: handle the errors
                            alert(e.errorThrown);
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "studentInstallmentID",
                            fields: {
                                studentInstallment:
                                {
                                    studentInstallmentID: { editable: false, type: "number" },
                                    schoolID: { editable: false, type: "number" },
                                    studentID: { editable: false, type: "number" },
                                    period: { editable: false, type: "string" },
                                    installmentDate: { editable: false, type: "date" },
                                    installmentNo: { editable: false, type: "number" },
                                    categoryID: { editable: false, type: "number" },
                                    installmentAmount: { editable: false, type: "number", format: "{0:#,##}" },
                                    previousPayment: { editable: false, type: "number" },
                                    bankID: { editable: false, type: "number" },
                                    checkCardNo: { editable: false, type: "string" },
                                    feeName: { editable: false, type: "string" },
                                    isPrint: { editable: false, type: "boolean" },
                                    status: { editable: false, type: "string" },
                                    statusCategoryID: { editable: false, type: "number" },
                                    accountReceiptNo: { editable: false, type: "string" },
                                    paymentDate: { editable: false, type: "date" },
                                    explanation: { editable: false, type: "string" },
                                    checkBankName: { editable: false, type: "string" },
                                    checkNo: { editable: false, type: "string" },
                                    drawer: { editable: false, type: "string" },
                                    endorser: { editable: false, type: "string" },
                                },
                                parameter2:
                                {
                                    categoryID: { editable: false, type: "number" },
                                    categorySubID: { editable: false, type: "number" },
                                    categoryName: { editable: false, type: "string" },
                                    categoryLevel: { editable: false, type: "string" },
                                    sortOrder: { editable: false, type: "number" },
                                    isActive: { editable: false, type: "boolean" },
                                    nationalityCode: { editable: false, type: "string" },
                                }
                            }
                        }
                    },
                    aggregate: [
                        { field: "studentInstallment.categoryID", aggregate: "count" },
                        { field: "studentInstallment.installmentAmount", aggregate: "sum" },
                        { field: "studentInstallment.previousPayment", aggregate: "sum" }
                    ]
                });

            var first = 1;
            var grid = $("#gridInstallment").kendoGrid({
                dataSource: dataSource,
                resizable: true,
                ajax: true,
                selectable: 'row',
                toolbar: [
                    { name: "cancel" },
                    { template: kendo.template($("#template4").html()) }
                ],
                columns: [
                    /* "studentInstallment.studentInstallmentID",*/
                    { title: "#", template: "#= ++record #", width: 35, locked: true },
                    { field: "studentInstallment.categoryID", title: "@ESCHOOL.Resources.Resource.Type", width: "100px", editor: PaymentTypeDropDown, template: "#=parameter2.@Model.CategoryName2#", aggregates: ["count"], footerTemplate: "#=count#" },
                    { field: "studentInstallment.feeName", title: "@ESCHOOL.Resources.Resource.FeeName", width: "70px", template: "#=studentInstallment.feeName#" },
                    { field: "studentInstallment.installmentNo", title: "@ESCHOOL.Resources.Resource.Number", width: "70px", template: "#=studentInstallment.installmentNo#" },
                    { field: "studentInstallment.installmentDate", title: "@ESCHOOL.Resources.Resource.PaymentDate", width: "90px", editor: dateEdit, format: "{0:dd.MM.yyyy}", template: '#= kendo.toString(kendo.parseDate(studentInstallment.installmentDate), "dd/MM/yyyy")#', },
                    { field: "studentInstallment.installmentAmount", title: "@ESCHOOL.Resources.Resource.Amount", width: "90px", aggregates: ["sum"], template: "#if(studentInstallment.installmentAmount === 0){#  #}else{# #=kendo.toString(studentInstallment.installmentAmount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sum, 'n') # </div>", attributes: { style: "text-align:right" } },
                    { field: "studentInstallment.statusCategoryID", title: "@ESCHOOL.Resources.Resource.Status", width: "80px", template: "#=parameter3.@Model.CategoryName2#" },
                    { field: "studentInstallment.bankID", title: "@ESCHOOL.Resources.Resource.Bank", width: "200px", editor: BankTypeDropDown, template: '# if (studentInstallment.bankID != null) {#<div >#:bank.bankName#</div>#} else {# #}#' },
                    { field: "studentInstallment.checkBankName", title: "@ESCHOOL.Resources.Resource.CheckBank", width: "50px", template: "#=studentInstallment.checkBankName#" },
                    { field: "studentInstallment.drawer", title: "@ESCHOOL.Resources.Resource.Drawer", width: "50px", template: "#=studentInstallment.drawer#" },
                    { field: "studentInstallment.endorser", title: "@ESCHOOL.Resources.Resource.Endorser", width: "50px", template: "#=studentInstallment.endorser#" },
                    { field: "studentInstallment.explanation", title: "@ESCHOOL.Resources.Resource.Explanation", width: "50px", template: "#=studentInstallment.explanation#" },
                    { field: "studentInstallment.previousPayment", title: "@ESCHOOL.Resources.Resource.PreviousPayment", width: "90px", aggregates: ["sum"], template: "#if(studentInstallment.previousPayment === 0){#  #}else{# #=kendo.toString(studentInstallment.previousPayment, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#= sum #</div>", attributes: { style: "text-align:right" } },

                    { command: ["edit"], title: "&nbsp;", width: "160px" }

                ],
                editable: "popup",

                dataBound: function (e) {
                    var rows = e.sender.tbody.children();
                    var refund = 0;
                    var total = 0;
                    var totalPayment = 0;
                    for (var j = 0; j < rows.length; j++) {
                        var row = $(rows[j]);
                        var dataItem = e.sender.dataItem(row);

                        var amount = dataItem.get("studentInstallment.installmentAmount");
                        var payment = dataItem.get("studentInstallment.previousPayment");
                        total += amount;
                        totalPayment += payment;
                        var cell = row.children();
                        if ('@TempData["color"]' == "#222")
                            cell.addClass(getColorClass2(amount, payment));
                        else
                            cell.addClass(getColorClass(amount, payment));
                    }

                    var cashpayment = 0;
                    if ("@culture" == "tr-TR") cashpayment = parseFloat(document.getElementById("cashID").value.replace(/\./g, "").replace(",", "."));
                    else cashpayment = parseFloat(document.getElementById("cashID").value);
                    total += cashpayment

                    var refund = 0;
                    if ("@culture" == "tr-TR") refund = parseFloat(document.getElementById("refund").value.replace(/\./g, "").replace(",", "."));
                    else refund = parseFloat(document.getElementById("refund").value);
                    if (isNaN(refund)) refund = 0;

                    //alert(total);
                    total -= refund;
                    document.getElementById('subTotal').value = total.toFixed(2);
                    if (isNew == false || totalPayment > 0) $("#gridInstallment .k-grid-toolbar").hide();

                    if (isNew == false && total != 0) {
                        var toolbar = $("#toolbarMenu").data("kendoToolBar");
                        toolbar.enable("#collection", true);
                        toolbar.enable("#forms", true);
                        toolbar.enable("#invoice", true);
                        toolbar.enable("#changes", true);
                        toolbar.enable("#list", true);

                        document.getElementById("okButton").disabled = true;
                        $("#gridFees .k-grid-toolbar").hide();

                        $("#gridDiscount .k-grid-toolbar").hide();
                        $("#gridDetailed .k-grid-toolbar").hide();
                        $("#InstallmentButtons").attr('disabled', 'disabled');
                        $("#gridDiscount").attr('disabled', 'disabled');

                        $(".k-grid-save-changes", "#gridFees").hide();
                        $(".k-grid-save-changes", "#gridDiscount").hide();

                        $(".k-update")
                            .removeClass("k-update")
                            .addClass("k-state-disabled")
                            .removeAttr("href");

                        //Edit button remove
                        $("#gridInstallment tbody tr .k-grid-edit").each(function () {
                            var currentDataItem = $("#gridInstallment").data("kendoGrid").dataItem($(this).closest("tr"));
                            if (currentDataItem != null) {
                                $(this).remove();
                            }
                        })

                        $("#gridFees tbody tr .k-grid-edit").each(function () {
                            var currentDataItem = $("#gridFees").data("kendoGrid").dataItem($(this).closest("tr"));
                            if (currentDataItem != null) {
                                $(this).remove();
                            }
                        })
                        var grid = $("#gridFees").data("kendoGrid");
                        grid.hideColumn(1);
                        grid.hideColumn(8);
                        //grid.setOptions({ editable: false }); // hideColum kullanıdıktan sonra Grid ekranın yenilenmesi için kullanıldı
                    }
                },

                dataBinding: function (e) {
                    record = 0;
                    var grid = $("#gridInstallment").data("kendoGrid");
                    if (e.items.length != 0) {
                        if (e.items[0].studentInstallment.feeName != "") grid.showColumn(2)
                        else grid.hideColumn(2);
                    }
                },

            });

            function PaymentTypeDropDown(container, options) {
                $('<input required name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        autoBind: false,
                        valuePrimitive: true,
                        dataTextField: "@Model.CategoryName2",
                        dataValueField: "categoryID",
                        index: -1,
                        dataSource: {
                            dataType: "json",
                            transport: {
                                read: "/M210Student/PaymentTypeDataRead"
                            }
                        },

                        change: function () {
                            var value = this.value();
                            $.ajax({
                                type: "POST",
                                url: '/M210Student/GetNumberDataRead/' + "@Model.UserID" + "/" + "@Model.SchoolID" + "/" + value,
                                dataType: "json",

                                success: function (result) {
                                    var uid = $(".k-edit-form-container").closest("[data-role=window]").data("uid"),
                                        model = $("#gridInstallment").data("kendoGrid").dataSource.getByUid(uid);
                                    model.set("studentInstallment.installmentNo", result.lastnumber);
                                },
                                error: function (httpRequest, textStatus, errorThrown) {
                                    alert("Error: " + textStatus + " " + errorThrown + " " + httpRequest);
                                }
                            });
                        },
                    });
            };

            function BankTypeDropDown(container, options) {
                //$('<input required name="' + options.field + '"/>')
                $('<input data-text-field="bankName" data-value-field="bankID" name="sl' + options.field + '" data-bind="value:' + options.field + '" />')
                    .appendTo(container)
                    .kendoDropDownList({
                        autoBind: false,
                        valuePrimitive: true,
                        dataTextField: "bankName",
                        dataValueField: "bankID",
                        index: -1,
                        dataSource: {
                            dataType: "json",
                            transport: {
                                read: "/M210Student/BankTypeDataRead/" + "@Model.UserID",
                            }
                        }
                    });
            };
        });
        function getUpdatedDataItem() {
            return {
                id: studentInstallment.studentInstallmentID,
                installmentNo: result.lastnumber,
            };
        }

        function dateEdit(container, options) {
            $('<input   name="' + options.field + '"/>')
                .appendTo(container)
                .kendoDatePicker({
                    format: "dd/MM/yyyy"
                });
        }

        function getColorClass(amount, payment) {
            if (amount == payment) {
                return "critical";
            }
            else if (payment > 0) {
                return "ok";
            }
        }
        function getColorClass2(amount, payment) {
            if (amount == payment) {
                return "critical2";
            }
            else if (payment > 0) {
                return "ok2";
            }
        }
    </script>
    <!--#endregion -->
    <!--#region grid detailed -->
    <script>
        Date.prototype.toJSON = function () {
            return kendo.toString(this, "yyyy-MM-ddTHH:mm:ss.000Z");
        }
        Date.prototype.toUTC = function () {
            return new Date(this.getTime() + this.getTimezoneOffset() * 60000);
        }
        var record = 0;
        var isCollapse = false;

        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "SchoolDebtDetailedDataRead/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },
                        update: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "SchoolDebtDetailedDataUpdate/" + options.models[0].id;
                                return url;
                            },
                            complete: function (e) {
                                $("#gridDetailed").data("kendoGrid").dataSource.read();
                                ExpandInstallment();
                            },
                            type: "post",
                            dataType: "json"
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "studentDebtTableID",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                studentID: { editable: false, type: "number" },
                                schoolFeeID: { editable: false, type: "number" },
                                period: { editable: false, type: "string" },
                                feeName: { editable: false, type: "string" },
                                amountTable: { editable: false, type: "number" },
                                installmentTable: { type: "number", validation: { required: true, min: 0 } },
                                paymentStartDateTable: { type: "date" },
                            }
                        }
                    },
                    aggregate: [{ field: "feeName", aggregate: "count" },
                    { field: "amountTable", aggregate: "sum" }]
                });

            $("#gridDetailed").kendoGrid({
                dataSource: dataSource,
                pageable: false,
                resizable: true,
                ajax: true,
                change: onChange,
                toolbar: ["cancel", "save", {
                    template: '<div> <a class="k-button" onclick="return detailRefresh()" ><i class="k-icon k-i-reload"></i></a> </div>',
                    attributes: { style: 'float: right' },
                },],
                columns: [
                    { field: "feeName", title: "@ESCHOOL.Resources.Resource.FeeName", width: "180px", aggregates: ["count"], footerTemplate: "#=count#", template: "#=feeName#", locked: true },
                    { field: "amountTable", title: "@ESCHOOL.Resources.Resource.RegistrationFee", aggregates: ["sum"], footerTemplate: "<div>#= kendo.toString(data.amountTable.sum, 'n') # </div>", format: "{0:n}", width: "110px", locked: true },
                    { field: "installmentTable", title: "@ESCHOOL.Resources.Resource.Installment", width: "70px", template: "#=installmentTable#" },
                    { field: "paymentStartDateTable", title: "@ESCHOOL.Resources.Resource.PaymentStartDate", width: "120px", editor: dateEdit, format: "{0:dd.MM.yyyy}}", template: '#= kendo.toString(kendo.parseDate(paymentStartDateTable), "dd/MM/yyyy")#' },
                ],
                editable: true,
            });
        });

        function customDateTimePickerEditor(container, options) {
            $('<input required name="' + options.field + '"/>')
                .appendTo(container)
                .kendoDateTimePicker({});
        };
    </script>
    <!--#endregion -->
    <!--#region sibling -->
    <script>
        var isSelect = false;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "GridSiblingDataRead1/" + "@Model.UserID" + "/" + @Model.StudentID,
                            dataType: "json"
                        },
                    },

                    batch: true,
                    schema: {
                        model: {
                            id: "studentID",
                            fields: {
                                id: { editable: false, nullable: true },
                                name: { editable: false, validation: { required: true } },
                                studentClassroom: { editable: false, validation: { required: true } },
                                parentName: { editable: false, validation: { required: true } },
                                siblingID: { editable: true },
                            }
                        }
                    }
                });

            var grid = $("#gridSibling1").kendoGrid({
                toolbar: [
                    { template: kendo.template($("#template1").html()) }
                ],
                dataSource: dataSource,
                autoBind: false,
                pageable: false,
                resizable: true,
                sortable: true,
                selectable: 'row',
                columns: [{
                    template: "<div class='customer-name'>#: name #</div>",
                    field: "name", title: "@ESCHOOL.Resources.Resource.StudentName", width: "200px", attributes: { 'class': "#='siblingColor'#" }
                },
                { field: "studentClassroom", title: "@ESCHOOL.Resources.Resource.Classrooms", width: "60px", },
                { field: "parentName", title: "@ESCHOOL.Resources.Resource.ParentName", width: "115px" },
                { field: "siblingID", title: "#", width: "60px" },

                { command: [{ text: " ", name: "edit", click: showDetails }], width: "60px" }],
                dataBound: function (e) {
                    if (isSelect == false) {
                        var selectID = @Model.StudentID;
                        gridSelectById(selectID), isSelect = true
                    };
                },
            }).data("kendoGrid");
        });

        function gridSelectById(id) {
            var grid = $("#gridSibling1").data().kendoGrid;
            var data = grid.dataSource.data();
            for (var i = 0; i < data.length; i++) {
                if (data[i].siblingID == id) {
                    var select = grid.tbody.find('tr[data-uid="' + data[i].uid + '"]');
                    grid.select(select);
                }
            }
            var selectedRow = grid.select();
            var selectedDataItem = grid.dataItem(selectedRow);
        }
        function showDetails(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            window.location.replace("/M210Student/AddOrEditStudent?studentID=" + dataItem.siblingID + "&userID=@Model.UserID");
        }

        function addressCopy(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

            addressCopyStart(e, dataItem, "Student1")
            addressCopyStart(e, dataItem, "Student2")
            addressCopyStart(e, dataItem, "ParentHome")
            addressCopyStart(e, dataItem, "ParentWork")
            addressCopyStart(e, dataItem, "Parent3Address")
            addressCopyStart(e, dataItem, "DebtorHome")
            addressCopyStart(e, dataItem, "FatherHome")
            addressCopyStart(e, dataItem, "FatherWork")
            addressCopyStart(e, dataItem, "MotherHome")
            addressCopyStart(e, dataItem, "MotherWork")
            addressCopyStart(e, dataItem, "invoiceAddress")

            $("#windowSiblingNew").kendoWindow();
            var dialog = $("#windowSiblingNew").data("kendoWindow");
            setTimeout(function () {
                dialog.close();
            }, 100);
        }
        function addressCopyStart(e, dataItem, adr) {
            $.ajax({
                type: "POST",
                url: '/M210Student/GetAddress/' + dataItem.studentID + "/" + adr,
                dataType: "json",

                success: function (result) {
                    var node = $(e.target);
                    /////////////////////// Copy Yapılacak Path Oluşturuluyor /////////////////////////////

                    if (adr == 'Student1') {
                        addressCopyPath = 'studentAddress1'
                        zipCopyPath = 'studentZip1'
                        cityCopyPath = 'studentCityDropDown1'
                        townCopyPath = 'studentTownDropDown1'

                        addressPastePath = 'studentAddress1'
                        zipPastePath = 'studentZip1'
                        cityPastePathx = '#studentCityDropDown1'
                        townPastePathx = '#studentTownDropDown1'
                    };

                    if (adr == 'Student2') {
                        addressCopyPath = 'studentAddress2'
                        zipCopyPath = 'studentZip2'
                        cityCopyPath = 'studentCityDropDown2'
                        townCopyPath = 'studentTownDropDown2'

                        addressPastePath = 'studentAddress2'
                        zipPastePath = 'studentZip2'
                        cityPastePathx = '#studentCityDropDown2'
                        townPastePathx = '#studentTownDropDown2'
                    };

                    if (adr == 'ParentHome') {
                        addressCopyPath = 'parentHomeAddress'
                        zipCopyPath = 'parentHomeZip'
                        cityCopyPath = 'parentHomeCityDropDown'
                        townCopyPath = 'parentHomeTownDropDown'

                        addressPastePath = 'parentHomeAddress'
                        zipPastePath = 'parentHomeZip'
                        cityPastePathx = '#parentHomeCityDropDown'
                        townPastePathx = '#parentHomeTownDropDown'

                        parentNameCopyPath = 'parentName'
                        parentIDCopyPath = 'parentID'
                        parentHomeCopyPhone = 'parentHomePhone'
                        parentMobilePhoneCopyPath = 'parentMobilePhone'
                        parentWorkPhoneCopyPath = 'parentWorkPhone'
                        parentEMailCopyPath = 'parentEMail'
                        parentGenderTypeDropDownCopyPath = 'parentGenderTypeDropDown'
                        parentKinshipDropDownCopyPath = 'parentKinshipDropDown'
                        parentProfessionDropDownCopyPath = 'parentProfessionDropDown'

                        parentNamePastePath = 'parentName'
                        parentIDPastePath = 'parentID'
                        parentHomePhonePastePath = 'parentHomePhone'
                        parentMobilePhonePastePath = 'parentMobilePhone'
                        parentWorkPhonePastePath = 'parentWorkPhone'
                        parentEMailPastePath = 'parentEMail'
                        parentGenderTypeDropDownPastePathx = '#parentGenderTypeDropDown'
                        parentKinshipDropDownPastePathx = '#parentKinshipDropDown'
                        parentProfessionDropDownPastePathx = '#parentProfessionDropDown'
                    };
                    if (adr == 'ParentWork') {
                        addressCopyPath = 'parentWorkAddress'
                        zipCopyPath = 'parentWorkZip'
                        cityCopyPath = 'parentWorkCityDropDown'
                        townCopyPath = 'parentWorkTownDropDown'

                        addressPastePath = 'parentWorkAddress'
                        zipPastePath = 'parentWorkZip'
                        cityPastePathx = '#parentWorkCityDropDown'
                        townPastePathx = '#parentWorkTownDropDown'
                    };
                    if (adr == 'Parent3Address') {
                        addressCopyPath = 'parent3Address'
                        zipCopyPath = 'parent3Zip'
                        cityCopyPath = 'parent3CityDropDown'
                        townCopyPath = 'parent3TownDropDown'

                        addressPastePath = 'parent3Address'
                        zipPastePath = 'parent3Zip'
                        cityPastePathx = '#parent3CityDropDown'
                        townPastePathx = '#parent3TownDropDown'

                        parentNameCopyPath = 'parentName3'
                        parentIDCopyPath = 'parentID3'
                        parentHomeCopyPhone = 'parentHomePhone3'
                        parentMobilePhoneCopyPath = 'parentMobilePhone3'
                        parentWorkPhoneCopyPath = 'parentWorkPhone3'

                        parentNamePastePath = 'parentName3'
                        parentIDPastePath = 'parentID3'
                        parentHomePhonePastePath = 'parentHomePhone3'
                        parentMobilePhonePastePath = 'parentMobilePhone3'
                        parentWorkPhonePastePath = 'parentWorkPhone3'
                    };

                    if (adr == 'DebtorHome') {
                        addressCopyPath = 'debtorHomeAddress'
                        zipCopyPath = 'debtorHomeZipCode'
                        cityCopyPath = 'debtorHomeCityDropDown'
                        townCopyPath = 'debtorHomeTownDropDown'

                        debtorNameCopyPath = 'debtorName'
                        debtorPlaceOfBirthCopyPath = 'debtorPlaceOfBirth'
                        debtorDOBCopyPath = 'debtorDOB'
                        debtorFatherNameCopyPath = 'debtorFatherName'

                        debtorHomePhoneCopyPath = 'debtorHomePhone'
                        debtorMobilePhoneCopyPath = 'debtorMobilePhone'
                        debtorWorkPhoneCopyPath = 'debtorWorkPhone'

                        addressPastePath = 'debtorHomeAddress'
                        zipPastePath = 'debtorHomeZipCode'
                        cityPastePathx = '#debtorHomeCityDropDown'
                        townPastePathx = '#debtorHomeTownDropDown'

                        debtorNamePastePath = 'debtorName'
                        debtorPlaceOfBirthPastePath = 'debtorPlaceOfBirth'
                        debtorDOBPastePath = 'debtorDOB'
                        debtorFatherNamePastePath = 'debtorFatherName'

                        debtorHomePhonePastePath = 'debtorHomePhone'
                        debtorMobilePhonePastePath = 'debtorMobilePhone'
                        debtorWorkPhonePastePath = 'debtorWorkPhone'
                    };

                    if (adr == 'FatherHome') {
                        addressCopyPath = 'fatherHomeAddress'
                        zipCopyPath = 'fatherHomeZip'
                        cityCopyPath = 'fatherHomeCityDropDown'
                        townCopyPath = 'fatherHomeTownDropDown'

                        fatherNameCopyPath = 'fatherName'
                        fatherIDCopyPath = 'fatherID'
                        fatherHomePhoneCopyPath = 'fatherHomePhone'
                        fatherMobilePhoneCopyPath = 'fatherMobilePhone'
                        fatherWorkPhoneCopyPath = 'fatherWorkPhone'
                        fatherEMailCopyPath = 'fatherEMail'
                        fatherProfessionDropDownCopyPath = 'fatherProfessionDropDown'

                        addressPastePath = 'fatherHomeAddress'
                        zipPastePath = 'fatherHomeZip'
                        cityPastePathx = '#fatherHomeCityDropDown'
                        townPastePathx = '#fatherHomeTownDropDown'

                        fatherNamePastePath = 'fatherName'
                        fatherIDPastePath = 'fatherID'
                        fatherHomePhonePastePath = 'fatherHomePhone'
                        fatherMobilePhonePastePath = 'fatherMobilePhone'
                        fatherWorkPhonePastePath = 'fatherWorkPhone'
                        fatherEMailPastePath = 'fatherEMail'
                        fatherProfessionDropDownPastePathx = '#fatherProfessionDropDown'
                    };
                    if (adr == 'FatherWork') {
                        addressCopyPath = 'fatherWorkAddress'
                        zipCopyPath = 'fatherWorkZip'
                        cityCopyPath = 'fatherWorkCityDropDown'
                        townCopyPath = 'fatherWorkTownDropDown'

                        addressPastePath = 'fatherWorkAddress'
                        zipPastePath = 'fatherWorkZip'
                        cityPastePathx = '#fatherWorkCityDropDown'
                        townPastePathx = '#fatherWorkTownDropDown'
                    };

                    if (adr == 'MotherHome') {
                        addressCopyPath = 'motherHomeAddress'
                        zipCopyPath = 'motherHomeZip'
                        cityCopyPath = 'motherHomeCityDropDown'
                        townCopyPath = 'motherHomeTownDropDown'

                        motherNameCopyPath = 'motherName'
                        motherIDCopyPath = 'motherrID'
                        motherHomePhoneCopyPath = 'motherHomePhone'
                        motherMobilePhoneCopyPath = 'motherMobilePhone'
                        motherWorkPhoneCopyPath = 'motherWorkPhone'
                        motherEMailCopyPath = 'motherEMail'
                        motherProfessionDropDownCopyPath = 'motherProfessionDropDown'

                        addressPastePath = 'motherHomeAddress'
                        zipPastePath = 'motherHomeZip'
                        cityPastePathx = '#motherHomeCityDropDown'
                        townPastePathx = '#motherHomeTownDropDown'

                        motherNamePastePath = 'motherName'
                        motherIDPastePath = 'motherID'
                        motherHomePhonePastePath = 'motherHomePhone'
                        motherMobilePhonePastePath = 'motherMobilePhone'
                        motherWorkPhonePastePath = 'motherWorkPhone'
                        motherEMailPastePath = 'motherEMail'
                        motherProfessionDropDownPastePathx = '#motherProfessionDropDown'
                    };
                    if (adr == 'MotherWork') {
                        addressCopyPath = 'motherWorkAddress'
                        zipCopyPath = 'motherWorkZip'
                        cityCopyPath = 'motherWorkCityDropDown'
                        townCopyPath = 'motherWorkTownDropDown'

                        addressPastePath = 'motherWorkAddress'
                        zipPastePath = 'motherWorkZip'
                        cityPastePathx = '#motherWorkCityDropDown'
                        townPastePathx = '#motherWorkTownDropDown'
                    };

                    if (adr == 'invoiceAddress') {
                        addressCopyPath = 'invoiceAddress'
                        zipCopyPath = 'invoiceZip'
                        cityCopyPath = 'invoiceCityDropDown'
                        townCopyPath = 'invoiceTownDropDown'
                        invoiceCountryCopyPath = 'invoiceCountry'

                        addressPastePath = 'invoiceAddress'
                        zipPastePath = 'invoiceZip'
                        cityPastePathx = '#invoiceCityDropDown'
                        townPastePathx = '#invoiceTownDropDown'
                        invoiceCountryPastePath = 'invoiceCountry'

                        invoiceTitleCopyPath = 'invoiceTitle'
                        invoiceTaxOfficeCopyPath = 'invoiceTaxOffice'
                        invoiceTaxNumberCopyPath = 'invoiceTaxNumber'
                        invoicePhoneCopyPath = 'invoicePhone'
                        invoiceFaxCopyPath = 'invoiceFax'
                        invoiceEMailCopyPath = 'invoiceEMail'
                        invoiceWebAddressCopyPath = 'invoiceWebAddress'

                        invoiceTitlePastePath = 'invoiceTitle'
                        invoiceTaxOfficePastePath = 'invoiceTaxOffice'
                        invoiceTaxNumberPastePath = 'invoiceTaxNumber'
                        invoicePhonePastePath = 'invoicePhone'
                        invoiceFaxPastePath = 'invoiceFax'
                        invoiceEMailPastePath = 'invoiceEMail'
                        invoiceWebAddressPastePath = 'invoiceWebAddress'
                    };

                    document.getElementById(addressPastePath).value = result.address;
                    document.getElementById(zipPastePath).value = result.zip;
                    $(cityPastePathx).data().kendoDropDownList.value(result.city);
                    $(townPastePathx).data().kendoDropDownList.value(result.town);

                    if (adr == 'ParentHome') {
                        document.getElementById(parentNamePastePath).value = result.name;
                        document.getElementById(parentIDPastePath).value = result.id;
                        document.getElementById(parentHomePhonePastePath).value = result.homePhone;
                        document.getElementById(parentWorkPhonePastePath).value = result.workPhone;
                        document.getElementById(parentMobilePhonePastePath).value = result.mobilePhone;
                        document.getElementById(parentEMailPastePath).value = result.eMail;
                        $(parentGenderTypeDropDownPastePathx).data().kendoDropDownList.value(result.genderType);
                        $(parentProfessionDropDownPastePathx).data().kendoDropDownList.value(result.profession);
                        $(parentKinshipDropDownPastePathx).data().kendoDropDownList.value(result.kinship);
                    }
                    if (adr == 'Parent3Address') {
                        document.getElementById(parentNamePastePath).value = result.name;
                        document.getElementById(parentIDPastePath).value = result.id;
                        document.getElementById(parentHomePhonePastePath).value = result.homePhone;
                        document.getElementById(parentWorkPhonePastePath).value = result.workPhone;
                        document.getElementById(parentMobilePhonePastePath).value = result.mobilePhone;
                    }
                    if (adr == 'DebtorHome') {
                        var currentDate = new Date(result.debtorDOB);
                        var d = currentDate.toLocaleDateString('@culture');

                        document.getElementById(debtorNamePastePath).value = result.debtorName;
                        document.getElementById(debtorPlaceOfBirthPastePath).value = result.debtorPlaceOfBirth;
                        document.getElementById(debtorDOBPastePath).value = d;

                        document.getElementById(debtorFatherNamePastePath).value = result.debtorFatherName;

                        document.getElementById(debtorHomePhonePastePath).value = result.homePhone;
                        document.getElementById(debtorWorkPhonePastePath).value = result.workPhone;
                        document.getElementById(debtorMobilePhonePastePath).value = result.mobilePhone;
                    }
                    if (adr == 'FatherHome') {
                        document.getElementById(fatherNamePastePath).value = result.fatherName;
                        document.getElementById(fatherIDPastePath).value = result.fatherID;
                        document.getElementById(fatherHomePhonePastePath).value = result.fatherHomePhone;
                        document.getElementById(fatherWorkPhonePastePath).value = result.fatherWorkPhone;
                        document.getElementById(fatherMobilePhonePastePath).value = result.fatherMobilePhone;
                        $(fatherProfessionDropDownPastePathx).data().kendoDropDownList.value(result.fatherProfession);
                        document.getElementById(fatherEMailPastePath).value = result.fatherEMail;
                    }
                    if (adr == 'MotherHome') {
                        document.getElementById(motherNamePastePath).value = result.motherName;
                        document.getElementById(motherIDPastePath).value = result.motherID;
                        document.getElementById(motherHomePhonePastePath).value = result.motherHomePhone;
                        document.getElementById(motherWorkPhonePastePath).value = result.motherWorkPhone;
                        document.getElementById(motherMobilePhonePastePath).value = result.motherMobilePhone;
                        $(motherProfessionDropDownPastePathx).data().kendoDropDownList.value(result.motherProfession);
                        document.getElementById(motherEMailPastePath).value = result.motherEMail;
                    }

                    if (adr == 'invoiceAddress') {
                        document.getElementById(invoiceCountryPastePath).value = result.invoiceCountry;
                        document.getElementById(invoiceTitlePastePath).value = result.invoiceTitle;
                        document.getElementById(invoiceTaxOfficePastePath).value = result.invoiceTaxOffice;
                        document.getElementById(invoiceTaxNumberPastePath).value = result.invoiceTaxNumber;
                        document.getElementById(invoicePhonePastePath).value = result.invoicePhone;
                        document.getElementById(invoiceFaxPastePath).value = result.invoiceFax;
                        document.getElementById(invoiceEMailPastePath).value = result.invoiceEMail;
                        document.getElementById(invoiceWebAddressPastePath).value = result.invoiceWebAddress;
                    }
                },
            });
        }
    </script>
    <!--#endregion -->
    <!--#region sibling2 -->

    <script>
        function onChangeSibling(arg) {
            document.getElementById('selectedID').value = this.selectedKeyNames().join(", ");
        };
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "GridSiblingDataRead2/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "studentID",
                            fields: {
                                studentID: { editable: false, nullable: true },
                                name: { editable: false, validation: { required: true } },
                                studentClassroom: { editable: false, validation: { required: true } },
                                parentName: { editable: false, validation: { required: true } },
                                siblingID: { editable: true },
                            }
                        }
                    }
                });
            function onClick(e) {
                var grid = $("#gridSibling2").data("kendoGrid");
                var row = $(e.target).closest("tr");
            };

            var grid = $("#gridSibling2").kendoGrid({
                toolbar: [
                    { template: kendo.template($("#template2").html()) }
                ],
                dataSource: dataSource,
                navigatable: true,
                autoBind: false,
                pageable: false,
                resizable: true,
                sortable: true,
                change: onChangeSibling,
                selectable: "multiple",
                columns: [
                    { selectable: true, width: "30px", title: "@ESCHOOL.Resources.Resource.Select", name: "selectable11", id: "selectable11", headerTemplate: "@ESCHOOL.Resources.Resource.Select", attributes: { style: "text-align:center" } },
                    { template: "<div class='customer-name'>#: name #</div>", field: "name", title: "@ESCHOOL.Resources.Resource.StudentName", width: "200px" },
                    { field: "studentClassroom", title: "@ESCHOOL.Resources.Resource.Classrooms", width: "60px" },
                    { field: "parentName", title: "@ESCHOOL.Resources.Resource.ParentName", width: "115px" },
                    { field: "studentID", title: "#", width: "60px" },
                ],
            }).data("kendoGrid");
            grid.tbody.on("click", ".k-checkbox", onClick);
        });

    </script>

    <script>
        function gridSibling2Read() {
            $.ajax({
                type: "POST",
                url: "/M210Student/GridSiblingDataRead2/" + "@Model.UserID" + "/" + "@Model.StudentID",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    var grid = $("#gridSibling2").data("kendoGrid");
                    var dataSource = new kendo.data.DataSource({ data: result });
                    grid.setDataSource(dataSource);
                    setTimeout(function () {
                        grid.dataSource.read();
                    }, 1000);

                },
            });
        }
    </script>
    <script>
        function toolbar_click1() {
            var window = $("#windowSibling").data("kendoWindow");
            window.close();

            return false;
        }

        function toolbar_click2() {
            $.ajax({
                type: "POST",
                url: "/M210Student/GridSiblingDataUpdate/" + "@Model.UserID" + "/" + "@Model.StudentID" + "/" + document.getElementById('selectedID').value,

                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $("#gridSibling1").data("kendoGrid").dataSource.read();
                    if (result.total == 0) $("#siblingNone").hide();
                    else $("#siblingNone").show();
                },
            });

            $(gridSibling2).data("kendoGrid").dataSource.data([]);
            var panelBar = $("#panelbarSibling").data("kendoPanelBar");
            panelBar.select(panelBar.element.children("li").eq(1));
            panelBar._selected[0].style.display = 'block';
            var item = panelBar.select();
            panelBar.collapse(item);

            return false;
        }

        function toolbar_click3() {
            var window = $("#windowStudents").data("kendoWindow");
            window.close();

            return false;
        }
        function toolbar_click33() {
            var window = $("#windowSiblingNew").data("kendoWindow");
            window.close();

            return false;
        }

        function toolbar_click4() {
            $(document).ready(function () {
                var myWindow = $("#windowInstallment"),
                    undo = $("#undo");

                undo.click(function () {
                    myWindow.data("kendoWindow").open();
                    undo.fadeOut();
                });

                function onClose() {
                    undo.fadeIn();
                }

                myWindow.kendoWindow({
                    title: getByCulture('@culture', 'amountselection'),
                    visible: false,
                    actions: [
                        "Pin",
                        "Minimize",
                        "Maximize",
                        "Close"
                    ],
                    close: onClose
                }).data("kendoWindow").center().open();
                myWindow.data("kendoWindow").open().center().element.closest(".k-window").css({ top: 10, });
                displayLoading("#gridWindowInstallment");
                $("#gridWindowInstallment").data("kendoGrid").dataSource.read();
            });
        }

        function toolbar_click5() {
            var window = $("#windowInstallment").data("kendoWindow");
            window.close();
            document.getElementById("CustomR1").checked = true;

            return false;
        }

        function toolbar_gridInstallmentSave() {
            var grid = $("#gridWindowInstallment").data("kendoGrid");
            grid.saveChanges();
        }
    </script>


    <script>
        var record3 = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "GridStudentsDataRead/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "studentID",
                            fields: {
                                studentID: { editable: false, nullable: true },
                                name: { editable: false, validation: { required: true } },
                                studentClassroom: { editable: false, validation: { required: true } },
                                parentName: { editable: false, validation: { required: true } },
                                siblingID: { editable: true },
                            }
                        }
                    }
                });
            function onClick(e) {
                var grid = $("#gridStudents").data("kendoGrid");
                var row = $(e.target).closest("tr");
            };

            var grid = $("#gridStudents").kendoGrid({
                toolbar: [
                    { template: kendo.template($("#template3").html()) }
                ],
                dataSource: dataSource,
                navigatable: true,
                autoBind: false,
                pageable: false,
                resizable: true,
                sortable: true,
                //change: onChangeSibling,
                selectable: 'row',
                columns: [
                    { title: "#", template: "#= ++record3 #", width: 40 },
                    { template: "<div class='customer-name'>#: name #</div>", field: "name", title: "@ESCHOOL.Resources.Resource.StudentName", width: "200px" },
                    { field: "studentClassroom", title: "@ESCHOOL.Resources.Resource.Classrooms", width: "60px" },
                    { field: "parentName", title: "@ESCHOOL.Resources.Resource.ParentName", width: "115px" },
                    { field: "studentID", title: "#", width: "60px" },
                    { command: [{ text: " ", name: "edit", click: showDetails }], width: "60px" }],
                dataBinding: function () {
                    record3 = 0;
                },
            }).data("kendoGrid");
            grid.tbody.on("click", ".k-checkbox", onClick);
        });
    </script>

    <script>
        var record3 = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "GridStudentsDataRead/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "studentID",
                            fields: {
                                studentID: { editable: false, nullable: true },
                                name: { editable: false, validation: { required: true } },
                                studentClassroom: { editable: false, validation: { required: true } },
                                parentName: { editable: false, validation: { required: true } },
                                siblingID: { editable: true },
                            }
                        }
                    }
                });
            function onClick2(e) {
                var grid = $("#gridStudents2").data("kendoGrid");
                var row = $(e.target).closest("tr");
            };

            var grid = $("#gridStudents2").kendoGrid({
                toolbar: [
                    { template: kendo.template($("#template33").html()) }
                ],
                dataSource: dataSource,
                navigatable: true,
                autoBind: false,
                pageable: false,
                resizable: true,
                sortable: true,
                //change: onChangeSibling,
                selectable: 'row',
                columns: [
                    { title: "#", template: "#= ++record3 #", width: 40 },
                    { template: "<div class='customer-name'>#: name #</div>", field: "name", title: "@ESCHOOL.Resources.Resource.StudentName", width: "200px" },
                    { field: "studentClassroom", title: "@ESCHOOL.Resources.Resource.Classrooms", width: "60px" },
                    { field: "parentName", title: "@ESCHOOL.Resources.Resource.ParentName", width: "115px" },
                    { field: "studentID", title: "#", width: "60px" },
                    { command: [{ text: " ", name: "edit", iconClass: "k-icon k-i-copy", click: addressCopy }], width: "60px" }],
                dataBinding: function () {
                    record3 = 0;
                },
            }).data("kendoGrid");
            grid.tbody.on("click", ".k-checkbox", onClick2);
        });
    </script>

    <script>
        function onChangeAmount(e) {
            var chk = document.getElementById("CustomR1").checked;
            var amount = 0;
            var previous = 0;
            if (chk == true) {
                amount = parseFloat(document.getElementById('installmentAmountId').value);
            }
            else {
                amount = parseFloat(document.getElementById('balanceId').value);
            }

            var colInx = document.getElementById('colInx').value;
            if (amount > 0 && colInx == 1) {
                var rows = e.sender.select();
                rows.each(function (e) {
                    var grid = $("#gridWindowInstallment").data("kendoGrid");
                    var dataItem = grid.dataItem(this);
                    if (chk == true)
                        dataItem.set("studentInstallment.installmentAmount", amount);
                    else {
                        previous = parseFloat(dataItem.get("studentInstallment.installmentAmount"));
                        amount += previous;
                        dataItem.set("studentInstallment.installmentAmount", amount);
                    }

                    var row = grid.dataSource.indexOf(dataItem);
                    grid.select("tr:eq(" + row + ")");
                })

            }
            sumInstallment2(1);
        };
        var record4 = 0;
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "InstallmentDataRead/" + "@Model.Period" + "/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json",
                        },
                        update: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "InstallmentDataUpdate/" + options.models[0].id;
                                return url;
                            },
                            complete: function (e) {
                                toolbar_click5();
                                $("#gridInstallment").data("kendoGrid").dataSource.read();
                            },
                            type: "post",
                            dataType: "json"
                        },
                        create: {
                            url: function (options) {
                                var url = crudServiceBaseUrl + "InstallmentDataUpdate/" + options.models[0].id;;
                                return url;
                            },
                            complete: function (e) {
                                toolbar_click5();
                                $("#gridInstallment").data("kendoGrid").dataSource.read();
                            },
                            type: "post",
                            dataType: "json"
                        },

                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "studentInstallmentID",
                            fields: {
                                studentInstallmentID: { editable: false, type: "number" },
                                schoolID: { editable: false, type: "number" },
                                studentID: { editable: false, type: "number" },
                                installmentDate: { editable: true, type: "date" },
                                installmentAmount: { editable: true, type: "number", format: "{0:#,##}" },
                                isPrint: { editable: true, type: "boolean" },
                            }
                        }
                    },
                    aggregate: [
                        { field: "studentInstallment.installmentAmount", aggregate: "sum" },
                    ]
                });

            var grid = $("#gridWindowInstallment").kendoGrid({
                toolbar: [
                    { name: "cancel" },
                    { template: kendo.template($("#template5").html()) }
                ],

                dataSource: dataSource,
                save: function () {
                    var grid = this;
                    setTimeout(function () {
                        grid.refresh();
                    })
                },
                navigatable: true,
                autoBind: false,
                change: onChangeAmount,
                selectable: "row",
                columns: [
                    { title: "#", template: "#= ++record4 #", width: 25 },
                    { selectable: true, title: "@ESCHOOL.Resources.Resource.Select", headerTemplate: "@ESCHOOL.Resources.Resource.Select", width: "30px", id: "selectable111", attributes: { style: "text-align:center" } },
                    { field: "studentInstallment.installmentDate", title: "@ESCHOOL.Resources.Resource.PaymentDate", width: "90px", editor: dateEdit, format: "{0:dd.MM.yyyy}", template: '#= kendo.toString(kendo.parseDate(studentInstallment.installmentDate), "dd/MM/yyyy")#', },
                    { field: "studentInstallment.installmentAmount", title: "@ESCHOOL.Resources.Resource.Amount", width: "90px", template: "#if(studentInstallment.installmentAmount === 0){#  #}else{# #=kendo.toString(studentInstallment.installmentAmount, 'n')# #}#", footerTemplate: "<div style='text-align: right'>#: kendo.toString(sumInstallment2(1),'n') # </div>", attributes: { style: "text-align:right" } },
                ],
                editable: true,
                dataBinding: function () {
                    record4 = 0;
                },

            }).data("kendoGrid");
            $(grid.tbody).on("click", "td", function (e) {
                var row = $(this).closest("tr");
                var colIdx = $("td", row).index(this);
                document.getElementById('colInx').value = colIdx;
            });
        });

        function sumInstallment2(e) {
            var total = 0;
            var $grid = $('#gridWindowInstallment');
            var kendo = $grid.data().kendoGrid;
            var data = kendo.dataSource.data();
            var amount = 0;
            var isZero = true;
           
            for (var i = 0; i < data.length; i++) {
                if (e == 1) amount += parseFloat(data[i].studentInstallment.installmentAmount);
                if (amount == NaN) {
                    amount = 0;
                }
                if (data[i].studentInstallment.installmentAmount == 0) {
                    isZero = false;
                }
            }
            var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().amount.sum; 
            var cashpayment = document.getElementById("cashID").value;

            var balance = 0;
            if (unitPrice > 0)
                var balance = unitPrice - amount;

            if (balance >= cashpayment) balance = balance - cashpayment;
            document.getElementById('balanceId').value = balance;
           
            if (balance == 0 && isZero == true)
                document.getElementById("okId").disabled = false;
            else
                document.getElementById("okId").disabled = true;

            total = amount;
            return total;
        }
    </script>

    <!--#endregion -->
    <!--#region serial number -->
    <script>
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "SerialNumbersDataRead/" + "@Model.UserID",
                            dataType: "json"
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "viewModelId",
                            fields: {
                                viewModelId: { editable: false, type: "number" },
                                name: { editable: false, type: "string" },
                                serialNo: {
                                    editable: false, type: "number"
                                }

                            }
                        }
                    }
                });

            $("#gridSerialNumbers").kendoGrid({
                dataSource: dataSource,
                pageable: false,
                resizable: true,
                height: 130,
                selectable: 'row',
                ajax: true,
                columns: [
                    { field: "name", width: "70px", height: "10px", headerAttributes: { style: "display: none" }, template: '<span style="font-weight: 600;">#= name #</span>' },
                    { field: "serialNo", width: "80px", height: "10px", template: "#=serialNo#", headerAttributes: { style: "display: none" } },
                ],

                editable: "inline",
            });
        })

    </script>
    <!--#endregion -->
    <!--#region Student Periods -->

    <script>
        function onChangeP(arg) {
            var grid = $("#gridStudentPeriods").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            var selection = grid.select();
            var rowData = grid.dataItem(selection);
            var period = rowData.period;

            var grid = $("#gridFees").data("kendoGrid");
            grid.dataSource.options.transport.read.url = "/M210Student/SchoolDebtDataRead/" + period + "/" + "@Model.UserID" + "/" + "@Model.StudentID";
            grid.dataSource.read();
            grid.refresh();

            var grid = $("#gridInstallment").data("kendoGrid");
            grid.dataSource.options.transport.read.url = "/M210Student/InstallmentDataRead/" + period + "/" + "@Model.UserID" + "/" + "@Model.StudentID",
                grid.dataSource.read();
            grid.refresh();

            //$.ajax({
            //    type: "POST",
            //    url: '/M210Student/InstallmentDataRead/' + period + "/" + "@Model.UserID" + "/" + "@Model.StudentID",
            //    dataType: "json",
            //    success: function (result) {
            //        var grid = $("#gridInstallment").data("kendoGrid");
            //        var dataSource = new kendo.data.DataSource({ data: result });
            //        grid.setDataSource(dataSource);
            //    },
            //});
        };
        $(document).ready(function () {
            var crudServiceBaseUrl = "/M210Student/",
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "StudentPeriodsDataRead/" + "@Model.UserID" + "/" + "@Model.StudentID",
                            dataType: "json"
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    schema: {
                        model: {
                            id: "studentPeriodID",
                            fields: {
                                period: { editable: false, type: "string" },
                                classroomName: { editable: false, type: "string" }
                            }
                        }
                    }
                });

            $("#gridStudentPeriods").kendoGrid({
                dataSource: dataSource,
                pageable: false,
                resizable: true,
                height: 125,
                selectable: 'row',
                change: onChangeP,
                ajax: true,
                columns: [
                    { field: "period", width: "65px", height: "10px", headerAttributes: { style: "display: none" }, template: '<span style="font-weight: 600;">#= period #</span>' },
                    { field: "classroomName", width: "80px", height: "10px", template: "#=classroomName#", headerAttributes: { style: "display: none" } },
                ],

                editable: "inline",
            });
        })
    </script>
    <!--#endregion -->
    <!--#region panelbar  Expand / Colleps -->
    <script>
        function CollepsFee() {
            var panelBar = $("#panelbar1").data("kendoPanelBar");
            panelBar.select(panelBar.element.children("li").eq(0));
            panelBar._selected[0].style.display = 'block';
            var item = panelBar.select();
            panelBar.collapse(item);
        }
        if ("@Model.IsPermissionFee" != 'False') {
            function ExpandFee() {
                var panelBar = $("#panelbar1").data("kendoPanelBar");
                panelBar.select(panelBar.element.children("li").eq(0));
                panelBar._selected[0].style.display = 'block';
                var item = panelBar.select();
                panelBar.expand(item);

            }
        }
        function ExpandDiscount() {
            var panelBar = $("#panelbar1").data("kendoPanelBar");
            panelBar.enable($("#panelbardiscount"), true);
            panelBar.expand($("#panelbardiscount"));
            panelBar.collapse($("#panelbardetailfee"));
        }

        function CollepsDiscount() {
            var panelBar = $("#panelbar1").data("kendoPanelBar");
            panelBar.collapse($("#panelbardiscount"));
            panelBar.enable($("#panelbardiscount"), false);
        }

        function ExpandFeeDetail() {
            var panelBar = $("#panelbar1").data("kendoPanelBar");
            panelBar.expand($("#panelbardetailfee"));
        }
        function CollepsFeeDetail() {
            var panelBar = $("#panelbar1").data("kendoPanelBar");
            panelBar.collapse($("#panelbardetailfee"));
        }

        function CollepsInstallment() {
            var panelBar = $("#panelbar2").data("kendoPanelBar");
            panelBar.select(panelBar.element.children("li").eq(1));
            panelBar._selected[0].style.display = 'block';
            var item = panelBar.select();
            panelBar.collapse(item);
        }
        if ("@Model.IsPermissionFee" != 'False') {
            function ExpandInstallment() {
                var panelBar = $("#panelbar2").data("kendoPanelBar");
                panelBar.select(panelBar.element.children("li").eq(1));
                panelBar._selected[0].style.display = 'block';
                var item = panelBar.select();
                panelBar.expand(item);
            }
        }

        function CollepsDetailed() {
            var panelBar = $("#panelbar2").data("kendoPanelBar");
            panelBar.select(panelBar.element.children("li").eq(2));
            panelBar._selected[0].style.display = 'block';
            var item = panelBar.select();
            panelBar.collapse(item);
        }
        function ExpandDetailed() {
            var panelBar = $("#panelbar2").data("kendoPanelBar");
            panelBar.select(panelBar.element.children("li").eq(2));
            panelBar._selected[0].style.display = 'block';
            var item = panelBar.select();
            panelBar.expand(item);
        }
    </script>
    <!--#endregion -->
    <!--#region scrit btn, body -->
    <script>
        var ID, btn, odd = 0, even = 0, result, i, j, z, tcTotal = 0;
        function myFunction(e) {
            btn = e.id;

            if (btn == "btn1") { IDT = "#studentID", StudentID = "studentID" }
            else
                if (btn == "btn2") { IDT = "#parentID", StudentID = "parentID" }
                else
                    if (btn == "btn3") { IDT = "#parentID3", StudentID = "parentID3" }
                    else
                        if (btn == "btn4") { IDT = "#fatherID", StudentID = "fatherID" }
                        else { IDT = "#motherID", ID1 = "motherID" }

            ID = document.querySelector(IDT);

            odd = 0, even = 0, tcTotal = 0
            for (i = 0; i < 9; i += 2) {
                odd += Number(ID.value[i]);
            }
            odd *= 7;
            for (j = 1; j < 8; j += 2) {
                even += Number(ID.value[j]);
            }
            result = Math.abs(odd - even);
            for (z = 0; z < 10; z++) {
                tcTotal += Number(ID.value[z]);
            }
            if (ID.value.length !== 11) {
                idFalse()
            }
            else
                if (result % 10 != Number(ID.value[9])) {
                    idFalse()
                } else if (tcTotal % 10 != Number(ID.value[10])) {
                    idFalse()
                } else {
                    idTrue()
                }
        };

        function idFalse() {
            document.getElementById(ID1).style.color = "white";
            document.getElementById(ID1).style.backgroundColor = "red";
        };
        function idTrue() {
            document.getElementById(ID1).style.color = "white";
            document.getElementById(ID1).style.backgroundColor = "green";
        };

        function IdChange(e) {
            document.getElementById(e.id).innerHTML = '<i class = "fa fa-spinner fa-spin"></i>@ESCHOOL.Resources.Resource.IdControl';
        };
        function IdChangeOld(e) {
            document.getElementById(e.id).innerHTML = '<i class = "fa fa-bell"></i>@ESCHOOL.Resources.Resource.IdNumber';
        };

        function IdReset(e) {
            btn = e.id;
            if (btn == "btn1") ID1 = "id1"
            else if (btn == "btn2") ID1 = "parentID"
            else if (btn == "btn3") ID1 = "parentID3"
            else if (btn == "btn4") ID1 = "fatherID"
            else if (btn == "btn5") ID1 = "motherID"
            document.getElementById(ID1).style.color = "black";
            document.getElementById(ID1).style.backgroundColor = "white";
        };
    </script>

    <script>
        $(document).ready(function () {
            $('body').kendoTooltip({
                filter: '[title]:not([title=""])',
                autoHide: true,
                position: "top",
                animation: {
                    open: {
                        effects: "zoom",
                        duration: 150
                    }
                }
            });
        });
    </script>
    <!--#endregion -->
    <!--#region toolbar -->
    <style>
        #logoId img {
            width: 60px;
        }
    </style>
    <script>
        $(document).ready(function () {
            $("#toolbarMenu").kendoToolBar({
                items: [

                    {
                        template: "<img src='../Upload/Images/Logo.png' class='user-image' style='width:60px;'/>",
                        overflow: "never",
                    },

                    { template: "<h4 style='padding-left:2px;'>@ESCHOOL.Resources.Resource.StudentRegistrationForm</h4>" },

                    // { type: "spacer" },

                    {
                        type: "buttonGroup",
                        buttons: [
                            { icon: "arrow-end-left", group: "move", click: function (e) { Navigate('First') } },
                            { icon: "arrow-60-left", group: "move", click: function (e) { Navigate('Previous') } },
                            { icon: "arrow-60-right", group: "move", click: function (e) { Navigate('Next') } },
                            { icon: "arrow-end-right", group: "move", click: function (e) { Navigate('Last') } }
                        ]
                    },

                    {
                        type: "splitButton", id: "filter",
                        text: "", icon: "@Model.SortIcon",
                        menuButtons: [
                            { text: "@ESCHOOL.Resources.Resource.RecordSequential", id: "RecordSequential", icon: "pencil" },
                            { text: "@ESCHOOL.Resources.Resource.SortByName", id: "SortByName", icon: "sort-asc" },
                            { text: "@ESCHOOL.Resources.Resource.SortBySurname", id: "SortBySurname", icon: "sort-desc" },
                        ]
                    },

                    { type: "button", id: "students", icon: "user" },
                    { type: "button", id: "sibling", icon: "tell-a-friend" },
                    { type: "button", id: "collection", text: "@ESCHOOL.Resources.Resource.Collection", icon: "dollar", enable: false },
                    // { type: "separator" },
                    { type: "button", id: "forms", text: "@ESCHOOL.Resources.Resource.Forms", icon: "document-manager" },
                    // { type: "separator" },
                    {
                        type: "splitButton", id: "invoice", enable: false,
                        text: "@ESCHOOL.Resources.Resource.Invoice", icon: "file-data",
                        menuButtons: [
                            { text: "@ESCHOOL.Resources.Resource.InvoiceEntryProcesses", icon: "track-changes-accept", url: "/M400Invoice/InvoicePlan?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { text: "@ESCHOOL.Resources.Resource.InvoiceProgram", icon: "page-header-section", url: "/M400Invoice/Invoice?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { text: "@ESCHOOL.Resources.Resource.BatchInvoicePrinting", icon: "aggregate-fields", url: "/M400Invoice/InvoiceBatch?userID=@Model.UserID&studentID=@Model.StudentID&sdateString=&isLoop=false" },
                            { text: "<hr style='margin:0px; padding:0px; color:black;' />", enable: false },
                        ]
                    },

                    // { type: "separator" },
                    { type: "button", text: "@ESCHOOL.Resources.Resource.Accounting", icon: "filter-add-expression", url: "/M500Accounting/index?userID=@Model.UserID&studentID=@Model.StudentID" },
                    // { type: "separator" },
                    {
                        type: "splitButton", id: "list", enable: false,
                        text: "@ESCHOOL.Resources.Resource.List", icon: "file-add",
                        menuButtons: [
                            { text: "@ESCHOOL.Resources.Resource.StudentFeeStatusList", icon: "saturation", url: "/ListPanel/List101?userID=@Model.UserID&studentID=@Model.StudentID&msg=0&exitID=1" },
                            { text: "@ESCHOOL.Resources.Resource.ListofStudentsbyEnrollmentTypeandStatus", icon: "group-section", url: "/ListPanel/List203?userID=@Model.UserID&studentID=@Model.StudentID&msg=0&exitID=1" },
                            { text: "<hr style='margin:0px; padding:0px; color:black;' />", enable: false },

                            { text: "@ESCHOOL.Resources.Resource.StudentCard", id: "studentCard", icon: "user" },
                            { text: "@ESCHOOL.Resources.Resource.StudentCardandInvoiceInformation", id: "studentCardAndInvoice", icon: "page-footer-section" },
                            { text: "<hr style='margin:0px; padding:0px; color:black;' />", enable: false },
                            { text: "@ESCHOOL.Resources.Resource.RegistrationRenewalFormandInvoiceInformation", id: "renewalFormAndInvoice", icon: "page-footer-section" },

                            { text: "<hr style='margin:0px; padding:0px; color:black;' />", enable: false },
                        ]
                    },

                    // { type: "separator" },
                    {
                        type: "splitButton", id: "changes", enable: false,
                        text: "@ESCHOOL.Resources.Resource.Change", icon: "track-changes-reject",
                        menuButtons: [
                            { text: "@ESCHOOL.Resources.Resource.Modification", id: "changemodification", icon: "tick", icon: "edit", url: "/M220Student/ChangeInStudent?studentID=" + "@Model.StudentID" + "&userID=@Model.UserID" },
                            { text: "@ESCHOOL.Resources.Resource.Refund", id: "changerefund", icon: "undo", url: "/M230Student/Refund?studentID=" + "@Model.StudentID" + "&userID=@Model.UserID" },
                            { text: "@ESCHOOL.Resources.Resource.RefundFutureDate", id: "changerefundFutureDate", icon: "clock", url: "/M240Student/RefundFutureDate?studentID=" + "@Model.StudentID" + "&userID=@Model.UserID" },
                            { text: "@ESCHOOL.Resources.Resource.Canceling", id: "changerecanceling", icon: "close", url: "/M250Student/CancellationProcedures?studentID=" + "@Model.StudentID" + "&userID=@Model.UserID" },
                            { text: "<hr style='margin:0px; padding:0px; color:black;' />", enable: false },
                        ]
                    },
                    // { type: "separator" },

                    { type: "button", id: "submit", text: "@ESCHOOL.Resources.Resource.Submit", icon: "save" },
                    // { type: "separator" },

                    { type: "button", id: "help", text: "@ESCHOOL.Resources.Resource.Help", icon: "help" },
                    // { type: "separator" },

                    { type: "button", id: "back", text: "@ESCHOOL.Resources.Resource.Back", attributes: { style: "float: right" }, icon: "rewind" },
                    // { type: "separator" },

                    { type: "button", id: "exit", text: "@ESCHOOL.Resources.Resource.Exit", attributes: { style: "float: right" }, icon: "logout" },

                    {
                        type: "buttonGroup",
                        buttons: [
                            { id: "school", text: "@ESCHOOL.Resources.Resource.SchoolInformationEntry", icon: "home", showIcon: "overflow", url: "/M110SchoolInfo/index?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { enable: false, attributes: { class: "no-button" } },
                            { text: "@ESCHOOL.Resources.Resource.ClassroomDefinitions", icon: "file-add", showIcon: "overflow", url: "/M120Classroom/index?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { text: "@ESCHOOL.Resources.Resource.FeeEntriesbyClassType", icon: "toc-section-level", showIcon: "overflow", url: "/M130SchoolFee/index?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { text: "@ESCHOOL.Resources.Resource.AppliedDiscounts", icon: "percent", showIcon: "overflow", url: "/M140DiscountTable/index?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { enable: false, attributes: { class: "no-button" } },
                            { text: "@ESCHOOL.Resources.Resource.BankEntries", icon: "bold", showIcon: "overflow", url: "/M150Bank/index?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { text: "@ESCHOOL.Resources.Resource.ParametersUsedintheProgram", icon: "filter-add-group", showIcon: "overflow", url: "/M160Parameter/index?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { text: "@ESCHOOL.Resources.Resource.SchoolBusEntries", icon: "k-icon k-i-tell-a-friend", url: "/M170SchoolBusService/index?userID=@Model.UserID&studentID=@Model.StudentID" },
                            { enable: false, attributes: { class: "no-button" } },
                        ]
                    },
                ],
                click: function (e) {
                    if (e.id == "submit") {
                        var fName = document.getElementById("firstName").value;
                        var lName = document.getElementById("lastName").value;

                        if (fName == "" || lName == "") {
                            msg = getByCulture('@culture', 'nameRequiredField');
                            alert(msg);

                            return;
                        }

                        var instTotal = document.getElementById("subTotal").value;

                        var unitPrice = $("#gridFees").data().kendoGrid.dataSource.aggregates().unitPrice.sum;
                        var discount = $("#gridFees").data().kendoGrid.dataSource.aggregates().discount.sum;
                        var feetotal = (unitPrice - discount).toFixed(2);
                        var refund = parseFloat(document.getElementById("refund").value);
                        if (isNaN(refund)) refund = 0;

                        if (isNaN(instTotal)) instTotal = 0;
                        if (isNaN(feetotal)) feetotal = 0;

                        if (instTotal != feetotal && refund == 0) {
                            msg = getByCulture('@culture', 'installmentControl');
                            msg1 = getByCulture('@culture', 'installmentControl1');
                            msg2 = getByCulture('@culture', 'installmentControl2');
                            msg += "\n" + msg1 + feetotal + "\n" + msg2 + instTotal;
                            alert(msg);

                            return;
                        }

                        var grid = $("#gridFees").data("kendoGrid");
                        grid.saveChanges();
                        var grid = $("#gridDiscount").data("kendoGrid");
                        grid.saveChanges();

                        //Cobol'dan aktarma yapıldıktan sonra, Bilgi değişikliğinde SUBMIT tetiklenmiyordu
                        //ID kullanılarak sorun çözüldü, Her iki durumda da çalışıyor.
                        //$("form").submit();
                        $("#M210StudentID")[0].submit();
                        showPopupNotification();
                    }

                    if (e.id == "exit" || e.id == "back")
                        var isNew = document.getElementById('viewIsNew').checked;
                        if (isNew) {
                            msg = getByCulture('@culture', 'exitProgram');
                            kendo.confirm(msg)
                                .then(function () {
                                    $('body').addClass('waiting');
                                    $('html,body').css('cursor', 'wait');
                                    $('cancel').addClass('disabled');
                                    exitProgram(e);
                                    $('body').removeClass('waiting');
                                    $('html,body').css('cursor', 'default');
                                }, function () {
                                    //kendo.alert("You chose to Cancel action.");
                                });
                        }
                        else {
                            exitProgram(e);
                        }

                    if (e.id == "collection") {
                        window.location.replace("/M300Collections/Collections?userID=@Model.UserID&studentID=@Model.StudentID&isMenu=1");
                    }

                    if (e.id == "students") {
                        var myWindow = $("#windowStudents"),
                            undo = $("#undo");

                        undo.click(function () {
                            myWindow.data("kendoWindow").open();
                            undo.fadeOut();
                        });

                        function onClose() {
                            undo.fadeIn();
                        }

                        myWindow.kendoWindow({
                            width: "800px",
                            title: getByCulture('@culture', 'studentselection'),
                            visible: false,
                            actions: [
                                "Pin",
                                "Minimize",
                                "Maximize",
                                "Close"
                            ],
                            close: onClose
                        }).data("kendoWindow").center().open();

                        displayLoading("#gridStudents");
                        myWindow.data("kendoWindow").open().center().element.closest(".k-window").css({ top: 10, });;
                        $("#gridStudents").data("kendoGrid").dataSource.read();
                    }

                    if (e.id == "sibling" && isNew == false) {
                        var myWindow = $("#windowSibling"),
                            undo = $("#undo");

                        undo.click(function () {
                            myWindow.data("kendoWindow").open();
                            undo.fadeOut();
                        });

                        function onClose() {
                            undo.fadeIn();
                        }

                        myWindow.kendoWindow({
                            width: "800px",
                            title: getByCulture('@culture', 'siblingselection'),
                            visible: false,
                            actions: [
                                "Pin",
                                "Minimize",
                                "Maximize",
                                "Close"
                            ],
                            close: onClose
                        }).data("kendoWindow").center().open();

                        displayLoading("#gridSibling2");
                        myWindow.data("kendoWindow").open().center().element.closest(".k-window").css({ top: 10, });
                        $("#gridSibling1").data("kendoGrid").dataSource.read();
                        $("#gridSibling2").data("kendoGrid").dataSource.read();
                    }

                    if (e.id == "sibling" && isNew == true) {
                        var myWindow = $("#windowSiblingNew"),
                            undo = $("#undo");

                        undo.click(function () {
                            myWindow.data("kendoWindow").open();
                            undo.fadeOut();
                        });

                        function onClose() {
                            undo.fadeIn();
                        }

                        myWindow.kendoWindow({
                            width: "800px",
                            title: getByCulture('@culture', 'studentInfoCopy'),
                            visible: false,
                            actions: [
                                "Pin",
                                "Minimize",
                                "Maximize",
                                "Close"
                            ],
                            close: onClose
                        }).data("kendoWindow").center().open();

                        displayLoading("#gridStudents2");
                        myWindow.data("kendoWindow").open().center().element.closest(".k-window").css({ top: 10, });;
                        $("#gridStudents2").data("kendoGrid").dataSource.read();
                    }

                    if (e.id == "forms") {
                        window.location.replace("/ListPanel/List1000?userID=@Model.UserID&studentID=@Model.StudentID&msg=0&exitID=1&receiptNo=' '&paymentSW=0&formTypeSW=1");
                    }

                    if (e.id == "studentCard") {
                        var firstName = document.getElementById('firstName').value;
                        var lastName = document.getElementById('lastName').value;
                        var studentName = firstName + " " + lastName;
                        window.location.replace("../ListPanel/List204?userID=@Model.UserID&studentID=@Model.StudentID&exitID=7");
                    }
                    if (e.id == "studentCardAndInvoice") {
                        var firstName = document.getElementById('firstName').value;
                        var lastName = document.getElementById('lastName').value;
                        var studentName = firstName + " " + lastName;
                        window.location.replace("../ListPanel/List205?userID=@Model.UserID&studentID=@Model.StudentID&exitID=7");
                    }
                    if (e.id == "renewalFormAndInvoice") {
                        var firstName = document.getElementById('firstName').value;
                        var lastName = document.getElementById('lastName').value;
                        var studentName = firstName + " " + lastName;
                        window.location.replace("../ListPanel/List207?userID=@Model.UserID&studentID=@Model.StudentID&exitID=7");
                    }

                    if (e.id == "help") {
                        var myWindow = $("#panelbarHelp").show();
                        var panelBar = $("#panelbarHelp").data("kendoPanelBar");
                        panelBar.select(panelBar.element.children("li").eq(0));
                        panelBar._selected[0].style.display = 'block';
                        var item = panelBar.select();
                        panelBar.expand(item);
                    }

                    if (e.id == "filter" || e.id == "RecordSequential" || e.id == "SortByName" || e.id == "SortBySurname") {

                        filterButton(e.id);
                    }

                },
            });
            $('#students').kendoTooltip({
                position: "bottom",
                content: "@ESCHOOL.Resources.Resource.tooltipMsg1"
            });
            $('#sibling').kendoTooltip({
                position: "bottom",
                content: "@ESCHOOL.Resources.Resource.tooltipMsg2"
            });
            if ("@Model.IsPermissionFee" == 'False') {
                var toolbar = $("#toolbarMenu").data("kendoToolBar"),
                    collectionButton = $("#collection"),
                    isDisabled = collectionButton.hasClass("k-state-disabled");
                toolbar.enable(collectionButton, isDisabled);

                changesButton = $("#changes"),
                    isDisabled = changesButton.hasClass("k-state-disabled");
                toolbar.enable(changesButton, isDisabled);

                permissionsControlFee();
            }

        });

        function exitProgram(e) {
            var newStudentID = ('@TempData["studentID"]');
            if (newStudentID > 0)
                $.ajax({
                    url: '/M210Student/GridDataDeleteNew/' + newStudentID + "/" + "@Model.UserID",
                    type: "post",
                    dataType: "json"
                });
            if (e.id == "exit")
                window.location.replace("/Home/index?userID=" + "@Model.UserID");
            else
                window.location.replace("/M210Student/index?userID=@Model.UserID&studentID=@Model.StudentID");
        }
    </script>


    <!--#endregion -->

</body>

<!--#region fee and discount selecting, tex, datepicker -->
<script>
    $(function () {
        $("#switch").kendoSwitch({
            messages: {
                checked: '<i class="fas fa-plus"></i><i class="fas fa-percent"></i></i>',
                unchecked: '<i class="fas fa-toggle-off"></i>'
            },
            change: function (e) {
                document.getElementById('resultOnOff').value = e.checked;
            }
        });
    })
</script>
<script>
    $(document).ready(function () {
        $("#textbox").kendoTextBox({
            placeholder: "Name..."
        });
    });
</script>
<script>
    $("#schoolyearstart").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    $("#schoolyearend").kendoDatePicker({
        format: "dd/MM/yyyy"
    });

    $("#financialyearstart").kendoDatePicker({
        format: "dd/MM/yyyy"
    });

    $("#financialyearend").kendoDatePicker({
        format: "dd/MM/yyyy"
    });

    $("#dateOfRegistration").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    $("#dateofbird").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    $("#firstdate").kendoDatePicker({
        format: "dd/MM/yyyy"

    });
    $("#transactiondate").kendoDatePicker({
        format: "dd/MM/yyyy"
    });

    $("#scholarshipstartdate").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    $("#scholarshipenddate").kendoDatePicker({
        format: "dd/MM/yyyy"
    });
    $("#debtorDOB").kendoDatePicker({
        format: "dd/MM/yyyy"
    });

    $(".credit_card").kendoMaskedTextBox({
        mask: "0000 0000 0000 0000"
    });
    $("#phone_number").kendoMaskedTextBox({
        mask: "(999) 000-0000"
    });
    $("#subTotal").kendoMaskedTextBox({
        mask: "0,000.00"
    });
</script>
<!--#endregion -->
<!--#region combo classroom, #status, gender, registration, payment  -->
<script>
    $(document).ready(function () {
        $("#classroomDropDown").kendoDropDownList({
            optionLabel: { classroomName: getByCulture('@culture', 'select'), classroomID: "0" },
            dataTextField: "classroomName",
            dataValueField: "classroomID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/ClassroomCombo/" + "@Model.UserID",
                    }
                }
            },
            change: function () {
                var value = this.value();
                if ("@Model.Period" == "@TempData["NewPeriod"]") {
                    if (value != 0) {
                        $.ajax({
                            type: "POST",
                            url: '/M210Student/ClassromControl/' + "@Model.UserID" + "/" + value,
                            dataType: "json",

                            success: function (result) {
                                document.getElementById('classroomID').value = value;
                                if (result.isExceeded) {
                                    msg1 = getByCulture('@culture', 'exceeded1');
                                    msg11 = getByCulture('@culture', 'exceeded11');
                                    msg2 = getByCulture('@culture', 'exceeded2');
                                    msg22 = getByCulture('@culture', 'exceeded22');
                                    msg3 = getByCulture('@culture', 'exceeded3');
                                    str = msg1 + result.quota + msg11 + "\n" + msg2 + result.isExisting + msg22 + "\n" + msg3;
                                    alert(str);
                                }
                            },
                            error: function (httpRequest, textStatus, errorThrown) {
                                alert("Error: " + textStatus + " " + errorThrown + " " + httpRequest);
                            }
                        });
                    };
                }
                else {
                    msg11 = getByCulture('@culture', 'schoolChangeClassroom1') + "@TempData["NewPeriod"]";
                    msg22 = getByCulture('@culture', 'schoolChangeClassroom2');
                    alert(msg11 + "\n" + msg22);
                }
            },
        });
    });

    $(document).ready(function () {
        $("#schoolDropDown").kendoDropDownList({
            optionLabel: { companyName: getByCulture('@culture', 'select'), schoolID: "0" },
            dataTextField: "companyName",
            dataValueField: "schoolID",
            autoWidth: true,
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M220Student/SchoolCombo",
                    }
                }
            },
            change: function (e) {
                msg = getByCulture('@culture', 'schoolChange');
                kendo.confirm(msg)
                    .then(function () {
                        $('body').addClass('waiting');
                        $('html,body').css('cursor', 'wait');
                        $('cancel').addClass('disabled');
                        okSchoolChange();
                        $('body').removeClass('waiting');
                        $('html,body').css('cursor', 'default');
                    }, function () {
                        msgCancel = getByCulture('@culture', 'schoolChangeCancel');
                        kendo.alert(msgCancel);
                        var ddl1 = @Model.SchoolID;
                        var ddl2 = $("#schoolDropDown").data("kendoDropDownList");
                        ddl2.value(ddl1);
                    });
            }
        });
        if ('@TempData["newYear"]' == 1)
            $('#schoolDropDown').data('kendoDropDownList').enable(true);
    });

    function okSchoolChange() {
        document.getElementById('isMenu').value = 9;
        $("#M210StudentID").submit();
    }

    $(document).ready(function () {
        var isNewBool = document.getElementById('viewIsNew').checked;
        $("#statusDropDown").kendoDropDownList({
            index: 0,
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/StatuCombo/" + isNewBool + "/" + "@Model.UserID"
                    }
                }
            }
        });

    });

    $(document).ready(function () {
        $("#genderTypeDropDown").kendoDropDownList({
            index: 0,
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/GenderTypeCombo"
                    }
                }
            },
            change: function () {
                var result = document.getElementById("studentPicture").value;
                if (result == "male.jpg" || result == "female.jpg") {
                    var value = this.value();
                    var txt = this.text();
                    if (txt == "Erkek" || txt == "Male")
                        $('#imgpreviewStudent').attr('src', '@Url.Content("~/Upload/Students/male.JPG")');
                    else
                        $('#imgpreviewStudent').attr('src', '@Url.Content("~/Upload/Students/female.JPG")');
                }
            }
        });
    });

    $(document).ready(function () {
        $("#parentGenderTypeDropDown").kendoDropDownList({
            index: 0,
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/GenderTypeCombo"
                    }
                }
            },
            change: function () {
                var value = this.value();
                var txt = this.text();
                if (txt == "Erkek" || txt == "Male")
                    $('#imgpreviewParent').attr('src', '@Url.Content("~/Upload/Parents/male.JPG")');
                else
                    $('#imgpreviewParent').attr('src', '@Url.Content("~/Upload/Parents/female.JPG")');
            }

        });
    });

    $(document).ready(function () {
        $("#registrationTypeDropDown").kendoDropDownList({
            index: 0,
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/RegistrationTypeCombo"
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#bloodGroupDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/BloodGroupTypeCombo"
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#nationalityTypeDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/NationalityTypeCombo"
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#religiousTypeDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/ReligiousTypeCombo"
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#paymentDropDown").kendoDropDownList({
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            value: "@Model.SchoolInfo.DefaultPaymentTypeCategoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/PaymentTypeCombo"
                    }
                }
            },
            change: function (e) {
                var value = this.text();
                var dropdownlist = $("#bankNameDropDown").data("kendoDropDownList");
                if (value == "Elden") {
                    dropdownlist.value("");
                    dropdownlist.text("");
                    dropdownlist.enable(false);
                }
                else {
                    dropdownlist.enable(true);
                }
            },
        });
    });
</script>

<script>
    $(document).ready(function () {
        var studentCityDropDown1 = $("#studentCityDropDown1").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#studentTownDropDown1").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "studentCityDropDown1",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: studentCityDropDown1.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var studentCityDropDown2 = $("#studentCityDropDown2").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#studentTownDropDown2").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "studentCityDropDown2",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: studentCityDropDown2.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var parentHomeCityDropDown = $("#parentHomeCityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#parentHomeTownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "parentHomeCityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: parentHomeCityDropDown.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var parentWorkCityDropDown = $("#parentWorkCityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#parentWorkTownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "parentWorkCityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: parentWorkCityDropDown.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var parent3CityDropDown = $("#parent3CityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#parent3TownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "parent3CityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: parent3CityDropDown.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var fatherHomeCityDropDown = $("#fatherHomeCityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#fatherHomeTownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "fatherHomeCityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: fatherHomeCityDropDown.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var fatherWorkCityDropDown = $("#fatherWorkCityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#fatherWorkTownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "fatherWorkCityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: fatherWorkCityDropDown.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var motherHomeCityDropDown = $("#motherHomeCityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#motherHomeTownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "motherHomeCityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: motherHomeCityDropDown.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var motherWorkCityDropDown = $("#motherWorkCityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#motherWorkTownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "motherWorkCityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: motherWorkCityDropDown.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });

    $(document).ready(function () {
        var invoiceCityDropDown = $("#invoiceCityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#invoiceTownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "invoiceCityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: invoiceCityDropDown.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });


    $(document).ready(function () {
        var debtorCityID = $("#debtorHomeCityDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/CityCombo"
                    }
                }
            }
        }).data("kendoDropDownList");

        $("#debtorHomeTownDropDown").kendoDropDownList({
            autoBind: false,
            cascadeFrom: "debtorHomeCityDropDown",
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/TownCombo/",
                        data: function (e) {
                            return { id: debtorCityID.value() }
                        }
                    }
                }
            }
        }).data("kendoDropDownList");
    });
</script>

<script>
    $(document).ready(function () {
        $("#parentKinshipDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/KinshipCombo"
                    }
                }
            }
        });
    });

</script>

<script>
    $(document).ready(function () {
        $("#parentProfessionDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/ProfessionCombo"
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#fatherProfessionDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/ProfessionCombo"
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#motherProfessionDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/ProfessionCombo"
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#previousSchoolDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/PreviousSchoolCombo"
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#previousBranchDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName2": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName2",
            dataValueField: "categoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/PreviousBranchCombo"
                    }
                }
            }
        });
    });
</script>

<script>
    $(document).ready(function () {
        $("#bankNameDropDown").kendoDropDownList({
            optionLabel: { bankName: getByCulture('@culture', 'select'), bankID: "0" },
            value: "@Model.SchoolInfo.DefaultBankID",
            dataTextField: "bankName",
            dataValueField: "bankID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/BankNameCombo?userID=" + "@Model.UserID",
                    }
                }
            },

        });
    });

    $(document).ready(function () {
        $("#shuttleDepartureDropDown").kendoDropDownList({
            optionLabel: { busRoute: getByCulture('@culture', 'select'), schoolBusServicesID: "0" },
            dataTextField: "busRoute",
            dataValueField: "schoolBusServicesID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/SchoolBusServiceDataRead/" + @Model.UserID,
                    }
                }
            },
            change: function () {
                var value = this.value();
                $('#shuttleDepartureDriverDropDownID').data().kendoDropDownList.value(value);
            }
        });
    });
    $(document).ready(function () {
        $(".shuttleDriverDropDown").kendoDropDownList({
            optionLabel: { driverName: getByCulture('@culture', 'select'), schoolBusServicesID: "0" },
            dataTextField: "driverName",
            dataValueField: "schoolBusServicesID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/SchoolBusServiceDataRead/" + @Model.UserID,
                    }
                }
            }
        });
    });

    $(document).ready(function () {
        $("#shuttleReturnDropDown").kendoDropDownList({
            optionLabel: { busRoute: getByCulture('@culture', 'select'), schoolBusServicesID: "0" },
            dataTextField: "busRoute",
            dataValueField: "schoolBusServicesID",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/SchoolBusServiceDataRead/" + @Model.UserID,
                    }
                }
            },
            change: function () {
                var value = this.value();
                $('#shuttleReturnDriverDropDownID').data().kendoDropDownList.value(value);
            }
        });
    });

    $(document).ready(function () {
        $("#serviceStatusDropDown").kendoDropDownList({
            optionLabel: { "@Model.CategoryName3": getByCulture('@culture', 'select'), categoryID: "0" },
            dataTextField: "@Model.CategoryName3",
            dataValueField: "schoolFeeID",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        dataType: "json",
                        url: "/M210Student/ServicesStatusCombo/" + @Model.SchoolID,
                    }
                }
            }
        }).data("kendoComboBox");
    });
</script>
<!--#endregion -->
<!--#region script upload -->
<script>
    var previewingStudent = function (event) {
        var result = document.getElementById("imgpreviewStudent")
        result.src = URL.createObjectURL(event.target.files[0]);
    };
    var previewingParent = function (event) {
        var result = document.getElementById("imgpreviewParent")
        result.src = URL.createObjectURL(event.target.files[0]);
    };

    $(document).ready(function () {
        $("#imgfileStudent").kendoUpload({
            async: {
                removeUrl: "remove",
                autoUpload: true
            },
            localization: {
                select: '<i class="fa fa-upload"></i>'
            },
            showFileList: false
        });
    });

    $(document).ready(function () {
        $("#imgfileParent").kendoUpload({
            async: {
                removeUrl: "remove",
                autoUpload: true
            },
            localization: {
                select: '<i class="fa fa-upload"></i>'
            },
            showFileList: false
        });
    });
</script>

<script>
    $(document).ready(function () {
        $('#M210StudentID').submit(function () {
            $('#M210StudentID').find(" [required=\"required\"]").attr("required", false);
            $(".needValidation").attr("required", true);
        });
        var validator = $("#M210StudentID").kendoValidator().data("kendoValidator"),
            status = $(".status");
    });
</script>

<script>
    function formDeleteclick(e) {
        var newStudentID = ('@TempData["studentID"]');
        if (newStudentID > 0)
            $.ajax({
                url: '/M210Student/GridDataDeleteNew/' + newStudentID  "/" + "@Model.UserID",
                type: "post",
                dataType: "json"
            });

        window.location.replace("/M210Student/index?schoolID=@Model.SchoolID");
    }
</script>
<!--#endregion -->
<span id="popupNotification"></span>
<script>
    function showPopupNotification() {
        var popupNotification = $("#popupNotification").kendoNotification().data("kendoNotification");
        var d = new Date();
        popupNotification.show(kendo.toString(d, 'HH:MM:ss.') + kendo.toString(d.getMilliseconds(), "000"), "error");
    };
</script>
<script>
    function Navigate(navigate) {
        var firstName = document.getElementById("firstName").value;
        var lastName = document.getElementById("lastName").value;
        var classroomID = document.getElementById("classroomDropDown").value;
        $.ajax({
            url: '/M210Student/Navigate/' + navigate + "/" + classroomID + "/" + "@Model.Period" + "/" + "@Model.SchoolID" + "/" + "@Model.StudentID" + "/" + firstName + "/" + lastName,
            type: "post",
            dataType: "json",
            success: function (result) {
                window.location.replace("/M210Student/AddOrEditStudent?studentID=" + result.studentID + "&userID=" + "@Model.UserID");
            }
        });
    }
</script>

<script>
    function filterButton(e) {
        msg1 = document.getElementById("SortmsgSchool").value;
        msg2 = document.getElementById("SortMsg").value;
        msg11 = document.getElementById("SortMsgClassroom").value;
        msg = document.getElementById("SortMessage").value;

        var classroomID = document.getElementById("classroomDropDown").value;

        if (e != "filter") {
            $("#firstNameNone").hide();
            $("#lastNameNone").hide();
            if (e == "SortByName") $("#firstNameNone").show();
            if (e == "SortBySurname") $("#lastNameNone").show();
        }
        $.ajax({
            url: '/M210Student/SortTypeUpdate/' + "@Model.SchoolID" + "/" + "@Model.Period" + "/" + "@Model.UserID" + "/" + classroomID + "/" + "@Model.StudentID" + "/" + e,
            type: "post",
            dataType: "json",
            success: function (result) {
                if (e == "filter") {
                    if (result.sortOption == false) {
                        $("#filter").kendoButton({ icon: "filter-clear" });
                        setTimeout(function () {
                            alert(msg1 + " " + result.count + " " + msg2 + "\n" + msg);
                        }, 50);
                    }
                    if (result.sortOption == true) {
                        $("#filter").kendoButton({ icon: "filter" });
                        setTimeout(function () {
                            alert(result.classroom + " " + msg11 + " " + result.count + " " + msg2 + "\n" + msg);
                        }, 50);
                    }
                }
            }
        });
    }
</script>

<script>
    $(document).ready(function () {
        function onSelect(e) {
            var tabName = $(e.item).find("> .k-link").text();
            if (tabName.trim() == "Ajanda" || tabName.trim() == "Agenda") {
                window.open("/M210Student/StudentTask?userID=@Model.UserID&studentID=@Model.StudentID&taskTypeID=1", 'theFrame');
            }
        }

        $("#tabstrip").kendoTabStrip({
            select: onSelect,
            //contentUrls: [, "../content/web/tabstrip/ajax/ajaxContent1.html", "error.html"],
            animation: {
                // fade-out current tab over 1000 milliseconds
                close: {
                    duration: 1000,
                    effects: "fadeOut"
                },
                // fade-in new tab over 500 milliseconds
                open: {
                    duration: 500,
                    effects: "fadeIn"
                }
            }
        });
    });
</script>
<script>
    $(document).ready(function () {
        var tabstrip = $("#tabstrip").kendoTabStrip().data("kendoTabStrip")
        if ("@Model.IsExplanationShow" == "True")
            tabstrip.select(6);
        else
            tabstrip.select(0);
    });
</script>
